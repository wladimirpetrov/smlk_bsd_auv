var dataJson = {"arch":{"ispc":false,"isunix":true,"ismac":false},"build":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1","ref":false,"files":[{"name":"ert_main.cpp","type":"source","group":"main","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Main file","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ert_main.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#include <stdio.h>\n#include <stdlib.h>\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private.h\"\n#include \"rtwtypes.h\"\n#include \"limits.h\"\n#include \"rt_nonfinite.h\"\n#include \"linuxinitialize.h\"\n#define UNUSED(x)                      x = x\n#define NAMELEN                        16\n\n// Function prototype declaration\nvoid exitFcn(int sig);\nvoid *terminateTask(void *arg);\nvoid *baseRateTask(void *arg);\nvoid *subrateTask(void *arg);\nvolatile boolean_T stopRequested = false;\nvolatile boolean_T runModel = true;\nsem_t stopSem;\nsem_t baserateTaskSem;\npthread_t schedulerThread;\npthread_t baseRateThread;\nvoid *threadJoinStatus;\nint terminatingmodel = 0;\nvoid *baseRateTask(void *arg)\n{\n  runModel = (rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feed_M) == (NULL));\n  while (runModel) {\n    sem_wait(&baserateTaskSem);\n    ctrl_TT_ad_ctrl_cpp_ros_feedback_1_step();\n\n    // Get model outputs here\n    stopRequested = !((rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feed_M) ==\n                       (NULL)));\n    runModel = !stopRequested;\n  }\n\n  runModel = 0;\n  terminateTask(arg);\n  pthread_exit((void *)0);\n  return NULL;\n}\n\nvoid exitFcn(int sig)\n{\n  UNUSED(sig);\n  rtmSetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feed_M, \"stopping the model\");\n}\n\nvoid *terminateTask(void *arg)\n{\n  UNUSED(arg);\n  terminatingmodel = 1;\n\n  {\n    runModel = 0;\n  }\n\n  // Terminate model\n  ctrl_TT_ad_ctrl_cpp_ros_feedback_1_terminate();\n  sem_post(&stopSem);\n  return NULL;\n}\n\nint main(int argc, char **argv)\n{\n  UNUSED(argc);\n  UNUSED(argv);\n  void slros_node_init(int argc, char** argv);\n  slros_node_init(argc, argv);\n  rtmSetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feed_M, 0);\n\n  // Initialize model\n  ctrl_TT_ad_ctrl_cpp_ros_feedback_1_initialize();\n\n  // Call RTOS Initialization function\n  myRTOSInit(0.05, 0);\n\n  // Wait for stop semaphore\n  sem_wait(&stopSem);\n\n#if (MW_NUMBER_TIMER_DRIVEN_TASKS > 0)\n\n  {\n    int i;\n    for (i=0; i < MW_NUMBER_TIMER_DRIVEN_TASKS; i++) {\n      CHECK_STATUS(sem_destroy(&timerTaskSem[i]), 0, \"sem_destroy\");\n    }\n  }\n\n#endif\n\n  return 0;\n}\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.cpp","type":"source","group":"model","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ctrl_TT_ad_ctrl_cpp_ros_feedback_1.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n#include \"rtwtypes.h\"\n#include <math.h>\n#include \"rt_assert.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private.h\"\n\nextern \"C\"\n{\n\n#include \"rt_nonfinite.h\"\n\n}\n\n#include <string.h>\n#include \"rt_defines.h\"\n\n// Block signals (default storage)\nB_ctrl_TT_ad_ctrl_cpp_ros_fee_T ctrl_TT_ad_ctrl_cpp_ros_feedb_B;\n\n// Block states (default storage)\nDW_ctrl_TT_ad_ctrl_cpp_ros_fe_T ctrl_TT_ad_ctrl_cpp_ros_feed_DW;\n\n// Real-time model\nRT_MODEL_ctrl_TT_ad_ctrl_cpp__T ctrl_TT_ad_ctrl_cpp_ros_feed_M_ =\n  RT_MODEL_ctrl_TT_ad_ctrl_cpp__T();\nRT_MODEL_ctrl_TT_ad_ctrl_cpp__T *const ctrl_TT_ad_ctrl_cpp_ros_feed_M =\n  &ctrl_TT_ad_ctrl_cpp_ros_feed_M_;\n\n// Forward declaration for local functions\nstatic void ctrl_TT_ad_ctrl_c_BernsteinPoly(const real_T b_Cp[183], real_T t,\n  real_T t0, real_T tf, real_T poly_t[3]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fee_inv(real_T x);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fe_norm(const real_T x[4]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(const real_T x[4], real_T y[4]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros__mpower(const real_T a[4], real_T b, real_T\n  c[4]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fe_log2(real_T x);\nstatic void ctrl_TT_ad_ctrl_c_getExpmParams(const real_T A[4], real_T A2[4],\n  real_T A4[4], real_T A6[4], int32_T *m, real_T *s);\nstatic void ctrl_TT_ad_c_recomputeBlockDiag(const real_T A[4], real_T F[4],\n  int32_T blockFormat);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros__xgehrd(void);\nstatic real_T ctrl_TT_ad_ctrl_c_rt_hypotd_snf(real_T u0, real_T u1);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_xdlanv2(real_T *a, real_T *b, real_T *c,\n  real_T *d, real_T *rt1r, real_T *rt1i, real_T *rt2r, real_T *rt2i, real_T *cs,\n  real_T *sn);\nstatic int32_T ctrl_TT_ad_ctrl_cpp_ros__xhseqr(real_T h[4], real_T z[4]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_f_schur(const real_T A[4], real_T V[4],\n  real_T T[4]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_fe_expm(real_T A[4], real_T F[4]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros__norm_b(const real_T x[9]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros__inv_jg(const real_T x[9], real_T y[9]);\nstatic void ctrl_TT_ad_ctrl_cpp_ro_mpower_f(const real_T a[9], real_T b, real_T\n  c[9]);\nstatic void ctrl_TT_ad_ct_padeApproximation(const real_T A[9], const real_T A2[9],\n  const real_T A4[9], const real_T A6[9], int32_T m, real_T F[9]);\nstatic void ctrl_TT_ad_recomputeBlockDiag_b(const real_T A[9], real_T F[9],\n  const int32_T blockFormat[2]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_xnrm2_l(int32_T n, const real_T x[9],\n  int32_T ix0);\nstatic void ctrl_TT_ad_ctrl_cpp_ros__xzlarf(int32_T m, int32_T n, int32_T iv0,\n  real_T tau, real_T C[9], int32_T ic0, real_T work[3]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_f_xnrm2(int32_T n, const real_T x[3]);\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_xzlarfg(int32_T n, real_T *alpha1, real_T\n  x[3]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_fe_xrot(int32_T n, real_T x[9], int32_T ix0,\n  int32_T iy0, real_T c, real_T s);\nstatic int32_T ctrl_TT_ad_ctrl_cpp_ro_xhseqr_d(real_T h[9], real_T z[9]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros_schur_c(const real_T A[9], real_T V[9],\n  real_T T[9]);\nstatic void ctrl_TT_ad_ctrl_cpp_ros__expm_f(real_T A[9], real_T F[9]);\nint32_T div_nzp_s32_floor(int32_T numerator, int32_T denominator)\n{\n  uint32_T absDenominator;\n  uint32_T absNumerator;\n  uint32_T tempAbsQuotient;\n  boolean_T quotientNeedsNegation;\n  absNumerator = numerator < 0 ? ~static_cast<uint32_T>(numerator) + 1U :\n    static_cast<uint32_T>(numerator);\n  absDenominator = denominator < 0 ? ~static_cast<uint32_T>(denominator) + 1U :\n    static_cast<uint32_T>(denominator);\n  quotientNeedsNegation = ((numerator < 0) != (denominator < 0));\n  tempAbsQuotient = absNumerator / absDenominator;\n  if (quotientNeedsNegation) {\n    absNumerator %= absDenominator;\n    if (absNumerator > 0U) {\n      tempAbsQuotient++;\n    }\n  }\n\n  return quotientNeedsNegation ? -static_cast<int32_T>(tempAbsQuotient) :\n    static_cast<int32_T>(tempAbsQuotient);\n}\n\nint32_T div_nzp_s32(int32_T numerator, int32_T denominator)\n{\n  uint32_T tempAbsQuotient;\n  tempAbsQuotient = (numerator < 0 ? ~static_cast<uint32_T>(numerator) + 1U :\n                     static_cast<uint32_T>(numerator)) / (denominator < 0 ? ~\n    static_cast<uint32_T>(denominator) + 1U : static_cast<uint32_T>(denominator));\n  return (numerator < 0) != (denominator < 0) ? -static_cast<int32_T>\n    (tempAbsQuotient) : static_cast<int32_T>(tempAbsQuotient);\n}\n\nreal_T rt_powd_snf(real_T u0, real_T u1)\n{\n  real_T y;\n  if (rtIsNaN(u0) || rtIsNaN(u1)) {\n    y = (rtNaN);\n  } else {\n    real_T tmp;\n    real_T tmp_0;\n    tmp = fabs(u0);\n    tmp_0 = fabs(u1);\n    if (rtIsInf(u1)) {\n      if (tmp == 1.0) {\n        y = 1.0;\n      } else if (tmp > 1.0) {\n        if (u1 > 0.0) {\n          y = (rtInf);\n        } else {\n          y = 0.0;\n        }\n      } else if (u1 > 0.0) {\n        y = 0.0;\n      } else {\n        y = (rtInf);\n      }\n    } else if (tmp_0 == 0.0) {\n      y = 1.0;\n    } else if (tmp_0 == 1.0) {\n      if (u1 > 0.0) {\n        y = u0;\n      } else {\n        y = 1.0 / u0;\n      }\n    } else if (u1 == 2.0) {\n      y = u0 * u0;\n    } else if ((u1 == 0.5) && (u0 >= 0.0)) {\n      y = sqrt(u0);\n    } else if ((u0 < 0.0) && (u1 > floor(u1))) {\n      y = (rtNaN);\n    } else {\n      y = pow(u0, u1);\n    }\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/MATLAB Function2'\nstatic void ctrl_TT_ad_ctrl_c_BernsteinPoly(const real_T b_Cp[183], real_T t,\n  real_T t0, real_T tf, real_T poly_t[3])\n{\n  real_T tp;\n  real_T ttp;\n  for (int32_T i = 0; i < 61; i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i] = 1.0;\n  }\n\n  for (int32_T i = 0; i < 30; i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i + 1] = (61.0 - (static_cast<real_T>(i) +\n      1.0)) * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i] / (static_cast<real_T>(i) +\n      1.0);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[59 - i] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i + 1];\n  }\n\n  for (int32_T i = 0; i < 61; i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T[i] = 1.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TT[i] = 1.0;\n  }\n\n  tp = t - t0;\n  ttp = tf - t;\n  for (int32_T i = 0; i < 60; i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T[i + 1] = tp *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T[i];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T[i] *= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TT[59 - i] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TT[60 - i] * ttp;\n  }\n\n  tp = rt_powd_snf(tf - t0, 60.0);\n  for (int32_T i = 0; i < 61; i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T[i] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TT[i] / tp;\n  }\n\n  for (int32_T i = 0; i < 3; i++) {\n    poly_t[i] = 0.0;\n    for (int32_T i_0 = 0; i_0 < 61; i_0++) {\n      poly_t[i] += b_Cp[3 * i_0 + i] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.B[i_0];\n    }\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fee_inv(real_T x)\n{\n  return 1.0 / x;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fe_norm(const real_T x[4])\n{\n  real_T y;\n  int32_T j;\n  boolean_T exitg1;\n  y = 0.0;\n  j = 0;\n  exitg1 = false;\n  while ((!exitg1) && (j < 2)) {\n    real_T s;\n    int32_T s_tmp;\n    s_tmp = j << 1;\n    s = fabs(x[s_tmp + 1]) + fabs(x[s_tmp]);\n    if (rtIsNaN(s)) {\n      y = (rtNaN);\n      exitg1 = true;\n    } else {\n      if (s > y) {\n        y = s;\n      }\n\n      j++;\n    }\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(const real_T x[4], real_T y[4])\n{\n  if (fabs(x[1]) > fabs(x[0])) {\n    real_T t;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r = x[0] / x[1];\n    t = 1.0 / (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r * x[3] - x[2]);\n    y[0] = x[3] / x[1] * t;\n    y[1] = -t;\n    y[2] = -x[2] / x[1] * t;\n    y[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r * t;\n  } else {\n    real_T t;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r = x[1] / x[0];\n    t = 1.0 / (x[3] - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r * x[2]);\n    y[0] = x[3] / x[0] * t;\n    y[1] = -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r * t;\n    y[2] = -x[2] / x[0] * t;\n    y[3] = t;\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros__mpower(const real_T a[4], real_T b, real_T\n  c[4])\n{\n  if (floor(b) == b) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = fabs(b);\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f <= 2.147483647E+9) {\n      int32_T b_n;\n      int32_T n;\n      int32_T nb;\n      int32_T nbitson;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0] = a[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1] = a[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2] = a[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3] = a[3];\n      n = static_cast<int32_T>(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f);\n      b_n = n;\n      nbitson = 0;\n      nb = -2;\n      while (b_n > 0) {\n        nb++;\n        if ((static_cast<uint32_T>(b_n) & 1U) != 0U) {\n          nbitson++;\n        }\n\n        b_n >>= 1;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f <= 2.0) {\n        if (b == 2.0) {\n          for (b_n = 0; b_n < 2; b_n++) {\n            n = b_n << 1;\n            c[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = a[n];\n            c[n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * a[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i = a[n + 1];\n            c[n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * a[2];\n            c[n + 1] = 0.0;\n            c[n + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * a[1];\n            c[n + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * a[3];\n          }\n        } else if (b == 1.0) {\n          c[0] = a[0];\n          c[1] = a[1];\n          c[2] = a[2];\n          c[3] = a[3];\n        } else if (b == -1.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(a, c);\n        } else if (b == -2.0) {\n          for (b_n = 0; b_n < 2; b_n++) {\n            n = b_n << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = a[n];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * a[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i = a[n + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * a[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * a[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * a[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h,\n            c);\n        } else {\n          boolean_T firstmult;\n          firstmult = rtIsNaN(a[0]);\n          if (!firstmult) {\n            firstmult = rtIsNaN(a[1]);\n          }\n\n          if (!firstmult) {\n            firstmult = rtIsNaN(a[2]);\n          }\n\n          if (!firstmult) {\n            firstmult = rtIsNaN(a[3]);\n          }\n\n          if (firstmult) {\n            c[0] = (rtNaN);\n            c[1] = (rtNaN);\n            c[2] = (rtNaN);\n            c[3] = (rtNaN);\n          } else {\n            c[1] = 0.0;\n            c[2] = 0.0;\n            c[0] = 1.0;\n            c[3] = 1.0;\n          }\n        }\n      } else {\n        boolean_T aBufferInUse;\n        boolean_T firstmult;\n        boolean_T lsb;\n        firstmult = true;\n        aBufferInUse = false;\n        lsb = ((static_cast<uint32_T>(nbitson) & 1U) != 0U);\n        lsb = ((lsb && (b < 0.0)) || ((!lsb) && (b >= 0.0)));\n        for (nbitson = 0; nbitson <= nb; nbitson++) {\n          if ((static_cast<uint32_T>(n) & 1U) != 0U) {\n            if (firstmult) {\n              firstmult = false;\n              if (lsb) {\n                if (aBufferInUse) {\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n                } else {\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3] =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n                }\n              } else if (aBufferInUse) {\n                c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n                c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n                c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n                c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n              } else {\n                c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n                c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n                c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n                c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n              }\n            } else {\n              if (aBufferInUse) {\n                if (lsb) {\n                  for (b_n = 0; b_n < 2; b_n++) {\n                    c[b_n] = 0.0;\n                    c[b_n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2];\n                    c[b_n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n                    c[b_n + 2] = 0.0;\n                    c[b_n + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n]\n                      * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n                    c[b_n + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n                  }\n                } else {\n                  for (b_n = 0; b_n < 2; b_n++) {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] = 0.0;\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] += c[b_n] *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = c[b_n + 2];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] +=\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] = 0.0;\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] += c[b_n]\n                      * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] +=\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n                  }\n                }\n              } else if (lsb) {\n                for (b_n = 0; b_n < 2; b_n++) {\n                  c[b_n] = 0.0;\n                  c[b_n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2];\n                  c[b_n] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n                  c[b_n + 2] = 0.0;\n                  c[b_n + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n                  c[b_n + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n                }\n              } else {\n                for (b_n = 0; b_n < 2; b_n++) {\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] = 0.0;\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] += c[b_n] *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = c[b_n + 2];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] +=\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] = 0.0;\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] += c[b_n] *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] +=\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n                }\n              }\n\n              lsb = !lsb;\n            }\n          }\n\n          n >>= 1;\n          if (aBufferInUse) {\n            for (b_n = 0; b_n < 2; b_n++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n + 2] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n            }\n          } else {\n            for (b_n = 0; b_n < 2; b_n++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n + 2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n            }\n          }\n\n          aBufferInUse = !aBufferInUse;\n        }\n\n        if (firstmult) {\n          if (b < 0.0) {\n            if (aBufferInUse) {\n              ctrl_TT_ad_ctrl_cpp_ros_f_inv_j\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d, c);\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_f_inv_j\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h, c);\n            }\n          } else if (aBufferInUse) {\n            c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n            c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n            c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n            c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n          } else {\n            c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n            c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n            c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n            c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n          }\n        } else if (b < 0.0) {\n          for (b_n = 0; b_n < 2; b_n++) {\n            n = b_n << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[n];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * c[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * c[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[n + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp * c[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f * c[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f * c[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i * c[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp * c[3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f * c[3];\n          }\n\n          if (aBufferInUse) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[0] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[1] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[2] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[3] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3];\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[0] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[1] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[2] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[3] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_f_inv_j\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e, c);\n        } else {\n          for (b_n = 0; b_n < 2; b_n++) {\n            n = b_n << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[n];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[n + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[n + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[n + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_tmp_f *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3];\n          }\n\n          if (aBufferInUse) {\n            c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[0];\n            c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[1];\n            c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[2];\n            c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_e[3];\n          } else {\n            c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[0];\n            c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[1];\n            c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[2];\n            c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_bj[3];\n          }\n        }\n      }\n    } else {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0] = a[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1] = a[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2] = a[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3] = a[3];\n      if (!rtIsInf(b)) {\n        boolean_T firstmult;\n        firstmult = true;\n        int32_T exitg1;\n        do {\n          exitg1 = 0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i = floor\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f / 2.0);\n          if (2.0 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i !=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f) {\n            if (firstmult) {\n              c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n              c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n              c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n              c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n              firstmult = false;\n            } else {\n              for (int32_T b_n = 0; b_n < 2; b_n++) {\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] = 0.0;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] += c[b_n] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f = c[b_n + 2];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] = 0.0;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] += c[b_n] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[b_n + 2] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n              }\n\n              c[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[0];\n              c[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[1];\n              c[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[2];\n              c[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_b[3];\n            }\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i == 0.0) {\n            exitg1 = 1;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i;\n            for (int32_T b_n = 0; b_n < 2; b_n++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n + 2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[b_n + 2] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2_i *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3];\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[0] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[1] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[2] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[3] =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer_d[3];\n          }\n        } while (exitg1 == 0);\n\n        if (b < 0.0) {\n          for (int32_T b_n = 0; b_n < 4; b_n++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h[b_n] = c[b_n];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a_h,\n            c);\n        }\n      } else {\n        c[0] = (rtNaN);\n        c[1] = (rtNaN);\n        c[2] = (rtNaN);\n        c[3] = (rtNaN);\n      }\n    }\n  } else {\n    c[0] = (rtNaN);\n    c[1] = (rtNaN);\n    c[2] = (rtNaN);\n    c[3] = (rtNaN);\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_fe_log2(real_T x)\n{\n  real_T f;\n  int32_T inte;\n  if (x == 0.0) {\n    f = (rtMinusInf);\n  } else if (x < 0.0) {\n    f = (rtNaN);\n  } else if ((!rtIsInf(x)) && (!rtIsNaN(x))) {\n    real_T t;\n    t = frexp(x, &inte);\n    if (t == 0.5) {\n      f = static_cast<real_T>(inte) - 1.0;\n    } else if ((inte == 1) && (t < 0.75)) {\n      f = log(2.0 * t) / 0.69314718055994529;\n    } else {\n      f = log(t) / 0.69314718055994529 + static_cast<real_T>(inte);\n    }\n  } else {\n    f = x;\n  }\n\n  return f;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_c_getExpmParams(const real_T A[4], real_T A2[4],\n  real_T A4[4], real_T A6[4], int32_T *m, real_T *s)\n{\n  int32_T A2_tmp;\n  int32_T b_s;\n  boolean_T guard1 = false;\n  boolean_T guard2 = false;\n  boolean_T guard3 = false;\n  boolean_T guard4 = false;\n  *s = 0.0;\n  for (int32_T i = 0; i < 2; i++) {\n    A2_tmp = i << 1;\n    A2[A2_tmp] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o = A[A2_tmp];\n    A2[A2_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o * A[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = A[A2_tmp + 1];\n    A2[A2_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o * A[2];\n    A2[A2_tmp + 1] = 0.0;\n    A2[A2_tmp + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o * A[1];\n    A2[A2_tmp + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o * A[3];\n  }\n\n  for (int32_T i = 0; i < 2; i++) {\n    A4[i] = 0.0;\n    A4[i] += A2[i] * A2[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = A2[i + 2];\n    A4[i] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp * A2[1];\n    A4[i + 2] = 0.0;\n    A4[i + 2] += A2[i] * A2[2];\n    A4[i + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp * A2[3];\n    A6[i] = 0.0;\n    A6[i] += A4[i] * A2[0];\n    A6[i] += A4[i + 2] * A2[1];\n    A6[i + 2] = 0.0;\n    A6[i + 2] += A4[i] * A2[2];\n    A6[i + 2] += A4[i + 2] * A2[3];\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o = rt_powd_snf\n    (ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A6), 0.16666666666666666);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = rt_powd_snf\n    (ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A4), 0.25);\n  if ((!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o >=\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o)) && (!rtIsNaN\n       (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o))) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n  }\n\n  guard1 = false;\n  guard2 = false;\n  guard3 = false;\n  guard4 = false;\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o <= 0.01495585217958292) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[0] = 0.19285012468241128 * fabs(A[0]);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[1] = 0.19285012468241128 * fabs(A[1]);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[2] = 0.19285012468241128 * fabs(A[2]);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[3] = 0.19285012468241128 * fabs(A[3]);\n    ctrl_TT_ad_ctrl_cpp_ros__mpower(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l, 7.0,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n      (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5) / ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n        (A) * 2.0 / 2.2204460492503131E-16) / 6.0);\n    if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = 0.0;\n    }\n\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp == 0.0) {\n      *m = 3;\n    } else {\n      guard4 = true;\n    }\n  } else {\n    guard4 = true;\n  }\n\n  if (guard4) {\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o <= 0.253939833006323) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[0] = 0.12321872304378752 * fabs(A[0]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[1] = 0.12321872304378752 * fabs(A[1]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[2] = 0.12321872304378752 * fabs(A[2]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[3] = 0.12321872304378752 * fabs(A[3]);\n      ctrl_TT_ad_ctrl_cpp_ros__mpower(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l, 11.0,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n        (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5) /\n          ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A) * 2.0 / 2.2204460492503131E-16) /\n         10.0);\n      if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0)) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = 0.0;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp == 0.0) {\n        *m = 5;\n      } else {\n        guard3 = true;\n      }\n    } else {\n      guard3 = true;\n    }\n  }\n\n  if (guard3) {\n    ctrl_TT_ad_ctrl_cpp_ros__mpower(A4, 2.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = rt_powd_snf\n      (ctrl_TT_ad_ctrl_cpp_ros_fe_norm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5),\n       0.125);\n    if ((!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o >=\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o)) && (!rtIsNaN\n         (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o))) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    }\n\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o <= 0.95041789961629319) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[0] = 0.090475336558796943 * fabs(A[0]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[1] = 0.090475336558796943 * fabs(A[1]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[2] = 0.090475336558796943 * fabs(A[2]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[3] = 0.090475336558796943 * fabs(A[3]);\n      ctrl_TT_ad_ctrl_cpp_ros__mpower(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l, 15.0,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n        (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5) /\n          ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A) * 2.0 / 2.2204460492503131E-16) /\n         14.0);\n      if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0)) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = 0.0;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp == 0.0) {\n        *m = 7;\n      } else {\n        guard2 = true;\n      }\n    } else {\n      guard2 = true;\n    }\n  }\n\n  if (guard2) {\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o <= 2.097847961257068) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[0] = 0.071467735648795785 * fabs(A[0]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[1] = 0.071467735648795785 * fabs(A[1]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[2] = 0.071467735648795785 * fabs(A[2]);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[3] = 0.071467735648795785 * fabs(A[3]);\n      ctrl_TT_ad_ctrl_cpp_ros__mpower(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l, 19.0,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n        (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5) /\n          ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A) * 2.0 / 2.2204460492503131E-16) /\n         18.0);\n      if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0)) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = 0.0;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp == 0.0) {\n        *m = 9;\n      } else {\n        guard1 = true;\n      }\n    } else {\n      guard1 = true;\n    }\n  }\n\n  if (guard1) {\n    for (int32_T i = 0; i < 2; i++) {\n      A2_tmp = i << 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = A6[A2_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp * A4[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp_i = A6[A2_tmp + 1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp_i * A4[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp + 1] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp + 1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp * A4[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[A2_tmp + 1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp_i * A4[3];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = rt_powd_snf\n      (ctrl_TT_ad_ctrl_cpp_ros_fe_norm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l),\n       0.1);\n    if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o >=\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp) || rtIsNaN\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    }\n\n    if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o <=\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp) || rtIsNaN\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n      (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp /\n        5.3719203511481517));\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0) {\n      *s = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o = rt_powd_snf(2.0, *s);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = A[0] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[0] = 0.05031554467093536 * fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T_b[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = A[1] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[1] = 0.05031554467093536 * fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T_b[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = A[2] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[2] = 0.05031554467093536 * fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T_b[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o = A[3] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l[3] = 0.05031554467093536 * fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T_b[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1_o;\n    ctrl_TT_ad_ctrl_cpp_ros__mpower(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_l, 27.0,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = ceil\n      (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv5) / ctrl_TT_ad_ctrl_cpp_ros_fe_norm\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.T_b) * 2.0 / 2.2204460492503131E-16) /\n       26.0);\n    if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp >= 0.0)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp = 0.0;\n    }\n\n    *s += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_tmp;\n    if (rtIsInf(*s)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o = ctrl_TT_ad_ctrl_cpp_ros_fe_norm(A) /\n        5.3719203511481517;\n      if ((!rtIsInf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o)) && (!rtIsNaN\n           (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o))) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o = frexp\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o, &b_s);\n      } else {\n        b_s = 0;\n      }\n\n      *s = b_s;\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6_o == 0.5) {\n        *s = static_cast<real_T>(b_s) - 1.0;\n      }\n    }\n\n    *m = 13;\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_c_recomputeBlockDiag(const real_T A[4], real_T F[4],\n  int32_T blockFormat)\n{\n  switch (blockFormat) {\n   case 0:\n    break;\n\n   case 1:\n    {\n      real_T avg;\n      real_T expa11;\n      real_T expa22;\n      real_T u1;\n      expa11 = exp(A[0]);\n      expa22 = exp(A[3]);\n      avg = (A[0] + A[3]) / 2.0;\n      u1 = fabs(A[0] - A[3]) / 2.0;\n      if ((avg >= u1) || rtIsNaN(u1)) {\n        u1 = avg;\n      }\n\n      if (u1 < 709.782712893384) {\n        u1 = (A[3] - A[0]) / 2.0;\n        if (u1 == 0.0) {\n          u1 = 1.0;\n        } else {\n          u1 = sinh(u1) / u1;\n        }\n\n        F[2] = A[2] * exp(avg) * u1;\n      } else {\n        F[2] = (expa22 - expa11) * A[2] / (A[3] - A[0]);\n      }\n\n      F[0] = expa11;\n      F[3] = expa22;\n    }\n    break;\n\n   case 2:\n    {\n      real_T avg;\n      real_T expa11;\n      real_T expa22;\n      expa11 = sqrt(fabs(A[1] * A[2]));\n      expa22 = exp(A[0]);\n      if (expa11 == 0.0) {\n        avg = 1.0;\n      } else {\n        avg = sin(expa11) / expa11;\n      }\n\n      F[0] = expa22 * cos(expa11);\n      F[1] = expa22 * A[1] * avg;\n      F[2] = expa22 * A[2] * avg;\n      F[3] = F[0];\n    }\n    break;\n  }\n\n  if (blockFormat == 0) {\n    F[3] = exp(A[3]);\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros__xgehrd(void)\n{\n  return 0.0;\n}\n\nstatic real_T ctrl_TT_ad_ctrl_c_rt_hypotd_snf(real_T u0, real_T u1)\n{\n  real_T y;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a = fabs(u0);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b = fabs(u1);\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a < ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b;\n    y = sqrt(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a *\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a + 1.0) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b;\n  } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a >\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a;\n    y = sqrt(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b *\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b + 1.0) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a;\n  } else if (rtIsNaN(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b)) {\n    y = (rtNaN);\n  } else {\n    y = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_a * 1.4142135623730951;\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_xdlanv2(real_T *a, real_T *b, real_T *c,\n  real_T *d, real_T *rt1r, real_T *rt1i, real_T *rt2r, real_T *rt2i, real_T *cs,\n  real_T *sn)\n{\n  if (*c == 0.0) {\n    *cs = 1.0;\n    *sn = 0.0;\n  } else if (*b == 0.0) {\n    *cs = 0.0;\n    *sn = 1.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = *d;\n    *d = *a;\n    *a = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n    *b = -*c;\n    *c = 0.0;\n  } else {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = *a - *d;\n    if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp == 0.0) && ((*b < 0.0) != (*c <\n          0.0))) {\n      *cs = 1.0;\n      *sn = 0.0;\n    } else {\n      int32_T count;\n      int32_T tmp;\n      boolean_T tmp_0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p = 0.5 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = fabs(*b);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis = fabs(*c);\n      tmp_0 = rtIsNaN(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis);\n      if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale >=\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis) || tmp_0) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale;\n      } else {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis;\n      }\n\n      if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale <=\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis) || tmp_0) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale;\n      }\n\n      if (!(*b < 0.0)) {\n        count = 1;\n      } else {\n        count = -1;\n      }\n\n      if (!(*c < 0.0)) {\n        tmp = 1;\n      } else {\n        tmp = -1;\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis * static_cast<real_T>(count) *\n        static_cast<real_T>(tmp);\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = fabs\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p);\n      if ((!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale >=\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax)) && (!rtIsNaN\n           (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax))) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p /\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax /\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis;\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z >= 8.8817841970012523E-16) {\n        if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p < 0.0)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = sqrt\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale) * sqrt\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z);\n        } else {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = -(sqrt\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale) * sqrt\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z));\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n        *a = *d + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z;\n        *d -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = ctrl_TT_ad_ctrl_c_rt_hypotd_snf(*\n          c, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z);\n        *cs = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.z /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n        *sn = *c / ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n        *b -= *c;\n        *c = 0.0;\n      } else {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p = *b + *c;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p);\n        if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax >=\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale) || rtIsNaN\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n        }\n\n        count = 0;\n        while ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale >= 7.4428285367870146E+137)\n               && (count <= 20)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p *= 1.3435752215134178E-138;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp *= 1.3435752215134178E-138;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p);\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax >=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n          }\n\n          count++;\n        }\n\n        while ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale <= 1.3435752215134178E-138)\n               && (count <= 20)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p *= 7.4428285367870146E+137;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp *= 7.4428285367870146E+137;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p);\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax >=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n          }\n\n          count++;\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = ctrl_TT_ad_ctrl_c_rt_hypotd_snf\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p,\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp);\n        *cs = sqrt((fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p) /\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax + 1.0) * 0.5);\n        if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p < 0.0)) {\n          count = 1;\n        } else {\n          count = -1;\n        }\n\n        *sn = -(0.5 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp /\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax * *cs)) *\n          static_cast<real_T>(count);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = *a * *cs + *b * *sn;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p = -*a * *sn + *b * *cs;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = *c * *cs + *d * *sn;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = -*c * *sn + *d * *cs;\n        *b = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p * *cs +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale * *sn;\n        *c = -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp * *sn +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax * *cs;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp =\n          ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp * *cs +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax * *sn) +\n           (-ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p * *sn +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale * *cs)) * 0.5;\n        *a = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n        *d = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n        if (*c != 0.0) {\n          if (*b != 0.0) {\n            if ((*b < 0.0) == (*c < 0.0)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis = sqrt(fabs(*b));\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale = sqrt(fabs(*c));\n              if (!(*c < 0.0)) {\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p =\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale;\n              } else {\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p =\n                  -(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis *\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale);\n              }\n\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax = 1.0 / sqrt(fabs(*b + *c));\n              *a = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p;\n              *d = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p;\n              *b -= *c;\n              *c = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmis *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax *=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = *cs *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p - *sn *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax;\n              *sn = *cs * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.bcmax + *sn *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.p;\n              *cs = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n            }\n          } else {\n            *b = -*c;\n            *c = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp = *cs;\n            *cs = -*sn;\n            *sn = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp;\n          }\n        }\n      }\n    }\n  }\n\n  *rt1r = *a;\n  *rt2r = *d;\n  if (*c == 0.0) {\n    *rt1i = 0.0;\n    *rt2i = 0.0;\n  } else {\n    *rt1i = sqrt(fabs(*b)) * sqrt(fabs(*c));\n    *rt2i = -*rt1i;\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic int32_T ctrl_TT_ad_ctrl_cpp_ros__xhseqr(real_T h[4], real_T z[4])\n{\n  real_T a__4;\n  int32_T info;\n  int32_T k;\n  info = 0;\n  for (int32_T i = 1; i + 1 >= 1; i = k - 2) {\n    boolean_T exitg1;\n    k = i + 1;\n    exitg1 = false;\n    while ((!exitg1) && (k > 1)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p = fabs(h[1]);\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p <= 2.0041683600089728E-292) {\n        exitg1 = true;\n      } else {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o = fabs(h[3]);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p <= (fabs(h[0]) +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o) * 2.2204460492503131E-16) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f = fabs(h[1]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 = fabs(h[2]);\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f >\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 = fabs(h[0] - h[3]);\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o >\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f * 2.2204460492503131E-16;\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f <=\n               2.0041683600089728E-292) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f = 2.0041683600089728E-292;\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p /\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e <=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f) {\n            exitg1 = true;\n          } else {\n            k = 1;\n          }\n        } else {\n          k = 1;\n        }\n      }\n    }\n\n    if (k > 1) {\n      h[1] = 0.0;\n    }\n\n    if ((i + 1 != k) && (k == i)) {\n      int32_T b_tmp;\n      int32_T b_tmp_tmp;\n      int32_T c_tmp;\n      int32_T c_tmp_tmp;\n      b_tmp_tmp = i << 1;\n      b_tmp = b_tmp_tmp + i;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f = h[b_tmp - 1];\n      c_tmp_tmp = (i - 1) << 1;\n      c_tmp = c_tmp_tmp + i;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o = h[c_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2 = h[b_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_xdlanv2(&h[(i + ((i - 1) << 1)) - 1],\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a__1,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a__2,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a__3_h, &a__4,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p,\n        &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e);\n      h[b_tmp - 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f;\n      h[c_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o;\n      h[b_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp2;\n      if (i + 1 < 2) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p * h[1] +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e * h[2];\n        h[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p * h[2] -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e * h[1];\n        h[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f;\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p * z[c_tmp_tmp] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e * z[b_tmp_tmp];\n      z[b_tmp_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p * z[b_tmp_tmp] -\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e * z[c_tmp_tmp];\n      z[c_tmp_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f = z[b_tmp_tmp + 1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o = z[c_tmp_tmp + 1];\n      z[b_tmp_tmp + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p -\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e;\n      z[c_tmp_tmp + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa_o *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab_p +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1_f *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba_e;\n    }\n  }\n\n  return info;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_f_schur(const real_T A[4], real_T V[4],\n  real_T T[4])\n{\n  boolean_T p;\n  p = true;\n  if (rtIsInf(A[0]) || rtIsNaN(A[0])) {\n    p = false;\n  }\n\n  if (p && (rtIsInf(A[1]) || rtIsNaN(A[1]))) {\n    p = false;\n  }\n\n  if (p && (rtIsInf(A[2]) || rtIsNaN(A[2]))) {\n    p = false;\n  }\n\n  if (p && (rtIsInf(A[3]) || rtIsNaN(A[3]))) {\n    p = false;\n  }\n\n  if (!p) {\n    V[0] = (rtNaN);\n    V[2] = (rtNaN);\n    V[3] = (rtNaN);\n    V[1] = 0.0;\n    T[0] = (rtNaN);\n    T[1] = (rtNaN);\n    T[2] = (rtNaN);\n    T[3] = (rtNaN);\n  } else {\n    T[0] = A[0];\n    T[1] = A[1];\n    T[2] = A[2];\n    T[3] = A[3];\n    V[2] = 0.0;\n    V[1] = 0.0;\n    V[0] = 1.0;\n    V[3] = 1.0 - ctrl_TT_ad_ctrl_cpp_ros__xgehrd();\n    ctrl_TT_ad_ctrl_cpp_ros__xhseqr(T, V);\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_fe_expm(real_T A[4], real_T F[4])\n{\n  int32_T r1;\n  boolean_T recomputeDiags;\n  recomputeDiags = true;\n  if (rtIsInf(A[0]) || rtIsNaN(A[0])) {\n    recomputeDiags = false;\n  }\n\n  if (recomputeDiags && (rtIsInf(A[1]) || rtIsNaN(A[1]))) {\n    recomputeDiags = false;\n  }\n\n  if (recomputeDiags && (rtIsInf(A[2]) || rtIsNaN(A[2]))) {\n    recomputeDiags = false;\n  }\n\n  if (recomputeDiags && (rtIsInf(A[3]) || rtIsNaN(A[3]))) {\n    recomputeDiags = false;\n  }\n\n  if (!recomputeDiags) {\n    F[0] = (rtNaN);\n    F[1] = (rtNaN);\n    F[2] = (rtNaN);\n    F[3] = (rtNaN);\n  } else {\n    int32_T blockFormat;\n    int32_T exitg1;\n    boolean_T exitg2;\n    recomputeDiags = true;\n    blockFormat = 0;\n    exitg2 = false;\n    while ((!exitg2) && (blockFormat < 2)) {\n      r1 = 0;\n      do {\n        exitg1 = 0;\n        if (r1 < 2) {\n          if ((r1 != blockFormat) && (!(A[(blockFormat << 1) + r1] == 0.0))) {\n            recomputeDiags = false;\n            exitg1 = 1;\n          } else {\n            r1++;\n          }\n        } else {\n          blockFormat++;\n          exitg1 = 2;\n        }\n      } while (exitg1 == 0);\n\n      if (exitg1 == 1) {\n        exitg2 = true;\n      }\n    }\n\n    if (recomputeDiags) {\n      F[1] = 0.0;\n      F[2] = 0.0;\n      F[0] = exp(A[0]);\n      F[3] = exp(A[3]);\n    } else {\n      recomputeDiags = true;\n      blockFormat = 0;\n      exitg2 = false;\n      while ((!exitg2) && (blockFormat < 2)) {\n        r1 = 0;\n        do {\n          exitg1 = 0;\n          if (r1 <= blockFormat) {\n            if (!(A[(blockFormat << 1) + r1] == A[(r1 << 1) + blockFormat])) {\n              recomputeDiags = false;\n              exitg1 = 1;\n            } else {\n              r1++;\n            }\n          } else {\n            blockFormat++;\n            exitg1 = 2;\n          }\n        } while (exitg1 == 0);\n\n        if (exitg1 == 1) {\n          exitg2 = true;\n        }\n      }\n\n      if (recomputeDiags) {\n        ctrl_TT_ad_ctrl_cpp_ros_f_schur(A, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = exp\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0]);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = exp\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3]);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n        for (r1 = 0; r1 < 2; r1++) {\n          F[r1] = 0.0;\n          F[r1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1 + 2];\n          F[r1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2];\n          F[r1 + 2] = 0.0;\n          F[r1 + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1];\n          F[r1 + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3];\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = (F[1] + F[2]) / 2.0;\n        F[3] = (F[3] + F[3]) / 2.0;\n        F[0] = (F[0] + F[0]) / 2.0;\n        F[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n        F[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a;\n      } else {\n        int32_T r2;\n        recomputeDiags = true;\n        if (A[1] != 0.0) {\n          if (rtIsNaN(A[1])) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = (rtNaN);\n          } else if (A[1] < 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = -1.0;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a = (A[1] > 0.0);\n          }\n\n          if (rtIsNaN(A[2])) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = (rtNaN);\n          } else if (A[2] < 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = -1.0;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = (A[2] > 0.0);\n          }\n\n          recomputeDiags = ((!(A[0] != A[3])) &&\n                            (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a *\n                               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d != -1.0)));\n        }\n\n        ctrl_TT_ad_ctrl_c_getExpmParams(A, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l, &r1,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a != 0.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = rt_powd_snf(2.0,\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y = rt_powd_snf(2.0, 2.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l = rt_powd_snf(2.0, 4.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i = rt_powd_snf(2.0, 6.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n          A[0] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i;\n          A[1] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i;\n          A[2] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i;\n          A[3] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i;\n        }\n\n        if (recomputeDiags) {\n          if (A[1] == 0.0) {\n            blockFormat = 1;\n          } else {\n            blockFormat = 2;\n          }\n        }\n\n        switch (r1) {\n         case 3:\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0] + 60.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3] + 60.0;\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] = 12.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] = 12.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] = 12.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] = 12.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = 120.0;\n          break;\n\n         case 5:\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] = 420.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] = 420.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] = 420.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] = 420.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] += 15120.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] += 15120.0;\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] = 30.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0] + 3360.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] = 30.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1] + 3360.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] = 30.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2] + 3360.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] = 30.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3] + 3360.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = 30240.0;\n          break;\n\n         case 7:\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] = (1512.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0]) + 277200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] = (1512.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1]) + 277200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] = (1512.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2]) + 277200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] = (1512.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3]) + 277200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] += 8.64864E+6;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] += 8.64864E+6;\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] = (56.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] + 25200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0]) + 1.99584E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] = (56.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] + 25200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1]) + 1.99584E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] = (56.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] + 25200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2]) + 1.99584E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] = (56.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] + 25200.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3]) + 1.99584E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = 1.729728E+7;\n          break;\n\n         case 9:\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] = ((3960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0]) + 2.16216E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0]) + 3.027024E+8 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] = ((3960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1]) + 2.16216E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1]) + 3.027024E+8 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] = ((3960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2]) + 2.16216E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2]) + 3.027024E+8 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] = ((3960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3]) + 2.16216E+6 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3]) + 3.027024E+8 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] += 8.8216128E+9;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] += 8.8216128E+9;\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d * A[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * A[3];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] = ((90.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] + 110880.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0]) + 3.027024E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0]) + 2.0756736E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] = ((90.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] + 110880.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1]) + 3.027024E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1]) + 2.0756736E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] = ((90.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] + 110880.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2]) + 3.027024E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2]) + 2.0756736E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] = ((90.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] + 110880.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3]) + 3.027024E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3]) + 2.0756736E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = 1.76432256E+10;\n          break;\n\n         default:\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] = (3.352212864E+10 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] + 1.05594705216E+13 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0]) + 1.1873537964288E+15 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] = (3.352212864E+10 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] + 1.05594705216E+13 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1]) + 1.1873537964288E+15 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] = (3.352212864E+10 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] + 1.05594705216E+13 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2]) + 1.1873537964288E+15 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] = (3.352212864E+10 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] + 1.05594705216E+13 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3]) + 1.1873537964288E+15 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] += 3.238237626624E+16;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] += 3.238237626624E+16;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = (16380.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0]) + 4.08408E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y = (16380.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1]) + 4.08408E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l = (16380.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2]) + 4.08408E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i = (16380.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3]) + 4.08408E+7 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          for (r1 = 0; r1 < 2; r1++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1 + 2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r1] =\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y +\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r1 + 2] =\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i +\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l) +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r1 + 2];\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = (182.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[0] + 960960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0]) + 1.32324192E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y = (182.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[1] + 960960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1]) + 1.32324192E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l = (182.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[2] + 960960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2]) + 1.32324192E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[2];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i = (182.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[3] + 960960.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3]) + 1.32324192E+9 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[3];\n          for (r1 = 0; r1 < 2; r1++) {\n            r2 = r1 << 1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp * A[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_n[r2 + 1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_tmp * A[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp * A[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_tmp * A[3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1 + 2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1] =\n              (((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y +\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) + 6.704425728E+11 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1]) + 1.29060195264E+14 *\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1]) + 7.7717703038976E+15 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[r1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1 + 2] =\n              (((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp *\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i +\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_l[r1] *\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l) +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_tmp * 6.704425728E+11) +\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1 + 2] * 1.29060195264E+14)\n              + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2_d[r1 + 2] *\n              7.7717703038976E+15;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d = 6.476475253248E+16;\n          break;\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] =\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0] +\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[0] *= 2.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1] -=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[1] *= 2.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[2] -=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[2] *= 2.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] =\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[3] +\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[3] *= 2.0;\n        if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[1]) > fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[0])) {\n          r1 = 1;\n          r2 = 0;\n        } else {\n          r1 = 0;\n          r2 = 1;\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2] /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1 + 2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r2 + 2] -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d;\n        F[1] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2] -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r1] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n        F[0] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r1] -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * F[1]) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i =\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r1 + 2];\n        F[3] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U_o[r2 + 2] -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_l;\n        F[2] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_y * F[3]) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V_b[r1];\n        F[0]++;\n        F[3]++;\n        if (recomputeDiags) {\n          ctrl_TT_ad_c_recomputeBlockDiag(A, F, blockFormat);\n        }\n\n        r2 = static_cast<int32_T>(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj_a);\n        for (int32_T k = 0; k < r2; k++) {\n          for (r1 = 0; r1 < 2; r1++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1] += F[r1] * F[0];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i = F[r1 + 2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i * F[1];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1 + 2] = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1 + 2] += F[r1] * F[2];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[r1 + 2] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y_i * F[3];\n          }\n\n          F[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[0];\n          F[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[1];\n          F[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[2];\n          F[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_d[3];\n          if (recomputeDiags) {\n            A[0] *= 2.0;\n            A[1] *= 2.0;\n            A[2] *= 2.0;\n            A[3] *= 2.0;\n            ctrl_TT_ad_c_recomputeBlockDiag(A, F, blockFormat);\n          }\n        }\n      }\n    }\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros__norm_b(const real_T x[9])\n{\n  real_T y;\n  int32_T j;\n  boolean_T exitg1;\n  y = 0.0;\n  j = 0;\n  exitg1 = false;\n  while ((!exitg1) && (j < 3)) {\n    real_T s;\n    s = (fabs(x[3 * j + 1]) + fabs(x[3 * j])) + fabs(x[3 * j + 2]);\n    if (rtIsNaN(s)) {\n      y = (rtNaN);\n      exitg1 = true;\n    } else {\n      if (s > y) {\n        y = s;\n      }\n\n      j++;\n    }\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros__inv_jg(const real_T x[9], real_T y[9])\n{\n  int32_T p1;\n  int32_T p2;\n  int32_T p3;\n  memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0], &x[0], 9U * sizeof(real_T));\n  p1 = 0;\n  p2 = 3;\n  p3 = 6;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 = fabs(x[0]);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 = fabs(x[1]);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx31 = fabs(x[2]);\n  if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 >\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) &&\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 >\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx31)) {\n    p1 = 3;\n    p2 = 0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0] = x[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[1] = x[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3] = x[4];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4] = x[3];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6] = x[7];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7] = x[6];\n  } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx31 >\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) {\n    p1 = 6;\n    p3 = 0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0] = x[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[2] = x[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3] = x[5];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5] = x[3];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6] = x[8];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8] = x[6];\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[1] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [0];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[2] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [0];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [2] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [2] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6];\n  if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5]) > fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4])) {\n    int32_T itmp;\n    itmp = p2;\n    p2 = p3;\n    p3 = itmp;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [4];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [5] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[5] -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[2]) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 =\n    -(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 +\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[1]) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4];\n  y[p1] = ((1.0 - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21) -\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6] *\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0];\n  y[p1 + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21;\n  y[p1 + 2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 = -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [5] / ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 = (1.0 -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[7] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4];\n  y[p2] = -(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0];\n  y[p2 + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21;\n  y[p2 + 2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 = 1.0 /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[8];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 = -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x\n    [7] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11 /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[4];\n  y[p3] = -(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[3] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21 +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[6] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11) /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_x[0];\n  y[p3 + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx21;\n  y[p3 + 2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absx11;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ro_mpower_f(const real_T a[9], real_T b, real_T\n  c[9])\n{\n  if (floor(b) == b) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e = fabs(b);\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e <= 2.147483647E+9) {\n      int32_T b_n;\n      int32_T n;\n      int32_T nb;\n      int32_T nbitson;\n      memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], &a[0], 9U * sizeof(real_T));\n      n = static_cast<int32_T>(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e);\n      b_n = n;\n      nbitson = 0;\n      nb = -2;\n      while (b_n > 0) {\n        nb++;\n        if ((static_cast<uint32_T>(b_n) & 1U) != 0U) {\n          nbitson++;\n        }\n\n        b_n >>= 1;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e <= 2.0) {\n        if (b == 2.0) {\n          for (b_n = 0; b_n < 3; b_n++) {\n            for (nbitson = 0; nbitson < 3; nbitson++) {\n              int32_T c_tmp;\n              c_tmp = 3 * b_n + nbitson;\n              c[c_tmp] = 0.0;\n              c[c_tmp] += a[3 * b_n] * a[nbitson];\n              c[c_tmp] += a[3 * b_n + 1] * a[nbitson + 3];\n              c[c_tmp] += a[3 * b_n + 2] * a[nbitson + 6];\n            }\n          }\n        } else if (b == 1.0) {\n          memcpy(&c[0], &a[0], 9U * sizeof(real_T));\n        } else if (b == -1.0) {\n          ctrl_TT_ad_ctrl_cpp_ros__inv_jg(a, c);\n        } else if (b == -2.0) {\n          for (b_n = 0; b_n < 3; b_n++) {\n            for (nbitson = 0; nbitson < 3; nbitson++) {\n              n = 3 * b_n + nbitson;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] += a[3 * b_n] * a[nbitson];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] += a[3 * b_n + 1] *\n                a[nbitson + 3];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] += a[3 * b_n + 2] *\n                a[nbitson + 6];\n            }\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros__inv_jg(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a, c);\n        } else {\n          boolean_T firstmult;\n          firstmult = false;\n          for (b_n = 0; b_n < 9; b_n++) {\n            if (!firstmult) {\n              firstmult = rtIsNaN(a[b_n]);\n            }\n          }\n\n          if (firstmult) {\n            for (b_n = 0; b_n < 9; b_n++) {\n              c[b_n] = (rtNaN);\n            }\n          } else {\n            memset(&c[0], 0, 9U * sizeof(real_T));\n            c[0] = 1.0;\n            c[4] = 1.0;\n            c[8] = 1.0;\n          }\n        }\n      } else {\n        int32_T c_tmp;\n        boolean_T aBufferInUse;\n        boolean_T firstmult;\n        boolean_T lsb;\n        firstmult = true;\n        aBufferInUse = false;\n        lsb = ((static_cast<uint32_T>(nbitson) & 1U) != 0U);\n        lsb = ((lsb && (b < 0.0)) || ((!lsb) && (b >= 0.0)));\n        for (int32_T k = 0; k <= nb; k++) {\n          if ((static_cast<uint32_T>(n) & 1U) != 0U) {\n            if (firstmult) {\n              firstmult = false;\n              if (lsb) {\n                if (aBufferInUse) {\n                  memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[0],\n                         &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[0], 9U *\n                         sizeof(real_T));\n                } else {\n                  memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[0],\n                         &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], 9U * sizeof\n                         (real_T));\n                }\n              } else if (aBufferInUse) {\n                memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[0], 9U *\n                       sizeof(real_T));\n              } else {\n                memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], 9U *\n                       sizeof(real_T));\n              }\n            } else {\n              if (aBufferInUse) {\n                if (lsb) {\n                  for (b_n = 0; b_n < 3; b_n++) {\n                    for (nbitson = 0; nbitson < 3; nbitson++) {\n                      c_tmp = 3 * nbitson + b_n;\n                      c[c_tmp] = 0.0;\n                      c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 *\n                        nbitson] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n];\n                      c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 *\n                        nbitson + 1] *\n                        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n + 3];\n                      c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 *\n                        nbitson + 2] *\n                        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n + 6];\n                    }\n                  }\n                } else {\n                  for (b_n = 0; b_n < 3; b_n++) {\n                    for (nbitson = 0; nbitson < 3; nbitson++) {\n                      c_tmp = 3 * nbitson + b_n;\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] = 0.0;\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson] *\n                        c[b_n];\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson + 1]\n                        * c[b_n + 3];\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson + 2]\n                        * c[b_n + 6];\n                    }\n                  }\n                }\n              } else if (lsb) {\n                for (b_n = 0; b_n < 3; b_n++) {\n                  for (nbitson = 0; nbitson < 3; nbitson++) {\n                    c_tmp = 3 * nbitson + b_n;\n                    c[c_tmp] = 0.0;\n                    c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson]\n                      * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n];\n                    c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson\n                      + 1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n + 3];\n                    c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson\n                      + 2] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[b_n + 6];\n                  }\n                }\n              } else {\n                for (b_n = 0; b_n < 3; b_n++) {\n                  for (nbitson = 0; nbitson < 3; nbitson++) {\n                    c_tmp = 3 * nbitson + b_n;\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] = 0.0;\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson] * c[b_n];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 1] *\n                      c[b_n + 3];\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 2] *\n                      c[b_n + 6];\n                  }\n                }\n              }\n\n              lsb = !lsb;\n            }\n          }\n\n          n >>= 1;\n          if (aBufferInUse) {\n            for (b_n = 0; b_n < 3; b_n++) {\n              for (nbitson = 0; nbitson < 3; nbitson++) {\n                c_tmp = 3 * nbitson + b_n;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[c_tmp] = 0.0;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[b_n];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson + 1] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[b_n + 3];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * nbitson + 2] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[b_n + 6];\n              }\n            }\n          } else {\n            for (b_n = 0; b_n < 3; b_n++) {\n              for (nbitson = 0; nbitson < 3; nbitson++) {\n                c_tmp = 3 * nbitson + b_n;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] = 0.0;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 1] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n + 3];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 2] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n + 6];\n              }\n            }\n          }\n\n          aBufferInUse = !aBufferInUse;\n        }\n\n        if (firstmult) {\n          if (b < 0.0) {\n            if (aBufferInUse) {\n              ctrl_TT_ad_ctrl_cpp_ros__inv_jg\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer, c);\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros__inv_jg\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a, c);\n            }\n          } else if (aBufferInUse) {\n            memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[0], 9U *\n                   sizeof(real_T));\n          } else {\n            memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], 9U * sizeof\n                   (real_T));\n          }\n        } else if (b < 0.0) {\n          for (b_n = 0; b_n < 3; b_n++) {\n            for (nbitson = 0; nbitson < 3; nbitson++) {\n              c_tmp = 3 * b_n + nbitson;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e = c[nbitson];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e = c[nbitson + 3];\n              n = 3 * b_n + 1;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e = c[nbitson + 6];\n              n = 3 * b_n + 2;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n            }\n          }\n\n          if (aBufferInUse) {\n            memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0],\n                   &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[0], 9U * sizeof\n                   (real_T));\n          } else {\n            memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0],\n                   &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[0], 9U * sizeof\n                   (real_T));\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros__inv_jg(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a, c);\n        } else {\n          for (b_n = 0; b_n < 3; b_n++) {\n            for (nbitson = 0; nbitson < 3; nbitson++) {\n              c_tmp = 3 * b_n + nbitson;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] = 0.0;\n              c[c_tmp] = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[nbitson];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[3 * b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * b_n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[nbitson + 3];\n              n = 3 * b_n + 1;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[nbitson + 6];\n              n = 3 * b_n + 2;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[c_tmp] +=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n              c[c_tmp] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[n] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e;\n            }\n          }\n\n          if (aBufferInUse) {\n            memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer_c[0], 9U *\n                   sizeof(real_T));\n          }\n        }\n      }\n    } else {\n      memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], &a[0], 9U * sizeof(real_T));\n      if (!rtIsInf(b)) {\n        boolean_T firstmult;\n        firstmult = true;\n        int32_T exitg1;\n        do {\n          int32_T c_tmp;\n          exitg1 = 0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2 = floor\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e / 2.0);\n          if (2.0 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2 !=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e) {\n            if (firstmult) {\n              memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], 9U * sizeof\n                     (real_T));\n              firstmult = false;\n            } else {\n              for (int32_T b_n = 0; b_n < 3; b_n++) {\n                for (int32_T nbitson = 0; nbitson < 3; nbitson++) {\n                  c_tmp = 3 * nbitson + b_n;\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] = 0.0;\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson] * c[b_n];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 1] * c[b_n\n                    + 3];\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[c_tmp] +=\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 2] * c[b_n\n                    + 6];\n                }\n              }\n\n              memcpy(&c[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.cBuffer[0], 9U *\n                     sizeof(real_T));\n            }\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2 == 0.0) {\n            exitg1 = 1;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.e =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ed2;\n            for (int32_T b_n = 0; b_n < 3; b_n++) {\n              for (int32_T nbitson = 0; nbitson < 3; nbitson++) {\n                c_tmp = 3 * nbitson + b_n;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] = 0.0;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 1] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n + 3];\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[c_tmp] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[3 * nbitson + 2] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[b_n + 6];\n              }\n            }\n\n            memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0],\n                   &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aBuffer[0], 9U * sizeof\n                   (real_T));\n          }\n        } while (exitg1 == 0);\n\n        if (b < 0.0) {\n          memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a[0], &c[0], 9U * sizeof\n                 (real_T));\n          ctrl_TT_ad_ctrl_cpp_ros__inv_jg(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_a, c);\n        }\n      } else {\n        for (int32_T b_n = 0; b_n < 9; b_n++) {\n          c[b_n] = (rtNaN);\n        }\n      }\n    }\n  } else {\n    for (int32_T b_n = 0; b_n < 9; b_n++) {\n      c[b_n] = (rtNaN);\n    }\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ct_padeApproximation(const real_T A[9], const real_T A2[9],\n  const real_T A4[9], const real_T A6[9], int32_T m, real_T F[9])\n{\n  real_T F_tmp;\n  real_T F_tmp_0;\n  real_T F_tmp_1;\n  int32_T r1;\n  int32_T r2;\n  int32_T r3;\n  switch (m) {\n   case 3:\n    memcpy(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0], &A2[0], 9U * sizeof(real_T));\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0] += 60.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[4] += 60.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[8] += 60.0;\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1] * A[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 1] * A[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 2] * A[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] = 12.0 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = 120.0;\n    break;\n\n   case 5:\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] = 420.0 * A2[r1] + A4[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0] += 15120.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[4] += 15120.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[8] += 15120.0;\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1] * A[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 1] * A[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 2] * A[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] = 30.0 * A4[r1] + 3360.0 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = 30240.0;\n    break;\n\n   case 7:\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] = (1512.0 * A4[r1] + A6[r1]) +\n        277200.0 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0] += 8.64864E+6;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[4] += 8.64864E+6;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[8] += 8.64864E+6;\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1] * A[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 1] * A[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 2] * A[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] = (56.0 * A6[r1] + 25200.0 * A4[r1])\n        + 1.99584E+6 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = 1.729728E+7;\n    break;\n\n   case 9:\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] += A2[3 * r1] * A6[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] += A2[3 * r1 + 1] * A6[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] += A2[3 * r1 + 2] * A6[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] = ((3960.0 * A6[r1] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1]) + 2.16216E+6 * A4[r1]) +\n        3.027024E+8 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0] += 8.8216128E+9;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[4] += 8.8216128E+9;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[8] += 8.8216128E+9;\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1] * A[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 1] * A[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[3 * r1 + 2] * A[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] = ((90.0 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] + 110880.0 * A6[r1]) + 3.027024E+7\n        * A4[r1]) + 2.0756736E+9 * A2[r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = 1.76432256E+10;\n    break;\n\n   default:\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = A2[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21 = A4[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h = A6[r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] = (3.352212864E+10 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h + 1.05594705216E+13 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21) + 1.1873537964288E+15 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] = (16380.0 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21 +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h) + 4.08408E+7 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[0] += 3.238237626624E+16;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[4] += 3.238237626624E+16;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[8] += 3.238237626624E+16;\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r2 + r1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r3] =\n          ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[3 * r2 + 1] * A6[r1 + 3] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[3 * r2] * A6[r1]) +\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[3 * r2 + 2] * A6[r1 + 6]) +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3];\n      }\n    }\n\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r1 + r2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3] = 0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r1] * A[r2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r1 + 1] * A[r2 + 3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r1 + 2] * A[r2 + 6];\n      }\n    }\n\n    for (r1 = 0; r1 < 9; r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[r1] = (182.0 * A6[r1] + 960960.0 *\n        A4[r1]) + 1.32324192E+9 * A2[r1];\n    }\n\n    for (r1 = 0; r1 < 3; r1++) {\n      for (r2 = 0; r2 < 3; r2++) {\n        r3 = 3 * r2 + r1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] =\n          ((((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r2 + 1] * A6[r1 + 3] +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r2] * A6[r1]) +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_p[3 * r2 + 2] * A6[r1 + 6]) +\n            A6[r3] * 6.704425728E+11) + A4[r3] * 1.29060195264E+14) + A2[r3] *\n          7.7717703038976E+15;\n      }\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = 6.476475253248E+16;\n    break;\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[0] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[4] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[8] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n  for (r1 = 0; r1 < 9; r1++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1] -=\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1] = 2.0 *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5;\n  }\n\n  r1 = 0;\n  r2 = 1;\n  r3 = 2;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V\n    [0]);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21 = fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[1]);\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21 > ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5)\n  {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21;\n    r1 = 1;\n    r2 = 0;\n  }\n\n  if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[2]) >\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5) {\n    r1 = 2;\n    r2 = 1;\n    r3 = 0;\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 3] -=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 + 3] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 3] -=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 + 3] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 6] -=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 + 6] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 6] -=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 + 6] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3];\n  if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 3]) > fabs\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 3])) {\n    int32_T rtemp;\n    rtemp = r2;\n    r2 = r3;\n    r3 = rtemp;\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 3] /=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 3];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 6] -=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 3] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 6];\n  F[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1];\n  F[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r2] - F[0] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 +\n    3];\n  F[2] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3] - F[0] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3]) -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 * F[1];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3 + 6];\n  F[2] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 +\n    6];\n  F[0] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h * F[2];\n  F_tmp = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 6];\n  F[1] -= F_tmp * F[2];\n  F_tmp_0 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2 + 3];\n  F[1] /= F_tmp_0;\n  F_tmp_1 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1 + 3];\n  F[0] -= F_tmp_1 * F[1];\n  F[0] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1];\n  F[3] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1 + 3];\n  F[4] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r2 + 3] - F[3] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2];\n  F[5] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3 + 3] - F[3] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3]) -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 * F[4];\n  F[5] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21;\n  F[3] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h * F[5];\n  F[4] -= F_tmp * F[5];\n  F[4] /= F_tmp_0;\n  F[3] -= F_tmp_1 * F[4];\n  F[3] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1];\n  F[6] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r1 + 6];\n  F[7] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r2 + 6] - F[6] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r2];\n  F[8] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.U[r3 + 6] - F[6] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r3]) -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_l5 * F[7];\n  F[8] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a21;\n  F[6] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6_h * F[8];\n  F[7] -= F_tmp * F[8];\n  F[7] /= F_tmp_0;\n  F[6] -= F_tmp_1 * F[7];\n  F[6] /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.V[r1];\n  F[0]++;\n  F[4]++;\n  F[8]++;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_recomputeBlockDiag_b(const real_T A[9], real_T F[9],\n  const int32_T blockFormat[2])\n{\n  real_T avg;\n  real_T expa11;\n  real_T expa22;\n  real_T u1;\n  switch (blockFormat[0]) {\n   case 0:\n    break;\n\n   case 1:\n    expa11 = exp(A[0]);\n    expa22 = exp(A[4]);\n    avg = (A[0] + A[4]) / 2.0;\n    u1 = fabs(A[0] - A[4]) / 2.0;\n    if ((avg >= u1) || rtIsNaN(u1)) {\n      u1 = avg;\n    }\n\n    if (u1 < 709.782712893384) {\n      u1 = (A[4] - A[0]) / 2.0;\n      if (u1 == 0.0) {\n        u1 = 1.0;\n      } else {\n        u1 = sinh(u1) / u1;\n      }\n\n      avg = A[3] * exp(avg) * u1;\n    } else {\n      avg = (expa22 - expa11) * A[3] / (A[4] - A[0]);\n    }\n\n    F[0] = expa11;\n    F[3] = avg;\n    F[4] = expa22;\n    break;\n\n   case 2:\n    expa11 = sqrt(fabs(A[1] * A[3]));\n    expa22 = exp(A[0]);\n    if (expa11 == 0.0) {\n      avg = 1.0;\n    } else {\n      avg = sin(expa11) / expa11;\n    }\n\n    F[0] = expa22 * cos(expa11);\n    F[1] = expa22 * A[1] * avg;\n    F[3] = expa22 * A[3] * avg;\n    F[4] = F[0];\n    break;\n  }\n\n  switch (blockFormat[1]) {\n   case 0:\n    break;\n\n   case 1:\n    expa11 = exp(A[4]);\n    expa22 = exp(A[8]);\n    avg = (A[4] + A[8]) / 2.0;\n    u1 = fabs(A[4] - A[8]) / 2.0;\n    if ((avg >= u1) || rtIsNaN(u1)) {\n      u1 = avg;\n    }\n\n    if (u1 < 709.782712893384) {\n      u1 = (A[8] - A[4]) / 2.0;\n      if (u1 == 0.0) {\n        u1 = 1.0;\n      } else {\n        u1 = sinh(u1) / u1;\n      }\n\n      avg = A[7] * exp(avg) * u1;\n    } else {\n      avg = (expa22 - expa11) * A[7] / (A[8] - A[4]);\n    }\n\n    F[4] = expa11;\n    F[7] = avg;\n    F[8] = expa22;\n    break;\n\n   case 2:\n    expa11 = sqrt(fabs(A[5] * A[7]));\n    expa22 = exp(A[4]);\n    if (expa11 == 0.0) {\n      avg = 1.0;\n    } else {\n      avg = sin(expa11) / expa11;\n    }\n\n    F[4] = expa22 * cos(expa11);\n    F[5] = expa22 * A[5] * avg;\n    F[7] = expa22 * A[7] * avg;\n    F[8] = F[4];\n    break;\n  }\n\n  if (blockFormat[1] == 0) {\n    F[8] = exp(A[8]);\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_xnrm2_l(int32_T n, const real_T x[9],\n  int32_T ix0)\n{\n  real_T y;\n  y = 0.0;\n  if (n >= 1) {\n    if (n == 1) {\n      y = fabs(x[ix0 - 1]);\n    } else {\n      real_T scale;\n      int32_T kend;\n      scale = 3.3121686421112381E-170;\n      kend = (ix0 + n) - 1;\n      for (int32_T k = ix0; k <= kend; k++) {\n        real_T absxk;\n        absxk = fabs(x[k - 1]);\n        if (absxk > scale) {\n          real_T t;\n          t = scale / absxk;\n          y = y * t * t + 1.0;\n          scale = absxk;\n        } else {\n          real_T t;\n          t = absxk / scale;\n          y += t * t;\n        }\n      }\n\n      y = scale * sqrt(y);\n    }\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros__xzlarf(int32_T m, int32_T n, int32_T iv0,\n  real_T tau, real_T C[9], int32_T ic0, real_T work[3])\n{\n  int32_T b_ia;\n  int32_T coltop;\n  int32_T lastc;\n  int32_T lastv;\n  if (tau != 0.0) {\n    boolean_T exitg2;\n    lastv = m;\n    lastc = iv0 + m;\n    while ((lastv > 0) && (C[lastc - 2] == 0.0)) {\n      lastv--;\n      lastc--;\n    }\n\n    lastc = n;\n    exitg2 = false;\n    while ((!exitg2) && (lastc > 0)) {\n      int32_T exitg1;\n      coltop = (lastc - 1) * 3 + ic0;\n      b_ia = coltop;\n      do {\n        exitg1 = 0;\n        if (b_ia <= (coltop + lastv) - 1) {\n          if (C[b_ia - 1] != 0.0) {\n            exitg1 = 1;\n          } else {\n            b_ia++;\n          }\n        } else {\n          lastc--;\n          exitg1 = 2;\n        }\n      } while (exitg1 == 0);\n\n      if (exitg1 == 1) {\n        exitg2 = true;\n      }\n    }\n\n    lastc--;\n  } else {\n    lastv = 0;\n    lastc = -1;\n  }\n\n  if (lastv > 0) {\n    real_T c;\n    int32_T d;\n    int32_T jA;\n    if (lastc + 1 != 0) {\n      if (lastc >= 0) {\n        memset(&work[0], 0, static_cast<uint32_T>(lastc + 1) * sizeof(real_T));\n      }\n\n      jA = 3 * lastc + ic0;\n      for (coltop = ic0; coltop <= jA; coltop += 3) {\n        c = 0.0;\n        d = coltop + lastv;\n        for (b_ia = coltop; b_ia < d; b_ia++) {\n          c += C[((iv0 + b_ia) - coltop) - 1] * C[b_ia - 1];\n        }\n\n        b_ia = div_nzp_s32_floor(coltop - ic0, 3);\n        work[b_ia] += c;\n      }\n    }\n\n    if (!(-tau == 0.0)) {\n      jA = ic0;\n      for (coltop = 0; coltop <= lastc; coltop++) {\n        if (work[coltop] != 0.0) {\n          c = work[coltop] * -tau;\n          d = lastv + jA;\n          for (b_ia = jA; b_ia < d; b_ia++) {\n            C[b_ia - 1] += C[((iv0 + b_ia) - jA) - 1] * c;\n          }\n        }\n\n        jA += 3;\n      }\n    }\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_f_xnrm2(int32_T n, const real_T x[3])\n{\n  real_T y;\n  y = 0.0;\n  if (n >= 1) {\n    if (n == 1) {\n      y = fabs(x[1]);\n    } else {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c = 3.3121686421112381E-170;\n      for (int32_T k = 2; k <= n + 1; k++) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absxk = fabs(x[k - 1]);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absxk >\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absxk;\n          y = y * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t + 1.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absxk;\n        } else {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.absxk /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c;\n          y += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.t;\n        }\n      }\n\n      y = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.scale_c * sqrt(y);\n    }\n  }\n\n  return y;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic real_T ctrl_TT_ad_ctrl_cpp_ros_xzlarfg(int32_T n, real_T *alpha1, real_T\n  x[3])\n{\n  real_T tau;\n  tau = 0.0;\n  if (n > 0) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm = ctrl_TT_ad_ctrl_cpp_ros_f_xnrm2(n -\n      1, x);\n    if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm != 0.0) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm = ctrl_TT_ad_ctrl_c_rt_hypotd_snf\n        (*alpha1, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm);\n      if (*alpha1 >= 0.0) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm =\n          -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n      }\n\n      if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm) < 1.0020841800044864E-292)\n      {\n        int32_T knt;\n        knt = 0;\n        do {\n          knt++;\n          for (int32_T b_k = 2; b_k <= n; b_k++) {\n            x[b_k - 1] *= 9.9792015476736E+291;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm *= 9.9792015476736E+291;\n          *alpha1 *= 9.9792015476736E+291;\n        } while ((fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm) <\n                  1.0020841800044864E-292) && (knt < 20));\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm = ctrl_TT_ad_ctrl_c_rt_hypotd_snf(*\n          alpha1, ctrl_TT_ad_ctrl_cpp_ros_f_xnrm2(n - 1, x));\n        if (*alpha1 >= 0.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm =\n            -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n        }\n\n        tau = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm - *alpha1) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_h = 1.0 / (*alpha1 -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm);\n        for (int32_T b_k = 2; b_k <= n; b_k++) {\n          x[b_k - 1] *= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_h;\n        }\n\n        for (int32_T b_k = 0; b_k < knt; b_k++) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm *= 1.0020841800044864E-292;\n        }\n\n        *alpha1 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n      } else {\n        tau = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm - *alpha1) /\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_h = 1.0 / (*alpha1 -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm);\n        for (int32_T knt = 2; knt <= n; knt++) {\n          x[knt - 1] *= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a_h;\n        }\n\n        *alpha1 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.xnorm;\n      }\n    }\n  }\n\n  return tau;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_fe_xrot(int32_T n, real_T x[9], int32_T ix0,\n  int32_T iy0, real_T c, real_T s)\n{\n  if (n >= 1) {\n    for (int32_T k = 0; k < n; k++) {\n      int32_T temp_tmp;\n      int32_T temp_tmp_0;\n      temp_tmp = (iy0 + k) - 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp = x[temp_tmp];\n      temp_tmp_0 = (ix0 + k) - 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp_a = x[temp_tmp_0];\n      x[temp_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp * c -\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp_a * s;\n      x[temp_tmp_0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp_a * c +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.temp_tmp * s;\n    }\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic int32_T ctrl_TT_ad_ctrl_cpp_ro_xhseqr_d(real_T h[9], real_T z[9])\n{\n  int32_T i;\n  int32_T info;\n  int32_T kdefl;\n  boolean_T exitg1;\n  info = 0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2] = 0.0;\n  h[2] = 0.0;\n  kdefl = 0;\n  i = 2;\n  exitg1 = false;\n  while ((!exitg1) && (i + 1 >= 1)) {\n    int32_T L;\n    int32_T its;\n    int32_T j;\n    int32_T k;\n    int32_T nr;\n    boolean_T exitg2;\n    boolean_T goto150;\n    L = 1;\n    goto150 = false;\n    its = 0;\n    exitg2 = false;\n    while ((!exitg2) && (its < 301)) {\n      boolean_T exitg3;\n      k = i;\n      exitg3 = false;\n      while ((!exitg3) && (k + 1 > L)) {\n        j = (k - 1) * 3 + k;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = fabs(h[j]);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 <= 3.0062525400134592E-292) {\n          exitg3 = true;\n        } else {\n          nr = 3 * k + k;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[j - 1]) + fabs(h[nr]);\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst == 0.0) {\n            if (k - 1 >= 1) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[((k - 2) * 3 + k) - 1]);\n            }\n\n            if (k + 2 <= 3) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst += fabs(h[nr + 1]);\n            }\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 <= 2.2204460492503131E-16 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = fabs(h[j]);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[nr - 1]);\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 >\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = h[nr];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = fabs\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[j - 1] -\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst);\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 >\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa /\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 * 2.2204460492503131E-16;\n            if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 <=\n                 3.0062525400134592E-292) || rtIsNaN\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = 3.0062525400134592E-292;\n            }\n\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab /\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba <=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1) {\n              exitg3 = true;\n            } else {\n              k--;\n            }\n          } else {\n            k--;\n          }\n        }\n      }\n\n      L = k + 1;\n      if (k + 1 > 1) {\n        h[k + 3 * (k - 1)] = 0.0;\n      }\n\n      if (k + 1 >= i) {\n        goto150 = true;\n        exitg2 = true;\n      } else {\n        kdefl++;\n        if (kdefl - div_nzp_s32(kdefl, 20) * 20 == 0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[((i - 2) * 3 + i) - 1]) +\n            fabs(h[(i - 1) * 3 + i]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = h[3 * i + i] + 0.75 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 = -0.4375 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n        } else if (kdefl - div_nzp_s32(kdefl, 10) * 10 == 0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = fabs(h[1]) + fabs(h[5]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = 0.75 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst + h[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 = -0.4375 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n        } else {\n          k = (i - 1) * 3 + i;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = h[k - 1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = h[k];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 = h[(3 * i + i) - 1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab = h[3 * i + i];\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = ((fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba) + fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12)) + fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa)) + fabs\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst == 0.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = 0.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab = 0.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = 0.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = 0.0;\n        } else {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 =\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab) / 2.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba -\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1) *\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab -\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1) -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa /\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = sqrt(fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba));\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba >= 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n              -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 -=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n            if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba -\n                     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab) <= fabs\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 -\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = 0.0;\n          }\n        }\n\n        if (i - 1 >= 1) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 = h[0] -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = (fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12) + fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa)) + fabs(h[1]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h21s = h[1] /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0] =\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 /\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst * (h[0] -\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba) +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h21s * h[3]) -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1] = (((h[0] + h[4]) -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba) -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1) *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h21s;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h21s * h[5];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = (fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0]) + fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1])) + fabs\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2] /=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n        }\n\n        for (k = i - 1; k <= i; k++) {\n          int32_T hoffset;\n          nr = (i - k) + 2;\n          if (nr >= 3) {\n            nr = 3;\n          }\n\n          if (k > i - 1) {\n            hoffset = ((k - 2) * 3 + k) - 1;\n            for (j = 0; j < nr; j++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[j] = h[j + hoffset];\n            }\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst = ctrl_TT_ad_ctrl_cpp_ros_xzlarfg\n            (nr, &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab,\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[0] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n          if (k > i - 1) {\n            h[(k + 3 * (k - 2)) - 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n            j = (k - 2) * 3 + k;\n            h[j] = 0.0;\n            if (k < i) {\n              h[j + 1] = 0.0;\n            }\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1];\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[1];\n          switch (nr) {\n           case 3:\n            {\n              int32_T e;\n              int32_T sum1_tmp;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12 =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.v[2];\n              for (nr = k; nr < 4; nr++) {\n                j = (nr - 1) * 3 + k;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = (h[j - 1] + h[j] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab) + h[j + 1] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n                h[j - 1] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n                h[j] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n                h[j + 1] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12;\n              }\n\n              if (k + 3 <= i + 1) {\n                e = k + 3;\n              } else {\n                e = i + 1;\n              }\n\n              for (hoffset = 0; hoffset < e; hoffset++) {\n                j = (k - 1) * 3 + hoffset;\n                nr = 3 * k + hoffset;\n                sum1_tmp = (k + 1) * 3 + hoffset;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = (h[nr] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab + h[j]) + h[sum1_tmp] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n                h[j] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n                h[nr] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n                h[sum1_tmp] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12;\n              }\n\n              for (hoffset = 0; hoffset < 3; hoffset++) {\n                j = (k - 1) * 3 + hoffset;\n                nr = 3 * k + hoffset;\n                sum1_tmp = (k + 1) * 3 + hoffset;\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = (z[nr] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab + z[j]) + z[sum1_tmp] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n                z[j] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n                z[nr] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n                z[sum1_tmp] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12;\n              }\n            }\n            break;\n\n           case 2:\n            for (nr = k; nr < 4; nr++) {\n              j = (nr - 1) * 3 + k;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = h[j - 1];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = h[j] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n              h[j - 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              h[j] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n            }\n\n            for (hoffset = 0; hoffset <= i; hoffset++) {\n              j = (k - 1) * 3 + hoffset;\n              nr = 3 * k + hoffset;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = h[nr] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab + h[j];\n              h[j] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              h[nr] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n            }\n\n            for (hoffset = 0; hoffset < 3; hoffset++) {\n              j = (k - 1) * 3 + hoffset;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = z[j];\n              nr = 3 * k + hoffset;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = z[nr] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n              z[j] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst;\n              z[nr] -= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n            }\n            break;\n          }\n        }\n\n        its++;\n      }\n    }\n\n    if (!goto150) {\n      info = i + 1;\n      exitg1 = true;\n    } else {\n      if ((i + 1 != L) && (L == i)) {\n        its = 3 * i + i;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = h[its - 1];\n        kdefl = (i - 1) * 3;\n        k = kdefl + i;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = h[k];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa = h[its];\n        ctrl_TT_ad_ctrl_cpp_ros_xdlanv2(&h[(i + 3 * (i - 1)) - 1],\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h12,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.h21s,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a__3,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a__4,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst,\n          &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab);\n        h[its - 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n        h[k] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1;\n        h[its] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.aa;\n        if (i + 1 < 3) {\n          k = 2 - i;\n          j = (i + 1) * 3 + i;\n          for (its = 0; its < k; its++) {\n            nr = its * 3 + j;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = h[nr];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = h[nr - 1];\n            h[nr] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst -\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n            h[nr - 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n          }\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_fe_xrot(i - 1, h, (i - 1) * 3 + 1, i * 3 + 1,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab);\n        i *= 3;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst\n          * z[kdefl] + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab * z[i];\n        z[i] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst * z[i] -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab * z[kdefl];\n        z[kdefl] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = z[i + 1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = z[kdefl + 1];\n        z[i + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n        z[kdefl + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba = z[i + 2];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 = z[kdefl + 2];\n        z[i + 2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n        z[kdefl + 2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.htmp1 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tst +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ba *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ab;\n      }\n\n      kdefl = 0;\n      i = L - 2;\n    }\n  }\n\n  return info;\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros_schur_c(const real_T A[9], real_T V[9],\n  real_T T[9])\n{\n  boolean_T p;\n  p = true;\n  for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 0;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i < 9;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A = A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i];\n    if (p && (rtIsInf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A))) {\n      p = false;\n    }\n  }\n\n  if (!p) {\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i++) {\n      V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i] = (rtNaN);\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 2;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n++) {\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i <= 3) {\n        memset(&V[(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n * 3 +\n                   ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i) + -1], 0,\n               static_cast<uint32_T>(-ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i + 4) *\n               sizeof(real_T));\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i++;\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i++) {\n      T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i] = (rtNaN);\n    }\n  } else {\n    memcpy(&T[0], &A[0], 9U * sizeof(real_T));\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[0] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[1] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[2] = 0.0;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i++) {\n      int32_T alpha1_tmp;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i\n        * 3 + 2;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i\n        + 1) * 3;\n      alpha1_tmp = (3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i +\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i) + 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A = T[alpha1_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i *\n        3 + 3;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i] =\n        0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 = ctrl_TT_ad_ctrl_cpp_ros_xnrm2_l(1\n        - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i, T,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0);\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 != 0.0) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 = ctrl_TT_ad_ctrl_c_rt_hypotd_snf\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A,\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1);\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A >= 0.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 =\n            -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n        }\n\n        if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1) <\n            1.0020841800044864E-292) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt = 0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i;\n          do {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt++;\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft =\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft <=\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft++) {\n              T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft - 1] *=\n                9.9792015476736E+291;\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 *= 9.9792015476736E+291;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A *= 9.9792015476736E+291;\n          } while ((fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1) <\n                    1.0020841800044864E-292) &&\n                   (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt < 20));\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 =\n            ctrl_TT_ad_ctrl_c_rt_hypotd_snf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A,\n            ctrl_TT_ad_ctrl_cpp_ros_xnrm2_l(1 -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i, T,\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0));\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A >= 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 =\n              -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i]\n            = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 -\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A) /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A = 1.0 /\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A -\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1);\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft =\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft <=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft++) {\n            T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft - 1] *=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A;\n          }\n\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 <\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 *= 1.0020841800044864E-292;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n        } else {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i]\n            = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 -\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A) /\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A = 1.0 /\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A -\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i;\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc =\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc <=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc++) {\n            T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc - 1] *=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n        }\n      }\n\n      T[alpha1_tmp] = 1.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 = (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i\n        + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n) - 1;\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i]\n          != 0.0) {\n        boolean_T exitg2;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt = 1 -\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc =\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 -\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i) + 1;\n        while ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt + 1 > 0) &&\n               (T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc] == 0.0)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt--;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc--;\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc = 3;\n        exitg2 = false;\n        while ((!exitg2) && (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc > 0)) {\n          int32_T exitg1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft;\n          do {\n            exitg1 = 0;\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c <=\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt * 3 +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft) {\n              if (T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c - 1] != 0.0) {\n                exitg1 = 1;\n              } else {\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c += 3;\n              }\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc--;\n              exitg1 = 2;\n            }\n          } while (exitg1 == 0);\n\n          if (exitg1 == 1) {\n            exitg2 = true;\n          }\n        }\n      } else {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt = -1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc = 0;\n      }\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt + 1 > 0) {\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc != 0) {\n          memset(&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[0], 0, static_cast<\n                 uint32_T>(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc) * sizeof\n                 (real_T));\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c = (3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in) + 1;\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac =\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in + 1;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac <=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac += 3) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc;\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_ia =\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_ia <\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_ia++) {\n              int32_T work_tmp;\n              work_tmp = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_ia -\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[work_tmp] +=\n                T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_ia - 1] *\n                T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft];\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft++;\n          }\n        }\n\n        if (!(-ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i]\n              == 0.0)) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in;\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c <=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.knt;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 =\n              T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.ix0 +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_ia_c];\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 != 0.0) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1 *=\n                -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac =\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.lastc +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft;\n              for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g =\n                   ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft + 1;\n                   ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g <=\n                   ctrl_TT_ad_ctrl_cpp_ros_feedb_B.iac;\n                   ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g++) {\n                T[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g - 1] +=\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work\n                  [(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g -\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft) - 1] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.beta1;\n              }\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rowleft += 3;\n          }\n        }\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros__xzlarf(2 - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i, 2\n        - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i],\n        T, (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in) + 2,\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work);\n      T[alpha1_tmp] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A;\n    }\n\n    memcpy(&V[0], &T[0], 9U * sizeof(real_T));\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 1;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i >= 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i--) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i + 1) * 3;\n      for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in = 0;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in <=\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in++) {\n        V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in] = 0.0;\n      }\n\n      for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in =\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i + 3;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in < 4;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in++) {\n        V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n + 2] =\n          V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n - 1];\n      }\n    }\n\n    V[1] = 0.0;\n    V[2] = 0.0;\n    V[0] = 1.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[0] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[1] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work[2] = 0.0;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i = 1;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i >= 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i--) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i * 3 +\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i) + 6;\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i + 1 < 2) {\n        V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n - 2] = 1.0;\n        ctrl_TT_ad_ctrl_cpp_ros__xzlarf(2, 1,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n - 1,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i],\n          V, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n + 2,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.work);\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in =\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in <=\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in++) {\n          V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.in - 1] *=\n            -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i];\n        }\n      }\n\n      V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n - 2] = 1.0 -\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.tau[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i];\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.g_i - 1 >= 0) {\n        V[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.im1n - 3] = 0.0;\n      }\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ro_xhseqr_d(T, V);\n  }\n}\n\n// Function for MATLAB Function: '<S16>/l1 aug - depth'\nstatic void ctrl_TT_ad_ctrl_cpp_ros__expm_f(real_T A[9], real_T F[9])\n{\n  boolean_T recomputeDiags;\n  recomputeDiags = true;\n  for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj =\n      A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o];\n    if (recomputeDiags && (rtIsInf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj) ||\n                           rtIsNaN(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj))) {\n      recomputeDiags = false;\n    }\n  }\n\n  if (!recomputeDiags) {\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n      F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] = (rtNaN);\n    }\n  } else {\n    int32_T exitg1;\n    boolean_T exitg2;\n    recomputeDiags = true;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n    exitg2 = false;\n    while ((!exitg2) && (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3)) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n      do {\n        exitg1 = 0;\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3) {\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i !=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o) && (!(A[3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i] == 0.0))) {\n            recomputeDiags = false;\n            exitg1 = 1;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++;\n          }\n        } else {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++;\n          exitg1 = 2;\n        }\n      } while (exitg1 == 0);\n\n      if (exitg1 == 1) {\n        exitg2 = true;\n      }\n    }\n\n    if (recomputeDiags) {\n      memset(&F[0], 0, 9U * sizeof(real_T));\n      F[0] = exp(A[0]);\n      F[4] = exp(A[4]);\n      F[8] = exp(A[8]);\n    } else {\n      recomputeDiags = true;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n      exitg2 = false;\n      while ((!exitg2) && (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3)) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n        do {\n          exitg1 = 0;\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i <=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o) {\n            if (!(A[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o +\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i] == A[3 *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i +\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o])) {\n              recomputeDiags = false;\n              exitg1 = 1;\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++;\n            }\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++;\n            exitg1 = 2;\n          }\n        } while (exitg1 == 0);\n\n        if (exitg1 == 1) {\n          exitg2 = true;\n        }\n      }\n\n      if (recomputeDiags) {\n        ctrl_TT_ad_ctrl_cpp_ros_schur_c(A, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k);\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i < 3;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i++) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj = exp\n            (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[3 *\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i]);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i] =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i + 1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n            =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n            * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i + 2;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n            =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n            * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj;\n        }\n\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m = 3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o;\n            F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m] = 0.0;\n            F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i];\n            F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 3] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i\n              + 3];\n            F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m] +=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 6] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i\n              + 6];\n          }\n        }\n\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] = (F[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] +\n            F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]) / 2.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m = 3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 1;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n            = (F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 3] +\n               F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]) / 2.0;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m = 3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 2;\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n            = (F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 6] +\n               F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]) / 2.0;\n        }\n\n        memcpy(&F[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[0], 9U * sizeof(real_T));\n      } else {\n        boolean_T guard1 = false;\n        boolean_T guard2 = false;\n        boolean_T guard3 = false;\n        boolean_T guard4 = false;\n        recomputeDiags = (A[2] == 0.0);\n        if (recomputeDiags) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 0;\n          exitg2 = false;\n          while ((!exitg2) && (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k < 2)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 =\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 1];\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 != 0.0) {\n              if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k + 1 != 2) && (A[5] !=\n                   0.0)) {\n                recomputeDiags = false;\n                exitg2 = true;\n              } else {\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i =\n                  (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k + 1) * 3 +\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k;\n                if (A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 1] !=\n                    A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]) {\n                  recomputeDiags = false;\n                  exitg2 = true;\n                } else {\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj =\n                    A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i];\n                  if (rtIsNaN(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6)) {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = (rtNaN);\n                  } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 < 0.0) {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = -1.0;\n                  } else {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 =\n                      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 > 0.0);\n                  }\n\n                  if (rtIsNaN(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj)) {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj = (rtNaN);\n                  } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj < 0.0) {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj = -1.0;\n                  } else {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj =\n                      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj > 0.0);\n                  }\n\n                  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 *\n                      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj != -1.0) {\n                    recomputeDiags = false;\n                    exitg2 = true;\n                  } else {\n                    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k++;\n                  }\n                }\n              }\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k++;\n            }\n          }\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj = 0.0;\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += A[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] *\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += A[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 1] *\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += A[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 2] *\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 6];\n          }\n        }\n\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 1] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 2] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 6];\n          }\n\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i +\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              = 0.0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 1] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 3];\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n              += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[3 *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 2] *\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o\n              + 6];\n          }\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = rt_powd_snf\n          (ctrl_TT_ad_ctrl_cpp_ros__norm_b(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6),\n           0.16666666666666666);\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 = rt_powd_snf\n          (ctrl_TT_ad_ctrl_cpp_ros__norm_b(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4),\n           0.25);\n        if ((!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 >=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6)) && (!rtIsNaN\n             (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6))) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 =\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6;\n        }\n\n        guard1 = false;\n        guard2 = false;\n        guard3 = false;\n        guard4 = false;\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 <= 0.01495585217958292) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              = 0.19285012468241128 * fabs\n              (A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]);\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv,\n            7.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n            (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros__norm_b\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1) /\n              ctrl_TT_ad_ctrl_cpp_ros__norm_b(A) * 2.0 / 2.2204460492503131E-16)\n             / 6.0);\n          if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = 0.0;\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 == 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 3;\n          } else {\n            guard4 = true;\n          }\n        } else {\n          guard4 = true;\n        }\n\n        if (guard4) {\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 <= 0.253939833006323) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n                = 0.12321872304378752 * fabs\n                (A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]);\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv,\n              11.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n              (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros__norm_b\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1) /\n                ctrl_TT_ad_ctrl_cpp_ros__norm_b(A) * 2.0 /\n                2.2204460492503131E-16) / 10.0);\n            if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = 0.0;\n            }\n\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 == 0.0) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 5;\n            } else {\n              guard3 = true;\n            }\n          } else {\n            guard3 = true;\n          }\n        }\n\n        if (guard3) {\n          ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4,\n            2.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 = rt_powd_snf\n            (ctrl_TT_ad_ctrl_cpp_ros__norm_b(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv),\n             0.125);\n          if ((!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 >=\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1)) && (!rtIsNaN\n               (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1))) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1;\n          }\n\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 <= 0.95041789961629319) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n                = 0.090475336558796943 * fabs\n                (A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]);\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv,\n              15.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n              (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros__norm_b\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1) /\n                ctrl_TT_ad_ctrl_cpp_ros__norm_b(A) * 2.0 /\n                2.2204460492503131E-16) / 14.0);\n            if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = 0.0;\n            }\n\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 == 0.0) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 7;\n            } else {\n              guard2 = true;\n            }\n          } else {\n            guard2 = true;\n          }\n        }\n\n        if (guard2) {\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 <= 2.097847961257068) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n                = 0.071467735648795785 * fabs\n                (A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]);\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv,\n              19.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n              (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros__norm_b\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1) /\n                ctrl_TT_ad_ctrl_cpp_ros__norm_b(A) * 2.0 /\n                2.2204460492503131E-16) / 18.0);\n            if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0)) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = 0.0;\n            }\n\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 == 0.0) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 9;\n            } else {\n              guard1 = true;\n            }\n          } else {\n            guard1 = true;\n          }\n        }\n\n        if (guard1) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n                = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n                += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n                += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 1] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i\n                + 3];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k]\n                += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 2] *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i\n                + 6];\n            }\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = rt_powd_snf\n            (ctrl_TT_ad_ctrl_cpp_ros__norm_b\n             (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k), 0.1);\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 >=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1;\n          }\n\n          if ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 <=\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0) || rtIsNaN\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n            (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 /\n              5.3719203511481517));\n          if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = rt_powd_snf(2.0,\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 =\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] /\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              = 0.05031554467093536 * fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0);\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ro_mpower_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv,\n            27.0, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = ceil\n            (ctrl_TT_ad_ctrl_cpp_ros_fe_log2(ctrl_TT_ad_ctrl_cpp_ros__norm_b\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv1) /\n              ctrl_TT_ad_ctrl_cpp_ros__norm_b\n              (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4_k) * 2.0 /\n              2.2204460492503131E-16) / 26.0);\n          if (!(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 >= 0.0)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = 0.0;\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj +=\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0;\n          if (rtIsInf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj)) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = ctrl_TT_ad_ctrl_cpp_ros__norm_b\n              (A) / 5.3719203511481517;\n            if ((!rtIsInf(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6)) && (!rtIsNaN\n                 (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6))) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = frexp\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6,\n                 &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i);\n            } else {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 0;\n            }\n\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj =\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i;\n            if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 == 0.5) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj = static_cast<real_T>\n                (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i) - 1.0;\n            }\n          }\n\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = 13;\n        }\n\n        if (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj != 0.0) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6 = rt_powd_snf(2.0,\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0 = rt_powd_snf(2.0, 2.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1 = rt_powd_snf(2.0, 4.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y = rt_powd_snf(2.0, 6.0 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n            A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] /=\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d6;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.u0;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.eta1;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o]\n              /= ctrl_TT_ad_ctrl_cpp_ros_feedb_B.d_y;\n          }\n        }\n\n        if (recomputeDiags) {\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[1] = 0;\n          if (A[1] != 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[0] = 2;\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[1] = 0;\n          } else if (A[5] == 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[0] = 1;\n          } else {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[0] = 0;\n          }\n\n          if (A[5] != 0.0) {\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[1] = 2;\n          } else {\n            switch (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[0]) {\n             case 0:\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[1] = 1;\n              break;\n\n             case 1:\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat[1] = 1;\n              break;\n            }\n          }\n        }\n\n        ctrl_TT_ad_ct_padeApproximation(A, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A4, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A6,\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i, F);\n        if (recomputeDiags) {\n          ctrl_TT_ad_recomputeBlockDiag_b(A, F,\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat);\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i = static_cast<int32_T>\n          (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.exptj);\n        for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k = 0;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k <\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_s_i;\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_k_k++) {\n          for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 3;\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i < 3;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i++) {\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m = 3 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i +\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n                = 0.0;\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n                += F[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i] *\n                F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n                += F[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 1] *\n                F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 3];\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.F_tmp_m]\n                += F[3 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_i + 2] *\n                F[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o + 6];\n            }\n          }\n\n          memcpy(&F[0], &ctrl_TT_ad_ctrl_cpp_ros_feedb_B.A2[0], 9U * sizeof\n                 (real_T));\n          if (recomputeDiags) {\n            for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o = 0;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o < 9;\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o++) {\n              A[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.c_k_o] *= 2.0;\n            }\n\n            ctrl_TT_ad_recomputeBlockDiag_b(A, F,\n              ctrl_TT_ad_ctrl_cpp_ros_feedb_B.blockFormat);\n          }\n        }\n      }\n    }\n  }\n}\n\nreal_T rt_atan2d_snf(real_T u0, real_T u1)\n{\n  real_T y;\n  if (rtIsNaN(u0) || rtIsNaN(u1)) {\n    y = (rtNaN);\n  } else if (rtIsInf(u0) && rtIsInf(u1)) {\n    int32_T tmp;\n    int32_T tmp_0;\n    if (u0 > 0.0) {\n      tmp = 1;\n    } else {\n      tmp = -1;\n    }\n\n    if (u1 > 0.0) {\n      tmp_0 = 1;\n    } else {\n      tmp_0 = -1;\n    }\n\n    y = atan2(static_cast<real_T>(tmp), static_cast<real_T>(tmp_0));\n  } else if (u1 == 0.0) {\n    if (u0 > 0.0) {\n      y = RT_PI / 2.0;\n    } else if (u0 < 0.0) {\n      y = -(RT_PI / 2.0);\n    } else {\n      y = 0.0;\n    }\n  } else {\n    y = atan2(u0, u1);\n  }\n\n  return y;\n}\n\n// Model step function\nvoid ctrl_TT_ad_ctrl_cpp_ros_feedback_1_step(void)\n{\n  boolean_T tmp;\n\n  // Clock: '<S16>/Clock'\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock =\n    ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.t[0];\n\n  // MATLAB Function: '<S16>/MATLAB Function2'\n  ctrl_TT_ad_ctrl_c_BernsteinPoly(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Cp,\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock, 0.0,\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Tf, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd);\n  ctrl_TT_ad_ctrl_c_BernsteinPoly(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Cp_prime,\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock, 0.0,\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Tf, ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp);\n\n  // S-Function (sdsp2norm2): '<S41>/Normalization' incorporates:\n  //   S-Function (sdsp2norm2): '<S41>/Normalization1'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[0]\n    * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[0];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc = 1.0 / (sqrt\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[1] *\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[1] +\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock) +\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Normalization_Bias);\n\n  // SignalConversion generated from: '<S41>/Normalization1' incorporates:\n  //   Gain: '<S41>/Gain'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Gain_Gain *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[1];\n\n  // S-Function (sdsp2norm2): '<S41>/Normalization'\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[0] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n\n  // S-Function (sdsp2norm2): '<S41>/Normalization1' incorporates:\n  //   SignalConversion generated from: '<S41>/Normalization1'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc = 1.0 / (sqrt\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0] *\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0] +\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock) +\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Normalization1_Bias);\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0] *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[0] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe'\n  // MATLABSystem: '<S20>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45555.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S20>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S68>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S68>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_pu =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S20>/SourceBlock'\n  // End of Outputs for SubSystem: '<S20>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe1'\n  // MATLABSystem: '<S21>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45560.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S21>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S69>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S69>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_b =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S21>/SourceBlock'\n  // End of Outputs for SubSystem: '<S21>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe1'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe2'\n  // MATLABSystem: '<S24>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45565.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S24>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S72>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S72>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_l =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S24>/SourceBlock'\n  // End of Outputs for SubSystem: '<S24>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe2'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe3'\n  // MATLABSystem: '<S25>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45570.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S25>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S73>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S73>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_j =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S25>/SourceBlock'\n  // End of Outputs for SubSystem: '<S25>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe3'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe4'\n  // MATLABSystem: '<S26>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45575.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S26>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S74>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S74>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_ff =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S26>/SourceBlock'\n  // End of Outputs for SubSystem: '<S26>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe4'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe5'\n  // MATLABSystem: '<S27>/SourceBlock'\n  tmp = Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45581.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // Outputs for Enabled SubSystem: '<S27>/Enabled Subsystem' incorporates:\n  //   EnablePort: '<S75>/Enable'\n\n  if (tmp) {\n    // SignalConversion generated from: '<S75>/In1'\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_fi =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2;\n  }\n\n  // End of MATLABSystem: '<S27>/SourceBlock'\n  // End of Outputs for SubSystem: '<S27>/Enabled Subsystem'\n  // End of Outputs for SubSystem: '<Root>/Subscribe5'\n\n  // SignalConversion generated from: '<S16>/Matrix Multiply' incorporates:\n  //   BusAssignment: '<Root>/Bus Assignment4'\n  //   BusAssignment: '<Root>/Bus Assignment5'\n  //   BusAssignment: '<Root>/Bus Assignment6'\n  //   BusAssignment: '<Root>/Bus Assignment7'\n  //   BusAssignment: '<Root>/Bus Assignment8'\n  //   BusAssignment: '<Root>/Bus Assignment9'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_pu.Data;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[1] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_b.Data;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[2] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_l.Data;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[3] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_j.Data;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[4] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_ff.Data;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[5] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_fi.Data;\n  for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 6;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n    // Product: '<S16>/Matrix Multiply' incorporates:\n    //   Constant: '<S16>/Constant'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n      = 0.0;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp < 6;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Constant_Value_gf[6 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp];\n    }\n\n    // End of Product: '<S16>/Matrix Multiply'\n  }\n\n  // Product: '<S41>/pT_' incorporates:\n  //   Concatenate: '<S41>/Matrix Concatenate'\n  //   Math: '<S41>/Transpose'\n  //   Sum: '<S41>/Add1'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc =\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[0] -\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[0]) *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] +\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[1] -\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[1]) *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3];\n\n  // Sqrt: '<S41>/Square Root' incorporates:\n  //   Constant: '<S41>/Constant3'\n  //   Math: '<S41>/Square'\n  //   Math: '<S41>/Square1'\n  //   Sum: '<S41>/Add'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot = sqrt\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.d * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.d +\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc);\n\n  // Product: '<S41>/Divide' incorporates:\n  //   Constant: '<S41>/Constant3'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock = ctrl_TT_ad_ctrl_cpp_ros_feedb_P.d /\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n\n  // Product: '<S41>/Divide1'\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc /=\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n\n  // MATLAB Function: '<S41>/MATLAB Function'\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n    -ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock;\n\n  // Product: '<S35>/Matrix Multiply1' incorporates:\n  //   Concatenate: '<S41>/Matrix Concatenate'\n\n  for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 << 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] = 0.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3];\n  }\n\n  // End of Product: '<S35>/Matrix Multiply1'\n\n  // MATLAB Function: '<S35>/MATLAB Function' incorporates:\n  //   Product: '<S35>/Matrix Multiply1'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[0];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[2];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[6] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[1] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[1];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[4] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[3];\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[7] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[2] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[5] = 0.0;\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[8] = 1.0;\n\n  // If: '<S46>/If1' incorporates:\n  //   Constant: '<S46>/Constant'\n\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotation != 1.0) {\n    // Outputs for IfAction SubSystem: '<S46>/If Warning//Error' incorporates:\n    //   ActionPort: '<S55>/if'\n\n    // Bias: '<S58>/Bias1' incorporates:\n    //   Math: '<S58>/Math Function'\n    //   Product: '<S58>/Product'\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 3;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp = 0;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp < 3;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp++) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] =\n          ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 1] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 1] +\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]) +\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 2] *\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[3 *\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 2]) +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Bias1_Bias[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2];\n      }\n    }\n\n    // End of Bias: '<S58>/Bias1'\n\n    // RelationalOperator: '<S64>/Compare' incorporates:\n    //   Abs: '<S58>/Abs2'\n    //   Constant: '<S64>/Constant'\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Compare[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        = (fabs\n           (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1])\n           > ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotati_a);\n    }\n\n    // End of RelationalOperator: '<S64>/Compare'\n\n    // Logic: '<S58>/Logical Operator1' incorporates:\n    //   RelationalOperator: '<S64>/Compare'\n\n    tmp = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Compare[0];\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 8;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      tmp = (tmp ||\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Compare[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n             + 1]);\n    }\n\n    // If: '<S55>/If' incorporates:\n    //   Abs: '<S59>/Abs1'\n    //   Bias: '<S59>/Bias'\n    //   Constant: '<S66>/Constant'\n    //   Logic: '<S58>/Logical Operator1'\n    //   MATLAB Function: '<S35>/MATLAB Function'\n    //   Product: '<S35>/Matrix Multiply1'\n    //   Product: '<S65>/Product'\n    //   Product: '<S65>/Product1'\n    //   Product: '<S65>/Product2'\n    //   Product: '<S65>/Product3'\n    //   Product: '<S65>/Product4'\n    //   Product: '<S65>/Product5'\n    //   RelationalOperator: '<S66>/Compare'\n    //   Sum: '<S65>/Sum'\n\n    if (fabs((((((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[0] *\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[3] -\n                  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[0] * 0.0 * 0.0)\n                 - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[1] *\n                 ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[2]) + 0.0 *\n                ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[2] * 0.0) +\n               ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[1] * 0.0 * 0.0) -\n              0.0 * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[3] * 0.0) +\n             ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Bias_Bias) >\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotati_a) {\n      // Outputs for IfAction SubSystem: '<S55>/If Not Proper' incorporates:\n      //   ActionPort: '<S57>/Action Port'\n\n      // If: '<S57>/If' incorporates:\n      //   Constant: '<S57>/Constant'\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotation == 2.0)\n      {\n        // Outputs for IfAction SubSystem: '<S57>/Warning' incorporates:\n        //   ActionPort: '<S63>/Action Port'\n\n        // Assertion: '<S63>/Assertion' incorporates:\n        //   Constant: '<S57>/Constant1'\n\n        utAssert(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Constant1_Value != 0.0);\n\n        // End of Outputs for SubSystem: '<S57>/Warning'\n      } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotation\n                 == 3.0) {\n        // Outputs for IfAction SubSystem: '<S57>/Error' incorporates:\n        //   ActionPort: '<S62>/Action Port'\n\n        // Assertion: '<S62>/Assertion' incorporates:\n        //   Constant: '<S57>/Constant1'\n\n        utAssert(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Constant1_Value != 0.0);\n\n        // End of Outputs for SubSystem: '<S57>/Error'\n      }\n\n      // End of If: '<S57>/If'\n      // End of Outputs for SubSystem: '<S55>/If Not Proper'\n    } else if (tmp) {\n      // Outputs for IfAction SubSystem: '<S55>/Else If Not Orthogonal' incorporates:\n      //   ActionPort: '<S56>/Action Port'\n\n      // If: '<S56>/If' incorporates:\n      //   Constant: '<S56>/Constant'\n\n      if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotation == 2.0)\n      {\n        // Outputs for IfAction SubSystem: '<S56>/Warning' incorporates:\n        //   ActionPort: '<S61>/Action Port'\n\n        // Assertion: '<S61>/Assertion' incorporates:\n        //   Constant: '<S56>/Constant1'\n\n        utAssert(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Constant1_Value_e != 0.0);\n\n        // End of Outputs for SubSystem: '<S56>/Warning'\n      } else if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.DirectionCosineMatrixtoRotation\n                 == 3.0) {\n        // Outputs for IfAction SubSystem: '<S56>/Error' incorporates:\n        //   ActionPort: '<S60>/Action Port'\n\n        // Assertion: '<S60>/Assertion' incorporates:\n        //   Constant: '<S56>/Constant1'\n\n        utAssert(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Constant1_Value_e != 0.0);\n\n        // End of Outputs for SubSystem: '<S56>/Error'\n      }\n\n      // End of If: '<S56>/If'\n      // End of Outputs for SubSystem: '<S55>/Else If Not Orthogonal'\n    }\n\n    // End of If: '<S55>/If'\n    // End of Outputs for SubSystem: '<S46>/If Warning//Error'\n  }\n\n  // End of If: '<S46>/If1'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe6'\n  // MATLABSystem: '<S28>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45586.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe6'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe7'\n  // MATLABSystem: '<S29>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45591.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe7'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe8'\n  // MATLABSystem: '<S30>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45596.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe8'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe9'\n  // MATLABSystem: '<S31>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45601.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe9'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe10'\n  // MATLABSystem: '<S22>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45606.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe10'\n\n  // Outputs for Atomic SubSystem: '<Root>/Subscribe11'\n  // MATLABSystem: '<S23>/SourceBlock'\n  Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45611.getLatestMessage\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_varargout_2);\n\n  // End of Outputs for SubSystem: '<Root>/Subscribe11'\n\n  // MATLAB Function: '<S16>/l1 aug - depth'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_not_empty_o) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_not_empty_o = true;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot = ctrl_TT_ad_ctrl_cpp_ros_fee_inv\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1]);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[2];\n  }\n\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.adap != 0.0) {\n    if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[1]) > fabs\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[0])) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 0;\n    } else {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 1;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2]\n      /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n      + 2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2\n      + 2] - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 << 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      = ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 <<= 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] -\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n       * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp) /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      -=\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2]\n      * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 +\n      1] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n            + 1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp) /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] -=\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2\n      + 1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 << 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[3];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate,\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[1]) -\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[3];\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n         + 2] * 0.0 + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1) *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros__expm_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m);\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        0;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[0] = 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[4] = 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[8] = 1;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros__expm_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros__inv_jg(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y);\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] -\n        static_cast<real_T>\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]);\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 3;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 3];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n      for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp = 0;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp < 3;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp++) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] =\n          0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 1] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n          3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 2] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n          6];\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n        3] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[1] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n         + 3] * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[1] +\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n         * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[0]) +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n        6] * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[2];\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 3;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n          + 3] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[1] +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n          * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[0]) +\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n         6] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[2]) +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock = -ctrl_TT_ad_ctrl_cpp_ros_fee_inv\n      ((ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1]) *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[0] +\n       (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3]) *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[1]) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[2] -\n      ((ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[0] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[1]) +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[2] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[2]);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[0] +\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1] +\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0] - 1.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3] - 1.0;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[0] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2]) +\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd_p[1] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3]) +\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp;\n  } else {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[2];\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[0] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[0];\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[1] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[1];\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_g[2] =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[2];\n\n  // Outputs for IfAction SubSystem: '<S38>/AxisRotDefault' incorporates:\n  //   ActionPort: '<S43>/Action Port'\n\n  // If: '<S38>/If' incorporates:\n  //   Fcn: '<S43>/Fcn1'\n  //   Gain: '<S35>/Gain'\n  //   Gain: '<S45>/Gain1'\n  //   MATLAB Function: '<S35>/MATLAB Function'\n  //   Product: '<S35>/Matrix Multiply1'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc = rt_atan2d_snf\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Gain1_Gain[0] *\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[2],\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[0] *\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Gain1_Gain[1]) *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Gain_Gain_o;\n\n  // End of Outputs for SubSystem: '<S38>/AxisRotDefault'\n\n  // MATLAB Function: '<S16>/l1 aug - heading'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_not_empty) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu_not_empty = true;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot = ctrl_TT_ad_ctrl_cpp_ros_fee_inv\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1]);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[5];\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[5];\n  }\n\n  if (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.adap != 0.0) {\n    if (fabs(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[1]) > fabs\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[0])) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 0;\n    } else {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 1;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2]\n      /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n      + 2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2\n      + 2] - ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 << 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      = ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 <<= 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] -\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n       * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp) /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n      -=\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2]\n      * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 +\n      1] = (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] -\n            ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n            + 1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp) /\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n      + 1] -=\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2\n      + 1] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 << 1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp\n        + 1] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Lambdaz[3];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate,\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[1]) -\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[5];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Phiinvz[3];\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n         + 2] * 0.0 + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1) *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros__expm_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m);\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        0;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[0] = 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[4] = 1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[8] = 1;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros__expm_f(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      -ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros__inv_jg(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Aoz,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y);\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 9;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] -\n        static_cast<real_T>\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_I[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]);\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 3;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 3];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Boz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 + 3]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n      for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp = 0;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp < 3;\n           ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp++) {\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2 = 3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] =\n          0.0;\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 1] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n          3];\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r2] +=\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao_c[3 *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixMultiply1_tmp + 2] *\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n          6];\n      }\n\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n        3] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[1] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv4[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[0];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n         + 3] * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[1] +\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n         * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[0]) +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.y_m[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n        6] * ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[2];\n    }\n\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 3;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n          + 3] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[1] +\n          ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n          * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[0]) +\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Ao[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 +\n         6] * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv7[2]) +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_f_inv_j(ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc = -ctrl_TT_ad_ctrl_cpp_ros_fee_inv\n      ((ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[0] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[1]) *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[0] +\n       (ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[2] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Cmz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[3]) *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[1]) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc -\n      ((ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[0] *\n        ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[0] +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[1] *\n        ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[1]) +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Coz[2] *\n       ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[2]);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[2] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Amz[3] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[0] +\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[0] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1] +\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[1] *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3] =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n    ctrl_TT_ad_ctrl_cpp_ros_fe_expm(ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l,\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda);\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[0] - 1.0;\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[2];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3 =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Lambda[3] - 1.0;\n    for (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 = 0;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1 < 2;\n         ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2];\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_1;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] = 0.0;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] +=\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixConcatenate[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_2;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1\n        + 2] += ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_MatrixConcatenate_tmp *\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_idx_3;\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1] =\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_P.L1.Bmz[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1]\n        * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc +\n        ctrl_TT_ad_ctrl_cpp_ros_feedb_B.TmpSignalConversionAtNormal[ctrl_TT_ad_ctrl_cpp_ros_feedb_B.r1];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[0] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[0] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[2]) +\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.SquareRoot;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xd[1] =\n      (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[0] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[1] +\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.dv8[1] *\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.rtb_Divide_l[3]) +\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.a22_tmp;\n  } else {\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[0] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[0];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[1] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[1];\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[2] =\n      ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[2];\n  }\n\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[0] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[0];\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[1] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[1];\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.xu[2] = ctrl_TT_ad_ctrl_cpp_ros_feedb_B.uTmp[2];\n\n  // MATLAB Function: '<S16>/Marin PID' incorporates:\n  //   MATLAB Function: '<S16>/l1 aug - depth'\n  //   MATLAB Function: '<S16>/l1 aug - heading'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.zerr_int_prev +=\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock -\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[2]) *\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.thetaerr_int_prev += (0.0 -\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[4]) * 180.0 /\n    3.1415926535897931 * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n  ctrl_TT_ad_ctrl_cpp_ros_feed_DW.psierr_int_prev +=\n    (ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc -\n     ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[5]) * 180.0 /\n    3.1415926535897931 * ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Ts;\n\n  // BusAssignment: '<Root>/Bus Assignment' incorporates:\n  //   DotProduct: '<S35>/Dot Product1'\n  //   Gain: '<S35>/Gain1'\n  //   MATLAB Function: '<S16>/FF velocity ctrl'\n  //   Product: '<S35>/Matrix Multiply1'\n  //   Selector: '<S35>/1,1'\n  //   Selector: '<S35>/2,1'\n  //   Sum: '<S35>/Add1'\n  //   Sum: '<S35>/Sum'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment.Data =\n    (((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[0] -\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[0]) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Kp + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[0])\n     * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[0] +\n     ((ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pd[1] -\n       ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply[1]) *\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Kp + ctrl_TT_ad_ctrl_cpp_ros_feedb_B.pdp[1])\n     * ctrl_TT_ad_ctrl_cpp_ros_feedb_B.MatrixMultiply1[1]) / 4.0;\n\n  // Outputs for Atomic SubSystem: '<Root>/Publish'\n  // MATLABSystem: '<S17>/SinkBlock'\n  Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45530.publish\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment);\n\n  // End of Outputs for SubSystem: '<Root>/Publish'\n\n  // BusAssignment: '<Root>/Bus Assignment2' incorporates:\n  //   MATLAB Function: '<S16>/l1 aug - heading'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment2.Data =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.acc;\n\n  // Outputs for Atomic SubSystem: '<Root>/Publish2'\n  // MATLABSystem: '<S19>/SinkBlock'\n  Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45545.publish\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment2);\n\n  // End of Outputs for SubSystem: '<Root>/Publish2'\n\n  // BusAssignment: '<Root>/Bus Assignment1' incorporates:\n  //   MATLAB Function: '<S16>/l1 aug - depth'\n\n  ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment1.Data =\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.Clock;\n\n  // Outputs for Atomic SubSystem: '<Root>/Publish1'\n  // MATLABSystem: '<S18>/SinkBlock'\n  Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45539.publish\n    (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.BusAssignment1);\n\n  // End of Outputs for SubSystem: '<Root>/Publish1'\n\n  // Update absolute time for base rate\n  // The \"clockTick0\" counts the number of times the code of this task has\n  //  been executed. The absolute time is the multiplication of \"clockTick0\"\n  //  and \"Timing.stepSize0\". Size of \"clockTick0\" ensures timer will not\n  //  overflow during the application lifespan selected.\n\n  ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.t[0] =\n    ((time_T)(++ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.clockTick0)) *\n    ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.stepSize0;\n\n  {\n    // Update absolute timer for sample time: [0.05s, 0.0s]\n    // The \"clockTick1\" counts the number of times the code of this task has\n    //  been executed. The resolution of this integer timer is 0.05, which is the step size\n    //  of the task. Size of \"clockTick1\" ensures timer will not overflow during the\n    //  application lifespan selected.\n\n    ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.clockTick1++;\n  }\n}\n\n// Model initialize function\nvoid ctrl_TT_ad_ctrl_cpp_ros_feedback_1_initialize(void)\n{\n  // Registration code\n\n  // initialize non-finites\n  rt_InitInfAndNaN(sizeof(real_T));\n\n  {\n    // Setup solver object\n    rtsiSetSimTimeStepPtr(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                          &ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.simTimeStep);\n    rtsiSetTPtr(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo, &rtmGetTPtr\n                (ctrl_TT_ad_ctrl_cpp_ros_feed_M));\n    rtsiSetStepSizePtr(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                       &ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.stepSize0);\n    rtsiSetErrorStatusPtr(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                          (&rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feed_M)));\n    rtsiSetRTModelPtr(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                      ctrl_TT_ad_ctrl_cpp_ros_feed_M);\n  }\n\n  rtsiSetSimTimeStep(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                     MAJOR_TIME_STEP);\n  rtsiSetSolverName(&ctrl_TT_ad_ctrl_cpp_ros_feed_M->solverInfo,\n                    \"FixedStepDiscrete\");\n  rtmSetTPtr(ctrl_TT_ad_ctrl_cpp_ros_feed_M,\n             &ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.tArray[0]);\n  ctrl_TT_ad_ctrl_cpp_ros_feed_M->Timing.stepSize0 = 0.05;\n\n  {\n    char_T b_zeroDelimTopic_1[14];\n    char_T b_zeroDelimTopic_0[13];\n    char_T b_zeroDelimTopic_2[12];\n    char_T b_zeroDelimTopic_3[11];\n    char_T b_zeroDelimTopic[10];\n    static const char_T tmp[9] = { '/', 'x', '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_0[9] = { '/', 'y', '_', 'h', 'b', '_', 'm', 's', 'g'\n    };\n\n    static const char_T tmp_1[9] = { '/', 'z', '_', 'h', 'b', '_', 'm', 's', 'g'\n    };\n\n    static const char_T tmp_2[12] = { '/', 'r', 'o', 'l', 'l', '_', 'h', 'b',\n      '_', 'm', 's', 'g' };\n\n    static const char_T tmp_3[13] = { '/', 'p', 'i', 't', 'c', 'h', '_', 'h',\n      'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_4[11] = { '/', 'y', 'a', 'w', '_', 'h', 'b', '_',\n      'm', 's', 'g' };\n\n    static const char_T tmp_5[15] = { '/', 'u', '_', 'v', 'e', 'l', '_', 'x',\n      '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_6[15] = { '/', 'v', '_', 'v', 'e', 'l', '_', 'y',\n      '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_7[15] = { '/', 'w', '_', 'v', 'e', 'l', '_', 'z',\n      '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_8[16] = { '/', 'p', '_', 'a', 'v', 'e', 'l', '_',\n      'x', '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_9[16] = { '/', 'q', '_', 'a', 'v', 'e', 'l', '_',\n      'y', '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_a[16] = { '/', 'r', '_', 'a', 'v', 'e', 'l', '_',\n      'z', '_', 'h', 'b', '_', 'm', 's', 'g' };\n\n    static const char_T tmp_b[10] = { '/', 'n', '_', 'r', 'p', 'm', '_', 'm',\n      's', 'g' };\n\n    static const char_T tmp_c[12] = { '/', 'p', 's', 'i', '_', 'r', 'e', 'f',\n      '_', 'm', 's', 'g' };\n\n    static const char_T tmp_d[10] = { '/', 'z', '_', 'r', 'e', 'f', '_', 'm',\n      's', 'g' };\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe'\n    // SystemInitialize for Enabled SubSystem: '<S20>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S68>/In1' incorporates:\n    //   Outport: '<S68>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_pu =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0;\n\n    // End of SystemInitialize for SubSystem: '<S20>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S20>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_au.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_au.isInitialized = 1;\n    for (int32_T i = 0; i < 9; i++) {\n      b_zeroDelimTopic[i] = tmp[i];\n    }\n\n    b_zeroDelimTopic[9] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45555.createSubscriber\n      (&b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_au.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S20>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe1'\n    // SystemInitialize for Enabled SubSystem: '<S21>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S69>/In1' incorporates:\n    //   Outport: '<S69>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_b =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0_n;\n\n    // End of SystemInitialize for SubSystem: '<S21>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S21>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_g.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_g.isInitialized = 1;\n    for (int32_T i = 0; i < 9; i++) {\n      b_zeroDelimTopic[i] = tmp_0[i];\n    }\n\n    b_zeroDelimTopic[9] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45560.createSubscriber\n      (&b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_g.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S21>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe1'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe2'\n    // SystemInitialize for Enabled SubSystem: '<S24>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S72>/In1' incorporates:\n    //   Outport: '<S72>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_l =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0_c;\n\n    // End of SystemInitialize for SubSystem: '<S24>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S24>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_a.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_a.isInitialized = 1;\n    for (int32_T i = 0; i < 9; i++) {\n      b_zeroDelimTopic[i] = tmp_1[i];\n    }\n\n    b_zeroDelimTopic[9] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45565.createSubscriber\n      (&b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_a.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S24>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe2'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe3'\n    // SystemInitialize for Enabled SubSystem: '<S25>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S73>/In1' incorporates:\n    //   Outport: '<S73>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_j =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0_gg;\n\n    // End of SystemInitialize for SubSystem: '<S25>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S25>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fr.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fr.isInitialized = 1;\n    for (int32_T i = 0; i < 12; i++) {\n      b_zeroDelimTopic_0[i] = tmp_2[i];\n    }\n\n    b_zeroDelimTopic_0[12] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45570.createSubscriber\n      (&b_zeroDelimTopic_0[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fr.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S25>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe3'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe4'\n    // SystemInitialize for Enabled SubSystem: '<S26>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S74>/In1' incorporates:\n    //   Outport: '<S74>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_ff =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0_h;\n\n    // End of SystemInitialize for SubSystem: '<S26>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S26>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_i.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_i.isInitialized = 1;\n    for (int32_T i = 0; i < 13; i++) {\n      b_zeroDelimTopic_1[i] = tmp_3[i];\n    }\n\n    b_zeroDelimTopic_1[13] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45575.createSubscriber\n      (&b_zeroDelimTopic_1[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_i.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S26>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe4'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe5'\n    // SystemInitialize for Enabled SubSystem: '<S27>/Enabled Subsystem'\n    // SystemInitialize for SignalConversion generated from: '<S75>/In1' incorporates:\n    //   Outport: '<S75>/Out1'\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.In1_fi =\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_P.Out1_Y0_l;\n\n    // End of SystemInitialize for SubSystem: '<S27>/Enabled Subsystem'\n\n    // Start for MATLABSystem: '<S27>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_o.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_o.isInitialized = 1;\n    for (int32_T i = 0; i < 11; i++) {\n      b_zeroDelimTopic_2[i] = tmp_4[i];\n    }\n\n    b_zeroDelimTopic_2[11] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45581.createSubscriber\n      (&b_zeroDelimTopic_2[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_o.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S27>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe5'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe6'\n    // Start for MATLABSystem: '<S28>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_p.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_p.isInitialized = 1;\n    for (int32_T i = 0; i < 15; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[i] = tmp_5[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[15] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45586.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_p.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S28>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe6'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe7'\n    // Start for MATLABSystem: '<S29>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fs.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fs.isInitialized = 1;\n    for (int32_T i = 0; i < 15; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[i] = tmp_6[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[15] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45591.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fs.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S29>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe7'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe8'\n    // Start for MATLABSystem: '<S30>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_lk.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_lk.isInitialized = 1;\n    for (int32_T i = 0; i < 15; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[i] = tmp_7[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[15] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45596.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic_h[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_lk.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S30>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe8'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe9'\n    // Start for MATLABSystem: '<S31>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_j.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_j.isInitialized = 1;\n    for (int32_T i = 0; i < 16; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[i] = tmp_8[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[16] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45601.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_j.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S31>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe9'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe10'\n    // Start for MATLABSystem: '<S22>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_jw.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_jw.isInitialized = 1;\n    for (int32_T i = 0; i < 16; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[i] = tmp_9[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[16] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45606.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_jw.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S22>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe10'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Subscribe11'\n    // Start for MATLABSystem: '<S23>/SourceBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_ln.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_ln.isInitialized = 1;\n    for (int32_T i = 0; i < 16; i++) {\n      ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[i] = tmp_a[i];\n    }\n\n    ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[16] = '\\x00';\n    Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45611.createSubscriber\n      (&ctrl_TT_ad_ctrl_cpp_ros_feedb_B.b_zeroDelimTopic[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_ln.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S23>/SourceBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Subscribe11'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Publish'\n    // Start for MATLABSystem: '<S17>/SinkBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_f.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_f.isInitialized = 1;\n    for (int32_T i = 0; i < 10; i++) {\n      b_zeroDelimTopic_3[i] = tmp_b[i];\n    }\n\n    b_zeroDelimTopic_3[10] = '\\x00';\n    Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45530.createPublisher\n      (&b_zeroDelimTopic_3[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_f.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S17>/SinkBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Publish'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Publish2'\n    // Start for MATLABSystem: '<S19>/SinkBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj.isInitialized = 1;\n    for (int32_T i = 0; i < 12; i++) {\n      b_zeroDelimTopic_0[i] = tmp_c[i];\n    }\n\n    b_zeroDelimTopic_0[12] = '\\x00';\n    Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45545.createPublisher\n      (&b_zeroDelimTopic_0[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S19>/SinkBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Publish2'\n\n    // SystemInitialize for Atomic SubSystem: '<Root>/Publish1'\n    // Start for MATLABSystem: '<S18>/SinkBlock'\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_l.matlabCodegenIsDeleted = false;\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_l.isInitialized = 1;\n    for (int32_T i = 0; i < 10; i++) {\n      b_zeroDelimTopic_3[i] = tmp_d[i];\n    }\n\n    b_zeroDelimTopic_3[10] = '\\x00';\n    Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45539.createPublisher\n      (&b_zeroDelimTopic_3[0], 1);\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_l.isSetupComplete = true;\n\n    // End of Start for MATLABSystem: '<S18>/SinkBlock'\n    // End of SystemInitialize for SubSystem: '<Root>/Publish1'\n  }\n}\n\n// Model terminate function\nvoid ctrl_TT_ad_ctrl_cpp_ros_feedback_1_terminate(void)\n{\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe'\n  // Terminate for MATLABSystem: '<S20>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_au.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_au.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S20>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe1'\n  // Terminate for MATLABSystem: '<S21>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_g.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_g.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S21>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe1'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe2'\n  // Terminate for MATLABSystem: '<S24>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_a.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_a.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S24>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe2'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe3'\n  // Terminate for MATLABSystem: '<S25>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fr.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fr.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S25>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe3'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe4'\n  // Terminate for MATLABSystem: '<S26>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_i.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_i.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S26>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe4'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe5'\n  // Terminate for MATLABSystem: '<S27>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_o.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_o.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S27>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe5'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe6'\n  // Terminate for MATLABSystem: '<S28>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_p.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_p.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S28>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe6'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe7'\n  // Terminate for MATLABSystem: '<S29>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fs.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_fs.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S29>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe7'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe8'\n  // Terminate for MATLABSystem: '<S30>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_lk.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_lk.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S30>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe8'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe9'\n  // Terminate for MATLABSystem: '<S31>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_j.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_j.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S31>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe9'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe10'\n  // Terminate for MATLABSystem: '<S22>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_jw.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_jw.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S22>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe10'\n\n  // Terminate for Atomic SubSystem: '<Root>/Subscribe11'\n  // Terminate for MATLABSystem: '<S23>/SourceBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_ln.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_ln.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S23>/SourceBlock'\n  // End of Terminate for SubSystem: '<Root>/Subscribe11'\n\n  // Terminate for Atomic SubSystem: '<Root>/Publish'\n  // Terminate for MATLABSystem: '<S17>/SinkBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_f.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_f.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S17>/SinkBlock'\n  // End of Terminate for SubSystem: '<Root>/Publish'\n\n  // Terminate for Atomic SubSystem: '<Root>/Publish2'\n  // Terminate for MATLABSystem: '<S19>/SinkBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S19>/SinkBlock'\n  // End of Terminate for SubSystem: '<Root>/Publish2'\n\n  // Terminate for Atomic SubSystem: '<Root>/Publish1'\n  // Terminate for MATLABSystem: '<S18>/SinkBlock'\n  if (!ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_l.matlabCodegenIsDeleted) {\n    ctrl_TT_ad_ctrl_cpp_ros_feed_DW.obj_l.matlabCodegenIsDeleted = true;\n  }\n\n  // End of Terminate for MATLABSystem: '<S18>/SinkBlock'\n  // End of Terminate for SubSystem: '<Root>/Publish1'\n}\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h","type":"header","group":"model","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_h_\n#define RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_h_\n#include \"rtwtypes.h\"\n#include \"rtw_continuous.h\"\n#include \"rtw_solver.h\"\n#include \"slros_initialize.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\"\n\nextern \"C\"\n{\n\n#include \"rt_nonfinite.h\"\n\n}\n\nextern \"C\"\n{\n\n#include \"rtGetInf.h\"\n\n}\n\n#include <stddef.h>\n\n// Macros for accessing real-time model data structure\n#ifndef rtmGetErrorStatus\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\n#endif\n\n#ifndef rtmSetErrorStatus\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\n#endif\n\n#ifndef rtmGetT\n#define rtmGetT(rtm)                   (rtmGetTPtr((rtm))[0])\n#endif\n\n#ifndef rtmGetTPtr\n#define rtmGetTPtr(rtm)                ((rtm)->Timing.t)\n#endif\n\n#define ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M (ctrl_TT_ad_ctrl_cpp_ros_feed_M)\n\n// Block signals (default storage)\nstruct B_ctrl_TT_ad_ctrl_cpp_ros_fee_T {\n  real_T B[61];\n  real_T T[61];\n  real_T TT[61];\n  real_T Ao[9];\n  real_T y[9];\n  real_T y_m[9];\n  real_T Ao_c[9];\n  real_T A2[9];\n  real_T A4[9];\n  real_T A6[9];\n  real_T dv[9];\n  real_T A4_k[9];\n  real_T dv1[9];\n  real_T b_a[9];\n  real_T cBuffer[9];\n  real_T aBuffer[9];\n  real_T cBuffer_c[9];\n  real_T b_x[9];\n  real_T A2_b[9];\n  real_T A4_p[9];\n  real_T A6_c[9];\n  real_T dv2[9];\n  real_T A4_f[9];\n  real_T dv3[9];\n  real_T b_a_g[9];\n  real_T cBuffer_g[9];\n  real_T aBuffer_m[9];\n  real_T cBuffer_n[9];\n  real_T U[9];\n  real_T V[9];\n  real_T A6_p[9];\n  real_T U_l[9];\n  real_T V_j[9];\n  real_T A6_d[9];\n  real_T b_x_g[9];\n  real_T MatrixMultiply[6];\n  real_T dv4[6];\n  real_T Lambda[4];\n  real_T MatrixConcatenate[4];         // '<S41>/Matrix Concatenate'\n  real_T MatrixMultiply1[4];           // '<S35>/Matrix Multiply1'\n  real_T rtb_Divide_l[4];\n  real_T A2_d[4];\n  real_T A4_d[4];\n  real_T A6_l[4];\n  real_T U_o[4];\n  real_T V_b[4];\n  real_T A6_n[4];\n  real_T T_b[4];\n  real_T A4_l[4];\n  real_T dv5[4];\n  real_T b_a_h[4];\n  real_T cBuffer_b[4];\n  real_T aBuffer_d[4];\n  real_T cBuffer_e[4];\n  real_T cBuffer_bj[4];\n  real_T A2_j[4];\n  real_T A4_fd[4];\n  real_T A6_a[4];\n  real_T U_j[4];\n  real_T V_jz[4];\n  real_T A6_o[4];\n  real_T b_a_n[4];\n  real_T cBuffer_i[4];\n  real_T aBuffer_o[4];\n  real_T cBuffer_nv[4];\n  real_T cBuffer_m[4];\n  real_T T_c[4];\n  real_T A4_m[4];\n  real_T dv6[4];\n  real_T pdp[3];                       // '<S16>/MATLAB Function2'\n  real_T uTmp[3];\n  real_T dv7[3];\n  real_T a[3];\n  real_T pd[3];\n  real_T work[3];\n  real_T v[3];\n  real_T work_m[3];\n  real_T v_j[3];\n  char_T b_zeroDelimTopic[17];\n  char_T b_zeroDelimTopic_h[16];\n  real_T TmpSignalConversionAtNormal[2];\n  real_T dv8[2];\n  real_T tau[2];\n  real_T tau_c[2];\n  int8_T b_I[9];\n  boolean_T Compare[9];                // '<S64>/Compare'\n  real_T a22;\n  real_T Clock;                        // '<S16>/Clock'\n  real_T SquareRoot;                   // '<S41>/Square Root'\n  real_T acc;\n  real_T b_idx_1;\n  real_T b_idx_2;\n  real_T b_idx_3;\n  real_T a22_tmp;\n  real_T rtb_MatrixConcatenate_tmp;\n  real_T exptj;\n  real_T d_y;\n  real_T d6;\n  real_T eta1;\n  real_T u0;\n  real_T e;\n  real_T ed2;\n  real_T absx11;\n  real_T absx21;\n  real_T absx31;\n  real_T exptj_c;\n  real_T d_y_p;\n  real_T d6_p;\n  real_T eta1_a;\n  real_T u0_e;\n  real_T beta1;\n  real_T A;\n  real_T tst;\n  real_T htmp1;\n  real_T ab;\n  real_T ba;\n  real_T aa;\n  real_T h12;\n  real_T h21s;\n  real_T a__3;\n  real_T a__4;\n  real_T temp;\n  real_T p;\n  real_T bcmax;\n  real_T bcmis;\n  real_T scale;\n  real_T z;\n  real_T a_a;\n  real_T b;\n  real_T exptj_a;\n  real_T b_y;\n  real_T d_y_i;\n  real_T d;\n  real_T a22_l;\n  real_T A6_tmp;\n  real_T U_tmp;\n  real_T d6_o;\n  real_T eta1_o;\n  real_T A4_tmp;\n  real_T A4_tmp_i;\n  real_T e_f;\n  real_T ed2_i;\n  real_T cBuffer_tmp;\n  real_T cBuffer_tmp_f;\n  real_T r;\n  real_T exptj_g;\n  real_T b_y_c;\n  real_T d_y_o;\n  real_T d_l;\n  real_T a22_m;\n  real_T A6_tmp_m;\n  real_T U_tmp_c;\n  real_T htmp1_f;\n  real_T htmp2;\n  real_T ab_p;\n  real_T ba_e;\n  real_T aa_o;\n  real_T a__1;\n  real_T a__2;\n  real_T a__3_h;\n  real_T d_l5;\n  real_T a21;\n  real_T A6_h;\n  real_T beta1_m;\n  real_T A_m;\n  real_T xnorm;\n  real_T a_h;\n  real_T scale_c;\n  real_T absxk;\n  real_T t;\n  real_T d6_k;\n  real_T tst_p;\n  real_T htmp1_p;\n  real_T ab_p4;\n  real_T ba_a;\n  real_T aa_j;\n  real_T h12_e;\n  real_T h21s_o;\n  real_T a__3_b;\n  real_T a__4_a;\n  real_T temp_tmp;\n  real_T htmp1_g;\n  real_T htmp2_e;\n  real_T ab_f;\n  real_T ba_h;\n  real_T aa_e;\n  real_T a__1_c;\n  real_T temp_tmp_a;\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_fi;// '<S75>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_ff;// '<S74>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_j;// '<S73>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_l;// '<S72>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_b;// '<S69>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 In1_pu;// '<S68>/In1' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 b_varargout_2;\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 BusAssignment;// '<Root>/Bus Assignment' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 BusAssignment2;// '<Root>/Bus Assignment2' \n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 BusAssignment1;// '<Root>/Bus Assignment1' \n  int32_T blockFormat[2];\n  int32_T blockFormat_d[2];\n  int32_T r1;\n  int32_T r2;\n  int32_T rtb_MatrixMultiply1_tmp;\n  int32_T c_i;\n  int32_T c_i_a;\n  int32_T b_k;\n  int32_T b_s;\n  int32_T c_k;\n  int32_T F_tmp;\n  int32_T im1n;\n  int32_T in;\n  int32_T ix0;\n  int32_T knt;\n  int32_T lastc;\n  int32_T g_i;\n  int32_T iac;\n  int32_T g;\n  int32_T b_ia;\n  int32_T rowleft;\n  int32_T im1n_p;\n  int32_T in_m;\n  int32_T ix0_o;\n  int32_T knt_n;\n  int32_T lastc_l;\n  int32_T g_i_p;\n  int32_T iac_p;\n  int32_T g_f;\n  int32_T b_ia_i;\n  int32_T rowleft_o;\n  int32_T c_ia;\n  int32_T b_k_k;\n  int32_T b_s_i;\n  int32_T c_k_o;\n  int32_T F_tmp_m;\n  int32_T c_ia_c;\n};\n\n// Block states (default storage) for system '<Root>'\nstruct DW_ctrl_TT_ad_ctrl_cpp_ros_fe_T {\n  ros_slroscpp_internal_block_P_T obj; // '<S19>/SinkBlock'\n  ros_slroscpp_internal_block_P_T obj_l;// '<S18>/SinkBlock'\n  ros_slroscpp_internal_block_P_T obj_f;// '<S17>/SinkBlock'\n  ros_slroscpp_internal_block_S_T obj_j;// '<S31>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_lk;// '<S30>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_fs;// '<S29>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_p;// '<S28>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_o;// '<S27>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_i;// '<S26>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_fr;// '<S25>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_a;// '<S24>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_ln;// '<S23>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_jw;// '<S22>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_g;// '<S21>/SourceBlock'\n  ros_slroscpp_internal_block_S_T obj_au;// '<S20>/SourceBlock'\n  real_T xu[3];                        // '<S16>/l1 aug - heading'\n  real_T xd[2];                        // '<S16>/l1 aug - heading'\n  real_T xu_g[3];                      // '<S16>/l1 aug - depth'\n  real_T xd_p[2];                      // '<S16>/l1 aug - depth'\n  real_T zerr_int_prev;                // '<S16>/Marin PID'\n  real_T thetaerr_int_prev;            // '<S16>/Marin PID'\n  real_T psierr_int_prev;              // '<S16>/Marin PID'\n  boolean_T xu_not_empty;              // '<S16>/l1 aug - heading'\n  boolean_T xu_not_empty_o;            // '<S16>/l1 aug - depth'\n};\n\n// Parameters (default storage)\nstruct P_ctrl_TT_ad_ctrl_cpp_ros_fee_T_ {\n  struct_rPo2eGiZDF2rfpzHq7PtkG L1;    // Variable: L1\n                                          //  Referenced by:\n                                          //    '<S16>/l1 aug - depth'\n                                          //    '<S16>/l1 aug - heading'\n\n  real_T Cp[183];                      // Variable: Cp\n                                          //  Referenced by: '<S16>/MATLAB Function2'\n\n  real_T Cp_prime[183];                // Variable: Cp_prime\n                                          //  Referenced by: '<S16>/MATLAB Function2'\n\n  real_T Kp;                           // Variable: Kp\n                                          //  Referenced by: '<S35>/Gain1'\n\n  real_T Tf;                           // Variable: Tf\n                                          //  Referenced by: '<S16>/MATLAB Function2'\n\n  real_T Ts;                           // Variable: Ts\n                                          //  Referenced by:\n                                          //    '<S16>/Marin PID'\n                                          //    '<S16>/l1 aug - depth'\n                                          //    '<S16>/l1 aug - heading'\n\n  real_T adap;                         // Variable: adap\n                                          //  Referenced by:\n                                          //    '<S16>/l1 aug - depth'\n                                          //    '<S16>/l1 aug - heading'\n\n  real_T d;                            // Variable: d\n                                          //  Referenced by: '<S41>/Constant3'\n\n  real_T Normalization_Bias;           // Mask Parameter: Normalization_Bias\n                                          //  Referenced by: '<S41>/Normalization'\n\n  real_T Normalization1_Bias;          // Mask Parameter: Normalization1_Bias\n                                          //  Referenced by: '<S41>/Normalization1'\n\n  real_T DirectionCosineMatrixtoRotation;\n                              // Mask Parameter: DirectionCosineMatrixtoRotation\n                                 //  Referenced by:\n                                 //    '<S46>/Constant'\n                                 //    '<S56>/Constant'\n                                 //    '<S57>/Constant'\n\n  real_T DirectionCosineMatrixtoRotati_a;\n                              // Mask Parameter: DirectionCosineMatrixtoRotati_a\n                                 //  Referenced by:\n                                 //    '<S64>/Constant'\n                                 //    '<S66>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value;// Computed Parameter: Constant_Value\n                                                                      //  Referenced by: '<S1>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_a;// Computed Parameter: Constant_Value_a\n                                                                      //  Referenced by: '<S2>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_l;// Computed Parameter: Constant_Value_l\n                                                                      //  Referenced by: '<S3>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_o;// Computed Parameter: Constant_Value_o\n                                                                      //  Referenced by: '<S4>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_m;// Computed Parameter: Constant_Value_m\n                                                                      //  Referenced by: '<S5>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_ly;// Computed Parameter: Constant_Value_ly\n                                                                      //  Referenced by: '<S6>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_lj;// Computed Parameter: Constant_Value_lj\n                                                                      //  Referenced by: '<S7>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_b;// Computed Parameter: Constant_Value_b\n                                                                      //  Referenced by: '<S8>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_h;// Computed Parameter: Constant_Value_h\n                                                                      //  Referenced by: '<S9>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_d;// Computed Parameter: Constant_Value_d\n                                                                      //  Referenced by: '<S10>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_b0;// Computed Parameter: Constant_Value_b0\n                                                                      //  Referenced by: '<S11>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_p;// Computed Parameter: Constant_Value_p\n                                                                      //  Referenced by: '<S12>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_k;// Computed Parameter: Constant_Value_k\n                                                                      //  Referenced by: '<S13>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_c;// Computed Parameter: Constant_Value_c\n                                                                      //  Referenced by: '<S14>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_ba;// Computed Parameter: Constant_Value_ba\n                                                                      //  Referenced by: '<S15>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0;// Computed Parameter: Out1_Y0\n                                                                      //  Referenced by: '<S68>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_f;// Computed Parameter: Constant_Value_f\n                                                                      //  Referenced by: '<S20>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_n;// Computed Parameter: Out1_Y0_n\n                                                                      //  Referenced by: '<S69>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_dn;// Computed Parameter: Constant_Value_dn\n                                                                      //  Referenced by: '<S21>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_f;// Computed Parameter: Out1_Y0_f\n                                                                      //  Referenced by: '<S70>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_c3;// Computed Parameter: Constant_Value_c3\n                                                                      //  Referenced by: '<S22>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_g;// Computed Parameter: Out1_Y0_g\n                                                                      //  Referenced by: '<S71>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_aq;// Computed Parameter: Constant_Value_aq\n                                                                      //  Referenced by: '<S23>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_c;// Computed Parameter: Out1_Y0_c\n                                                                      //  Referenced by: '<S72>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_m1;// Computed Parameter: Constant_Value_m1\n                                                                      //  Referenced by: '<S24>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_gg;// Computed Parameter: Out1_Y0_gg\n                                                                      //  Referenced by: '<S73>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_j;// Computed Parameter: Constant_Value_j\n                                                                      //  Referenced by: '<S25>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_h;// Computed Parameter: Out1_Y0_h\n                                                                      //  Referenced by: '<S74>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_hm;// Computed Parameter: Constant_Value_hm\n                                                                      //  Referenced by: '<S26>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_l;// Computed Parameter: Out1_Y0_l\n                                                                      //  Referenced by: '<S75>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_pp;// Computed Parameter: Constant_Value_pp\n                                                                      //  Referenced by: '<S27>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_hk;// Computed Parameter: Out1_Y0_hk\n                                                                      //  Referenced by: '<S76>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_cp;// Computed Parameter: Constant_Value_cp\n                                                                      //  Referenced by: '<S28>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_e;// Computed Parameter: Out1_Y0_e\n                                                                      //  Referenced by: '<S77>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_g;// Computed Parameter: Constant_Value_g\n                                                                      //  Referenced by: '<S29>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_gu;// Computed Parameter: Out1_Y0_gu\n                                                                      //  Referenced by: '<S78>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_i;// Computed Parameter: Constant_Value_i\n                                                                      //  Referenced by: '<S30>/Constant'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Out1_Y0_lg;// Computed Parameter: Out1_Y0_lg\n                                                                      //  Referenced by: '<S79>/Out1'\n\n  SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 Constant_Value_gp;// Computed Parameter: Constant_Value_gp\n                                                                      //  Referenced by: '<S31>/Constant'\n\n  real_T Constant_Value_h2;            // Expression: 1\n                                          //  Referenced by: '<S52>/Constant'\n\n  real_T Constant_Value_cg;            // Expression: 1\n                                          //  Referenced by: '<S53>/Constant'\n\n  real_T Constant_Value_h2t;           // Expression: 1\n                                          //  Referenced by: '<S48>/Constant'\n\n  real_T Constant_Value_am;            // Expression: 1\n                                          //  Referenced by: '<S49>/Constant'\n\n  real_T Constant1_Value;              // Expression: 0\n                                          //  Referenced by: '<S57>/Constant1'\n\n  real_T Constant1_Value_e;            // Expression: 0\n                                          //  Referenced by: '<S56>/Constant1'\n\n  real_T Bias1_Bias[9];                // Expression: -eye(3)\n                                          //  Referenced by: '<S58>/Bias1'\n\n  real_T Bias_Bias;                    // Expression: -1\n                                          //  Referenced by: '<S59>/Bias'\n\n  real_T Constant_Value_gf[36];\n  // Expression: [-1 0 0 0 0 0; 0 -1 0 0 0 0; 0 0 1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]\n     //  Referenced by: '<S16>/Constant'\n\n  real_T Constant2_Value[36];\n  // Expression: [-1 0 0 0 0 0; 0 -1 0 0 0 0; 0 0 1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]\n     //  Referenced by: '<S16>/Constant2'\n\n  real_T Gain_Gain;                    // Expression: -1\n                                          //  Referenced by: '<S41>/Gain'\n\n  real_T Gain1_Gain[3];                // Expression: [1 1 -1]\n                                          //  Referenced by: '<S45>/Gain1'\n\n  real_T Gain2_Gain[2];                // Expression: [1 1]\n                                          //  Referenced by: '<S45>/Gain2'\n\n  real_T Gain3_Gain[2];                // Expression: [-1 1]\n                                          //  Referenced by: '<S45>/Gain3'\n\n  real_T Gain_Gain_o;                  // Expression: -1\n                                          //  Referenced by: '<S35>/Gain'\n\n};\n\n// Real-time Model Data Structure\nstruct tag_RTM_ctrl_TT_ad_ctrl_cpp_r_T {\n  const char_T *errorStatus;\n  RTWSolverInfo solverInfo;\n\n  //\n  //  Timing:\n  //  The following substructure contains information regarding\n  //  the timing information for the model.\n\n  struct {\n    uint32_T clockTick0;\n    time_T stepSize0;\n    uint32_T clockTick1;\n    SimTimeStep simTimeStep;\n    time_T *t;\n    time_T tArray[2];\n  } Timing;\n};\n\n// Block parameters (default storage)\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern P_ctrl_TT_ad_ctrl_cpp_ros_fee_T ctrl_TT_ad_ctrl_cpp_ros_feedb_P;\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n// Block signals (default storage)\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern struct B_ctrl_TT_ad_ctrl_cpp_ros_fee_T ctrl_TT_ad_ctrl_cpp_ros_feedb_B;\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n// Block states (default storage)\nextern struct DW_ctrl_TT_ad_ctrl_cpp_ros_fe_T ctrl_TT_ad_ctrl_cpp_ros_feed_DW;\n\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  // Model entry point functions\n  extern void ctrl_TT_ad_ctrl_cpp_ros_feedback_1_initialize(void);\n  extern void ctrl_TT_ad_ctrl_cpp_ros_feedback_1_step(void);\n  extern void ctrl_TT_ad_ctrl_cpp_ros_feedback_1_terminate(void);\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\n// Real-time Model object\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern RT_MODEL_ctrl_TT_ad_ctrl_cpp__T *const ctrl_TT_ad_ctrl_cpp_ros_feed_M;\n\n#ifdef __cplusplus\n\n}\n\n#endif\n\nextern volatile boolean_T stopRequested;\nextern volatile boolean_T runModel;\n\n//-\n//  These blocks were eliminated from the model due to optimizations:\n//\n//  Block '<S16>/Constant1' : Unused code path elimination\n//  Block '<S35>/Derivative' : Unused code path elimination\n//  Block '<S35>/Display' : Unused code path elimination\n//  Block '<S35>/Display1' : Unused code path elimination\n//  Block '<S35>/Display2' : Unused code path elimination\n//  Block '<S35>/Display3' : Unused code path elimination\n//  Block '<S35>/Display4' : Unused code path elimination\n//  Block '<S35>/Display5' : Unused code path elimination\n//  Block '<S35>/Display6' : Unused code path elimination\n//  Block '<S35>/Display7' : Unused code path elimination\n//  Block '<S35>/Scope' : Unused code path elimination\n//  Block '<S35>/Scope1' : Unused code path elimination\n//  Block '<S40>/Add' : Unused code path elimination\n//  Block '<S40>/Sqrt' : Unused code path elimination\n//  Block '<S40>/Square' : Unused code path elimination\n//  Block '<S40>/Square1' : Unused code path elimination\n//  Block '<S40>/Square2' : Unused code path elimination\n//  Block '<S41>/Display' : Unused code path elimination\n//  Block '<S41>/Display1' : Unused code path elimination\n//  Block '<S41>/Display2' : Unused code path elimination\n//  Block '<S41>/Display8' : Unused code path elimination\n//  Block '<S41>/xT' : Unused code path elimination\n//  Block '<S41>/yT' : Unused code path elimination\n//  Block '<S42>/Add' : Unused code path elimination\n//  Block '<S42>/Sqrt' : Unused code path elimination\n//  Block '<S42>/Square' : Unused code path elimination\n//  Block '<S42>/Square1' : Unused code path elimination\n//  Block '<S42>/Square2' : Unused code path elimination\n//  Block '<Root>/Scope' : Unused code path elimination\n//  Block '<Root>/Scope1' : Unused code path elimination\n//  Block '<Root>/Scope2' : Unused code path elimination\n//  Block '<S45>/Reshape' : Reshape block reduction\n//  Block '<S45>/Reshape1' : Reshape block reduction\n//  Block '<S45>/Reshape2' : Reshape block reduction\n//  Block '<S58>/Reshape' : Reshape block reduction\n\n\n//-\n//  The generated code includes comments that allow you to trace directly\n//  back to the appropriate location in the model.  The basic format\n//  is <system>/block_name, where system is the system number (uniquely\n//  assigned by Simulink) and block_name is the name of the block.\n//\n//  Use the MATLAB hilite_system command to trace the generated code back\n//  to the model.  For example,\n//\n//  hilite_system('<S3>')    - opens system 3\n//  hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3\n//\n//  Here is the system hierarchy for this model\n//\n//  '<Root>' : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'\n//  '<S1>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message'\n//  '<S2>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message1'\n//  '<S3>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message10'\n//  '<S4>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message11'\n//  '<S5>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message12'\n//  '<S6>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message13'\n//  '<S7>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message14'\n//  '<S8>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message15'\n//  '<S9>'   : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message2'\n//  '<S10>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message4'\n//  '<S11>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message5'\n//  '<S12>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message6'\n//  '<S13>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message7'\n//  '<S14>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message8'\n//  '<S15>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Blank Message9'\n//  '<S16>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller'\n//  '<S17>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish'\n//  '<S18>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish1'\n//  '<S19>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish2'\n//  '<S20>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe'\n//  '<S21>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe1'\n//  '<S22>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe10'\n//  '<S23>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe11'\n//  '<S24>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe2'\n//  '<S25>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe3'\n//  '<S26>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe4'\n//  '<S27>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe5'\n//  '<S28>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe6'\n//  '<S29>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe7'\n//  '<S30>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe8'\n//  '<S31>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe9'\n//  '<S32>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/FF velocity ctrl'\n//  '<S33>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/MATLAB Function2'\n//  '<S34>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Marin PID'\n//  '<S35>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1'\n//  '<S36>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/l1 aug - depth'\n//  '<S37>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/l1 aug - heading'\n//  '<S38>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles'\n//  '<S39>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/MATLAB Function'\n//  '<S40>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Subsystem1'\n//  '<S41>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Subsystem2'\n//  '<S42>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Subsystem3'\n//  '<S43>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotDefault'\n//  '<S44>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotZeroR3'\n//  '<S45>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Get DCM Values'\n//  '<S46>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM'\n//  '<S47>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotDefault/Protect asincos input'\n//  '<S48>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotDefault/Protect asincos input/If Action Subsystem'\n//  '<S49>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotDefault/Protect asincos input/If Action Subsystem1'\n//  '<S50>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotDefault/Protect asincos input/If Action Subsystem2'\n//  '<S51>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotZeroR3/Protect asincos input'\n//  '<S52>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotZeroR3/Protect asincos input/If Action Subsystem'\n//  '<S53>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotZeroR3/Protect asincos input/If Action Subsystem1'\n//  '<S54>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/AxisRotZeroR3/Protect asincos input/If Action Subsystem2'\n//  '<S55>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error'\n//  '<S56>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/Else If Not Orthogonal'\n//  '<S57>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/If Not Proper'\n//  '<S58>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/isNotOrthogonal'\n//  '<S59>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/isNotProper'\n//  '<S60>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/Else If Not Orthogonal/Error'\n//  '<S61>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/Else If Not Orthogonal/Warning'\n//  '<S62>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/If Not Proper/Error'\n//  '<S63>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/If Not Proper/Warning'\n//  '<S64>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/isNotOrthogonal/transpose*dcm ~= eye(3)'\n//  '<S65>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/isNotProper/Determinant of 3x3 Matrix'\n//  '<S66>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Direction Cosine Matrix to Rotation Angles/Validate DCM/If Warning//Error/isNotProper/determinant does not equal 1'\n//  '<S67>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Controller/Subsystem1/Subsystem2/MATLAB Function'\n//  '<S68>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe/Enabled Subsystem'\n//  '<S69>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe1/Enabled Subsystem'\n//  '<S70>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe10/Enabled Subsystem'\n//  '<S71>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe11/Enabled Subsystem'\n//  '<S72>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe2/Enabled Subsystem'\n//  '<S73>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe3/Enabled Subsystem'\n//  '<S74>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe4/Enabled Subsystem'\n//  '<S75>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe5/Enabled Subsystem'\n//  '<S76>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe6/Enabled Subsystem'\n//  '<S77>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe7/Enabled Subsystem'\n//  '<S78>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe8/Enabled Subsystem'\n//  '<S79>'  : 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe9/Enabled Subsystem'\n\n#endif                      // RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private.h","type":"header","group":"model","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private_h_\n#define RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private_h_\n#include \"rtwtypes.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n\n// Private macros used by the generated code to access rtModel\n#ifndef rtmIsMajorTimeStep\n#define rtmIsMajorTimeStep(rtm)        (((rtm)->Timing.simTimeStep) == MAJOR_TIME_STEP)\n#endif\n\n#ifndef rtmIsMinorTimeStep\n#define rtmIsMinorTimeStep(rtm)        (((rtm)->Timing.simTimeStep) == MINOR_TIME_STEP)\n#endif\n\n#ifndef rtmSetTPtr\n#define rtmSetTPtr(rtm, val)           ((rtm)->Timing.t = (val))\n#endif\n\nextern real_T rt_powd_snf(real_T u0, real_T u1);\nextern real_T rt_atan2d_snf(real_T u0, real_T u1);\nextern int32_T div_nzp_s32_floor(int32_T numerator, int32_T denominator);\nextern int32_T div_nzp_s32(int32_T numerator, int32_T denominator);\n\n#endif              // RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_private_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h","type":"header","group":"model","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Model files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types_h_\n#define RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types_h_\n#include \"rtwtypes.h\"\n#ifndef DEFINED_TYPEDEF_FOR_SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64_\n#define DEFINED_TYPEDEF_FOR_SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64_\n\n// MsgType=std_msgs/Float64\nstruct SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64\n{\n  real_T Data;\n};\n\n#endif\n\n#ifndef DEFINED_TYPEDEF_FOR_struct_rPo2eGiZDF2rfpzHq7PtkG_\n#define DEFINED_TYPEDEF_FOR_struct_rPo2eGiZDF2rfpzHq7PtkG_\n\nstruct struct_rPo2eGiZDF2rfpzHq7PtkG\n{\n  real_T Amz[4];\n  real_T Bmz[2];\n  real_T Cmz[2];\n  real_T Dmz;\n  real_T Aoz[9];\n  real_T Boz[6];\n  real_T Coz[3];\n  real_T Doz[2];\n  real_T Lambdaz[4];\n  real_T Phiinvz[4];\n  real_T Ampsi[4];\n  real_T Bmpsi[2];\n  real_T Cmpsi[2];\n  real_T Dmpsi;\n  real_T Aopsi[9];\n  real_T Bopsi[6];\n  real_T Copsi[3];\n  real_T Dopsi[2];\n  real_T Lambdapsi[4];\n  real_T Phiinvpsi[4];\n};\n\n#endif\n\n#ifndef struct_ros_slroscpp_internal_block_P_T\n#define struct_ros_slroscpp_internal_block_P_T\n\nstruct ros_slroscpp_internal_block_P_T\n{\n  boolean_T matlabCodegenIsDeleted;\n  int32_T isInitialized;\n  boolean_T isSetupComplete;\n};\n\n#endif                                // struct_ros_slroscpp_internal_block_P_T\n\n#ifndef struct_ros_slroscpp_internal_block_S_T\n#define struct_ros_slroscpp_internal_block_S_T\n\nstruct ros_slroscpp_internal_block_S_T\n{\n  boolean_T matlabCodegenIsDeleted;\n  int32_T isInitialized;\n  boolean_T isSetupComplete;\n};\n\n#endif                                // struct_ros_slroscpp_internal_block_S_T\n\n// Parameters (default storage)\ntypedef struct P_ctrl_TT_ad_ctrl_cpp_ros_fee_T_ P_ctrl_TT_ad_ctrl_cpp_ros_fee_T;\n\n// Forward declaration for rtModel\ntypedef struct tag_RTM_ctrl_TT_ad_ctrl_cpp_r_T RT_MODEL_ctrl_TT_ad_ctrl_cpp__T;\n\n#endif                // RTW_HEADER_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_data.cpp","type":"source","group":"data","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Data files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: ctrl_TT_ad_ctrl_cpp_ros_feedback_1_data.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n\n// Block parameters (default storage)\nP_ctrl_TT_ad_ctrl_cpp_ros_fee_T ctrl_TT_ad_ctrl_cpp_ros_feedb_P = {\n  // Variable: L1\n  //  Referenced by:\n  //    '<S16>/l1 aug - depth'\n  //    '<S16>/l1 aug - heading'\n\n  {\n    { -0.16, 0.0625, -0.1024, 0.0 },\n\n    { 0.25, 0.0 },\n\n    { 0.0, 0.4096 },\n    0.0,\n\n    { 0.0012764451244209954, -0.012224361388609528, -0.0030671091636457204,\n      0.0058434863737381465, -0.14378623492472639, 0.0915082980803851,\n      0.071116936653190729, -0.024871659945985863, -0.0674902101996962 },\n\n    { -0.0280712803471739, -0.30113422032462378, 0.15936512660241325,\n      0.08074639353161997, -0.13604866023966505, -0.20363756721637388 },\n\n    { -0.50068410520012807, -0.043140132833199868, -0.16970973966829755 },\n\n    { 0.0, 0.0 },\n\n    { 0.0, 2.243289689900192, 0.4096, 2.1766303843785977 },\n\n    { -47.441729937340511, 48.902185470676187, 8.9511756285287642,\n      -0.013949008362697491 },\n\n    { -0.16, 0.0625, -0.1024, 0.0 },\n\n    { 0.25, 0.0 },\n\n    { 0.0, 0.4096 },\n    0.0,\n\n    { -0.017713271175073125, 0.0077507805881514187, -0.00097492994373777,\n      -0.011611756542084961, -0.0032666584876351857, -0.00083965142251933795,\n      -0.031745747643156845, -0.0073291677104650264, -0.009020070337291736 },\n\n    { 0.073896831806420732, 0.01995699704202274, 0.047237759465753065,\n      0.14053127497712981, 0.053671544016775846, 0.11269043914451711 },\n\n    { -0.048880736380448236, -0.2883204839263257, 0.19827660553084711 },\n\n    { 0.0, 0.0 },\n\n    { 0.0, 2.243289689900192, 0.4096, 2.1766303843785977 },\n\n    { -47.441729937340511, 48.902185470676187, 8.9511756285287642,\n      -0.013949008362697491 }\n  },\n\n  // Variable: Cp\n  //  Referenced by: '<S16>/MATLAB Function2'\n\n  { -70.34790039, 18.70597267, -370.80001829999992, -33.25566673, 18.72042656,\n    -369.95715330000007, 3.8263091999999972, 17.99342728, -368.51742549999994,\n    40.776306149999996, 14.78142262, -366.26702879999993, 77.6704788,\n    10.95252895, -363.56683350000003, 114.61882019999999, 7.699644089,\n    -362.02432249999993, 151.6235809, 5.157749176, -360.3158264, 188.6551056,\n    3.05081749, -357.87298579999992, 225.61410519999998, 5.435264587,\n    -355.7553101, 262.3046265, 10.76364708, -353.00335689999997, 296.2495422,\n    24.8372879, -349.85032649999994, 325.1644592, 48.01766586,\n    -347.62614439999993, 360.4284363, 58.60512924, -338.4219055, 397.4385986,\n    59.00138092, -340.00866700000006, 432.802002, 48.08808899, -336.9837341,\n    467.48852539999996, 34.96350098, -336.1589203, 502.30291750000004,\n    22.20567513, -335.58743290000007, 538.8022461, 17.14488792,\n    -333.31735230000004, 575.49646, 22.05385208, -330.87373349999996,\n    610.3428955, 34.62557602, -328.5295715, 642.5197144, 52.99218369,\n    -326.38710019999996, 668.2819824, 79.1897583, -323.5633392, 683.0167236,\n    113.1450958, -310.86288450000006, 689.9683838, 149.4631042, -306.1542511,\n    686.3955688, 186.2841339, -296.54257200000006, 676.5204468, 222.0024719,\n    -294.0132294, 665.0, 256.2452393, -294.8145905, 615.0, 289.4821472,\n    -295.0716095, 550.0, 321.3085327, -272.39442439999993, 505.0, 354.3122559,\n    -273.6703186, 495.0, 387.3022461, -273.4302216, 525.0, 417.7374573,\n    -269.74476619999996, 550.0, 452.2470398, -257.2883301, 580.0, 489.2296448,\n    -247.6094513, 595.0, 525.9245605, -237.75642400000004, 605.0, 560.704895,\n    -254.12324520000004, 615.0, 587.9005127, -254.5464783, 625.0, 619.3972168,\n    -254.7113342, 634.0882568, 653.3104248, -235.59265140000002, 649.3931885,\n    686.9655762, -260.5470123, 649.2317505, 723.8733521, -254.7186127,\n    647.1011353, 760.874939, -251.78166199999998, 647.2748413, 797.9623413,\n    -244.9696503, 647.5883789, 835.0490723, -246.09265140000002, 647.4017944,\n    872.1323242, -243.2965393, 645.3306274, 909.1286011, -241.4419403,\n    631.4036865, 943.2999878, -246.60641480000004, 623.1325684, 978.9016113,\n    -240.44482419999997, 637.7531738, 1012.827087, -236.87020870000003,\n    658.2705078, 1043.709473, -233.4681549, 670.164917, 1076.883789,\n    -234.22393799999998, 653.8275146, 1110.12793, -230.85330199999999,\n    634.8297119, 1141.981689, -223.33121490000002, 616.6420288, 1174.25061,\n    -221.22368619999997, 613.0595703, 1210.884277, -229.9443359, 613.9385376,\n    1247.940186, -229.2963562, 612.5089722, 1284.982178, -231.2645569,\n    617.4003296, 1321.716919, -228.1138611, 624.6887817, 1358.07666,\n    -226.2255707, 631.0795288, 1394.498657, -224.29564670000002, 631.9071655,\n    1431.57605, -221.55393220000002 },\n\n  // Variable: Cp_prime\n  //  Referenced by: '<S16>/MATLAB Function2'\n\n  { 4.4510680392000008, 0.0017344667999998897, 0.10114379999998846,\n    4.4498576270599992, -0.0857570072599998, 0.17157361040001007,\n    4.4345275499199994, -0.3755005376799998, 0.26680492840000625,\n    4.4276356637999994, -0.45576590633999992, 0.32132464439998643,\n    4.4333676179999983, -0.39495425379199989, 0.19436279440000703,\n    4.4400070910000018, -0.31213728904, 0.20335968099999491, 4.4434617960000011,\n    -0.258051361044, 0.28432873800000635, 4.4360953033999984,\n    0.22325434867799998, 0.25867339260000222, 4.4071582087999985,\n    0.59230293282399993, 0.32008594399999879, 4.1228107848000022, 1.531422248514,\n    0.37114425840000109, 3.5703900140000044, 2.5995106124000009,\n    0.28547881800000141, 4.0919979297999944, 1.5475397263599997,\n    0.95094741839999841, 4.3993110312, 0.29213928240000087, 0.06857262959999133,\n    4.2864241394000082, -1.0155468977399988, 0.24308789359999849,\n    4.1813354479999951, -1.5130342709600006, 0.16058099080000332,\n    4.1738909910000075, -1.5419419668, 0.07617827999998994, 4.326001464000008,\n    -0.85359970167999988, 0.21805468959999885, 4.396679567799989,\n    0.25010415261999985, 0.28733395720000843, 4.2480922824000054,\n    1.2327475207199996, 0.28487988480000226, 3.9626636988, 1.98378733866,\n    0.26476080259999968, 3.348054195999989, 2.8304702755999993,\n    0.31159973199999946, 2.2313250696000004, 3.748814458620001,\n    1.1092334285999925, 1.1766547880000076, 4.2542034884000017,\n    0.91667614519999852, 0.055388059200002004, 4.3953845841999986,\n    0.92786138979999855, -0.88250390400000178, 4.3391297615999989,\n    0.64347326400000249, -1.3001873759999985, 4.182910618, 0.070371853000001039,\n    -3.9990632335999985, 4.0407336419999984, -0.059148069200000819, -6.99,\n    3.8953344696000003, 1.4828151906000042, -6.5199999999999987,\n    3.8945158728000062, 1.1882651368000017, -3.2299999999999995,\n    3.959595337999998, -0.0591158496000026, 1.2000000000000013,\n    3.8055120839999974, 0.23553314400000155, 3.3099999999999978,\n    3.8885388793999978, 0.95097152860000067, 3.2799999999999994,\n    4.2796391600000012, 1.3392291231999987, 2.7899999999999974, 4.4223773778,\n    1.1708694749999982, 1.5399999999999947, 4.3038316615999932,\n    -0.18106884600000361, 1.1999999999999993, 3.794404300000001,\n    -1.1668391389999986, 1.1999999999999993, 3.4699262712000021,\n    -0.038385866399996083, 1.1580598127999941, 3.8907636713999949,\n    0.86726007219999968, 1.3641245115999929, 4.0582304695999944,\n    0.3550280132000001, 1.1870042766000033, 4.1752283970000015,\n    -1.7016473669999979, -0.098139647999996527, 4.432685548000002,\n    0.58374999599999988, -0.1681096183999955, 4.4434514132000018,\n    0.49968640200000003, 0.025878657599999855, 4.4504641091999986,\n    0.53178094319999758, 0.020620360599998833, 4.4502894305999874,\n    -0.0015102831999982413, -0.082696779999992032, 4.4472070279999869,\n    0.30540503280000308, -0.60421325699999073, 4.354806521999997,\n    0.01197967499999919, -1.5128698695999887, 4.1406130344000189,\n    -0.30260711720000089, -0.3973493610000034, 4.228614977200003,\n    0.6721295194000021, 1.8959941344000057, 3.998022931200012,\n    0.4248123791999916, 2.2723757344000077, 3.7563087799999977,\n    0.31677404419999888, 0.86269287199998956, 3.9823144200000087,\n    -0.0081655899999937276, -2.0083754933999955, 3.9642700440000169,\n    0.47920243980000166, -2.2667744103999965, 3.8290936719999848,\n    0.81601751759999885, -1.9780488275999915, 3.9333769640000185,\n    0.10130894640000321, -0.37635791039999589, 4.4011069440000057,\n    -0.93405441120000177, 0.082390748999998209, 4.44656990999998,\n    0.051595760000001434, -0.12098046559999887, 4.442581032000021,\n    -0.19523291200000159, 0.60134545619997937, 4.4059189200000048,\n    0.37050906360000013, 0.87102343200001542, 4.3634179439999912,\n    0.226761382400003, 0.755763431200003, 4.371950432000026, 0.23321446099999743,\n    0.099316403999992531, 4.449287159999983, 0.32900574000000304 },\n\n  // Variable: Kp\n  //  Referenced by: '<S35>/Gain1'\n\n  0.1,\n\n  // Variable: Tf\n  //  Referenced by: '<S16>/MATLAB Function2'\n\n  500.0,\n\n  // Variable: Ts\n  //  Referenced by:\n  //    '<S16>/Marin PID'\n  //    '<S16>/l1 aug - depth'\n  //    '<S16>/l1 aug - heading'\n\n  0.05,\n\n  // Variable: adap\n  //  Referenced by:\n  //    '<S16>/l1 aug - depth'\n  //    '<S16>/l1 aug - heading'\n\n  1.0,\n\n  // Variable: d\n  //  Referenced by: '<S41>/Constant3'\n\n  250.0,\n\n  // Mask Parameter: Normalization_Bias\n  //  Referenced by: '<S41>/Normalization'\n\n  1.0E-10,\n\n  // Mask Parameter: Normalization1_Bias\n  //  Referenced by: '<S41>/Normalization1'\n\n  1.0E-10,\n\n  // Mask Parameter: DirectionCosineMatrixtoRotation\n  //  Referenced by:\n  //    '<S46>/Constant'\n  //    '<S56>/Constant'\n  //    '<S57>/Constant'\n\n  1.0,\n\n  // Mask Parameter: DirectionCosineMatrixtoRotati_a\n  //  Referenced by:\n  //    '<S64>/Constant'\n  //    '<S66>/Constant'\n\n  4.4408920985006262E-16,\n\n  // Computed Parameter: Constant_Value\n  //  Referenced by: '<S1>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_a\n  //  Referenced by: '<S2>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_l\n  //  Referenced by: '<S3>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_o\n  //  Referenced by: '<S4>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_m\n  //  Referenced by: '<S5>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_ly\n  //  Referenced by: '<S6>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_lj\n  //  Referenced by: '<S7>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_b\n  //  Referenced by: '<S8>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_h\n  //  Referenced by: '<S9>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_d\n  //  Referenced by: '<S10>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_b0\n  //  Referenced by: '<S11>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_p\n  //  Referenced by: '<S12>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_k\n  //  Referenced by: '<S13>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_c\n  //  Referenced by: '<S14>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_ba\n  //  Referenced by: '<S15>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0\n  //  Referenced by: '<S68>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_f\n  //  Referenced by: '<S20>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_n\n  //  Referenced by: '<S69>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_dn\n  //  Referenced by: '<S21>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_f\n  //  Referenced by: '<S70>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_c3\n  //  Referenced by: '<S22>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_g\n  //  Referenced by: '<S71>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_aq\n  //  Referenced by: '<S23>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_c\n  //  Referenced by: '<S72>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_m1\n  //  Referenced by: '<S24>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_gg\n  //  Referenced by: '<S73>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_j\n  //  Referenced by: '<S25>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_h\n  //  Referenced by: '<S74>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_hm\n  //  Referenced by: '<S26>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_l\n  //  Referenced by: '<S75>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_pp\n  //  Referenced by: '<S27>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_hk\n  //  Referenced by: '<S76>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_cp\n  //  Referenced by: '<S28>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_e\n  //  Referenced by: '<S77>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_g\n  //  Referenced by: '<S29>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_gu\n  //  Referenced by: '<S78>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_i\n  //  Referenced by: '<S30>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Out1_Y0_lg\n  //  Referenced by: '<S79>/Out1'\n\n  {\n    0.0                                // Data\n  },\n\n  // Computed Parameter: Constant_Value_gp\n  //  Referenced by: '<S31>/Constant'\n\n  {\n    0.0                                // Data\n  },\n\n  // Expression: 1\n  //  Referenced by: '<S52>/Constant'\n\n  1.0,\n\n  // Expression: 1\n  //  Referenced by: '<S53>/Constant'\n\n  1.0,\n\n  // Expression: 1\n  //  Referenced by: '<S48>/Constant'\n\n  1.0,\n\n  // Expression: 1\n  //  Referenced by: '<S49>/Constant'\n\n  1.0,\n\n  // Expression: 0\n  //  Referenced by: '<S57>/Constant1'\n\n  0.0,\n\n  // Expression: 0\n  //  Referenced by: '<S56>/Constant1'\n\n  0.0,\n\n  // Expression: -eye(3)\n  //  Referenced by: '<S58>/Bias1'\n\n  { -1.0, -0.0, -0.0, -0.0, -1.0, -0.0, -0.0, -0.0, -1.0 },\n\n  // Expression: -1\n  //  Referenced by: '<S59>/Bias'\n\n  -1.0,\n\n  // Expression: [-1 0 0 0 0 0; 0 -1 0 0 0 0; 0 0 1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]\n  //  Referenced by: '<S16>/Constant'\n\n  { -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },\n\n  // Expression: [-1 0 0 0 0 0; 0 -1 0 0 0 0; 0 0 1 0 0 0; 0 0 0 1 0 0; 0 0 0 0 1 0; 0 0 0 0 0 1]\n  //  Referenced by: '<S16>/Constant2'\n\n  { -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0,\n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0,\n    0.0, 0.0, 0.0, 0.0, 0.0, 1.0 },\n\n  // Expression: -1\n  //  Referenced by: '<S41>/Gain'\n\n  -1.0,\n\n  // Expression: [1 1 -1]\n  //  Referenced by: '<S45>/Gain1'\n\n  { 1.0, 1.0, -1.0 },\n\n  // Expression: [1 1]\n  //  Referenced by: '<S45>/Gain2'\n\n  { 1.0, 1.0 },\n\n  // Expression: [-1 1]\n  //  Referenced by: '<S45>/Gain3'\n\n  { -1.0, 1.0 },\n\n  // Expression: -1\n  //  Referenced by: '<S35>/Gain'\n\n  -1.0\n};\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtGetInf.cpp","type":"source","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtGetInf.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n\n#include \"rtwtypes.h\"\n\nextern \"C\"\n{\n\n#include \"rtGetInf.h\"\n\n}\n\n#include <stddef.h>\n\nextern \"C\"\n{\n\n#include \"rt_nonfinite.h\"\n\n}\n\n#define NumBitsPerChar                 8U\n\nextern \"C\"\n{\n  //\n  // Initialize rtInf needed by the generated code.\n  // Inf is initialized as non-signaling. Assumes IEEE.\n  //\n  real_T rtGetInf(void)\n  {\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\n    real_T inf = 0.0;\n    if (bitsPerReal == 32U) {\n      inf = rtGetInfF();\n    } else {\n      uint16_T one = 1U;\n      enum {\n        LittleEndian,\n        BigEndian\n      } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;\n      switch (machByteOrder) {\n       case LittleEndian:\n        {\n          union {\n            LittleEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0x7FF00000U;\n          tmpVal.bitVal.words.wordL = 0x00000000U;\n          inf = tmpVal.fltVal;\n          break;\n        }\n\n       case BigEndian:\n        {\n          union {\n            BigEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0x7FF00000U;\n          tmpVal.bitVal.words.wordL = 0x00000000U;\n          inf = tmpVal.fltVal;\n          break;\n        }\n      }\n    }\n\n    return inf;\n  }\n\n  //\n  // Initialize rtInfF needed by the generated code.\n  // Inf is initialized as non-signaling. Assumes IEEE.\n  //\n  real32_T rtGetInfF(void)\n  {\n    IEEESingle infF;\n    infF.wordL.wordLuint = 0x7F800000U;\n    return infF.wordL.wordLreal;\n  }\n\n  //\n  // Initialize rtMinusInf needed by the generated code.\n  // Inf is initialized as non-signaling. Assumes IEEE.\n  //\n  real_T rtGetMinusInf(void)\n  {\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\n    real_T minf = 0.0;\n    if (bitsPerReal == 32U) {\n      minf = rtGetMinusInfF();\n    } else {\n      uint16_T one = 1U;\n      enum {\n        LittleEndian,\n        BigEndian\n      } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;\n      switch (machByteOrder) {\n       case LittleEndian:\n        {\n          union {\n            LittleEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0xFFF00000U;\n          tmpVal.bitVal.words.wordL = 0x00000000U;\n          minf = tmpVal.fltVal;\n          break;\n        }\n\n       case BigEndian:\n        {\n          union {\n            BigEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0xFFF00000U;\n          tmpVal.bitVal.words.wordL = 0x00000000U;\n          minf = tmpVal.fltVal;\n          break;\n        }\n      }\n    }\n\n    return minf;\n  }\n\n  //\n  // Initialize rtMinusInfF needed by the generated code.\n  // Inf is initialized as non-signaling. Assumes IEEE.\n  //\n  real32_T rtGetMinusInfF(void)\n  {\n    IEEESingle minfF;\n    minfF.wordL.wordLuint = 0xFF800000U;\n    return minfF.wordL.wordLreal;\n  }\n}\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtGetInf.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtGetInf.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rtGetInf_h_\n#define RTW_HEADER_rtGetInf_h_\n#include \"rtwtypes.h\"\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern real_T rtGetInf(void);\n  extern real32_T rtGetInfF(void);\n  extern real_T rtGetMinusInf(void);\n  extern real32_T rtGetMinusInfF(void);\n\n#ifdef __cplusplus\n\n}                                      // extern \"C\"\n\n#endif\n#endif                                 // RTW_HEADER_rtGetInf_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtGetNaN.cpp","type":"source","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtGetNaN.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n\n#include \"rtwtypes.h\"\n\nextern \"C\"\n{\n\n#include \"rtGetNaN.h\"\n\n}\n\n#include <stddef.h>\n\nextern \"C\"\n{\n\n#include \"rt_nonfinite.h\"\n\n}\n\n#define NumBitsPerChar                 8U\n\nextern \"C\"\n{\n  //\n  // Initialize rtNaN needed by the generated code.\n  // NaN is initialized as non-signaling. Assumes IEEE.\n  //\n  real_T rtGetNaN(void)\n  {\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\n    real_T nan = 0.0;\n    if (bitsPerReal == 32U) {\n      nan = rtGetNaNF();\n    } else {\n      uint16_T one = 1U;\n      enum {\n        LittleEndian,\n        BigEndian\n      } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;\n      switch (machByteOrder) {\n       case LittleEndian:\n        {\n          union {\n            LittleEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0xFFF80000U;\n          tmpVal.bitVal.words.wordL = 0x00000000U;\n          nan = tmpVal.fltVal;\n          break;\n        }\n\n       case BigEndian:\n        {\n          union {\n            BigEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.bitVal.words.wordH = 0x7FFFFFFFU;\n          tmpVal.bitVal.words.wordL = 0xFFFFFFFFU;\n          nan = tmpVal.fltVal;\n          break;\n        }\n      }\n    }\n\n    return nan;\n  }\n\n  //\n  // Initialize rtNaNF needed by the generated code.\n  // NaN is initialized as non-signaling. Assumes IEEE.\n  //\n  real32_T rtGetNaNF(void)\n  {\n    IEEESingle nanF = { { 0.0F } };\n\n    uint16_T one = 1U;\n    enum {\n      LittleEndian,\n      BigEndian\n    } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;\n    switch (machByteOrder) {\n     case LittleEndian:\n      {\n        nanF.wordL.wordLuint = 0xFFC00000U;\n        break;\n      }\n\n     case BigEndian:\n      {\n        nanF.wordL.wordLuint = 0x7FFFFFFFU;\n        break;\n      }\n    }\n\n    return nanF.wordL.wordLreal;\n  }\n}\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtGetNaN.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtGetNaN.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rtGetNaN_h_\n#define RTW_HEADER_rtGetNaN_h_\n#include \"rtwtypes.h\"\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern real_T rtGetNaN(void);\n  extern real32_T rtGetNaNF(void);\n\n#ifdef __cplusplus\n\n}                                      // extern \"C\"\n\n#endif\n#endif                                 // RTW_HEADER_rtGetNaN_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rt_assert.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rt_assert.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rt_assert_h_\n#define RTW_HEADER_rt_assert_h_\n\n//=========*\n//  Asserts *\n// =========\n#ifndef utAssert\n#if defined(DOASSERTS)\n#if !defined(PRINT_ASSERTS)\n#include <assert.h>\n#define utAssert(exp)                  assert(exp)\n#else\n#include <stdio.h>\n\nstatic void _assert(char *statement, char *file, int line)\n{\n  printf(\"%s in %s on line %d\\n\", statement, file, line);\n}\n\n#define utAssert(_EX)                  ((_EX) ? (void)0 : _assert(#_EX, __FILE__, __LINE__))\n#endif\n\n#else\n#define utAssert(exp)                                            // do nothing\n#endif\n#endif\n#endif                                 // RTW_HEADER_rt_assert_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rt_defines.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rt_defines.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rt_defines_h_\n#define RTW_HEADER_rt_defines_h_\n\n//===========*\n//  Constants *\n// ===========\n#define RT_PI                          3.14159265358979323846\n#define RT_PIF                         3.1415927F\n#define RT_LN_10                       2.30258509299404568402\n#define RT_LN_10F                      2.3025851F\n#define RT_LOG10E                      0.43429448190325182765\n#define RT_LOG10EF                     0.43429449F\n#define RT_E                           2.7182818284590452354\n#define RT_EF                          2.7182817F\n\n//\n//  UNUSED_PARAMETER(x)\n//    Used to specify that a function parameter (argument) is required but not\n//    accessed by the function body.\n\n#ifndef UNUSED_PARAMETER\n#if defined(__LCC__)\n#define UNUSED_PARAMETER(x)                                      // do nothing\n#else\n\n//\n//  This is the semi-ANSI standard way of indicating that an\n//  unused function parameter is required.\n\n#define UNUSED_PARAMETER(x)            (void) (x)\n#endif\n#endif\n#endif                                 // RTW_HEADER_rt_defines_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rt_nonfinite.cpp","type":"source","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rt_nonfinite.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n\nextern \"C\"\n{\n\n#include \"rtGetNaN.h\"\n\n}\n\nextern \"C\"\n{\n\n#include \"rtGetInf.h\"\n\n}\n\n#include <stddef.h>\n#include \"rtwtypes.h\"\n\nextern \"C\"\n{\n\n#include \"rt_nonfinite.h\"\n\n}\n\n#define NumBitsPerChar                 8U\n\nextern \"C\"\n{\n  real_T rtInf;\n  real_T rtMinusInf;\n  real_T rtNaN;\n  real32_T rtInfF;\n  real32_T rtMinusInfF;\n  real32_T rtNaNF;\n}\n\nextern \"C\"\n{\n  //\n  // Initialize the rtInf, rtMinusInf, and rtNaN needed by the\n  // generated code. NaN is initialized as non-signaling. Assumes IEEE.\n  //\n  void rt_InitInfAndNaN(size_t realSize)\n  {\n    (void) (realSize);\n    rtNaN = rtGetNaN();\n    rtNaNF = rtGetNaNF();\n    rtInf = rtGetInf();\n    rtInfF = rtGetInfF();\n    rtMinusInf = rtGetMinusInf();\n    rtMinusInfF = rtGetMinusInfF();\n  }\n\n  // Test if value is infinite\n  boolean_T rtIsInf(real_T value)\n  {\n    return (boolean_T)((value==rtInf || value==rtMinusInf) ? 1U : 0U);\n  }\n\n  // Test if single-precision value is infinite\n  boolean_T rtIsInfF(real32_T value)\n  {\n    return (boolean_T)(((value)==rtInfF || (value)==rtMinusInfF) ? 1U : 0U);\n  }\n\n  // Test if value is not a number\n  boolean_T rtIsNaN(real_T value)\n  {\n    boolean_T result = (boolean_T) 0;\n    size_t bitsPerReal = sizeof(real_T) * (NumBitsPerChar);\n    if (bitsPerReal == 32U) {\n      result = rtIsNaNF((real32_T)value);\n    } else {\n      uint16_T one = 1U;\n      enum {\n        LittleEndian,\n        BigEndian\n      } machByteOrder = (*((uint8_T *) &one) == 1U) ? LittleEndian : BigEndian;\n      switch (machByteOrder) {\n       case LittleEndian:\n        {\n          union {\n            LittleEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.fltVal = value;\n          result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==\n                               0x7FF00000 &&\n                               ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||\n                                (tmpVal.bitVal.words.wordL != 0) ));\n          break;\n        }\n\n       case BigEndian:\n        {\n          union {\n            BigEndianIEEEDouble bitVal;\n            real_T fltVal;\n          } tmpVal;\n\n          tmpVal.fltVal = value;\n          result = (boolean_T)((tmpVal.bitVal.words.wordH & 0x7FF00000) ==\n                               0x7FF00000 &&\n                               ( (tmpVal.bitVal.words.wordH & 0x000FFFFF) != 0 ||\n                                (tmpVal.bitVal.words.wordL != 0) ));\n          break;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Test if single-precision value is not a number\n  boolean_T rtIsNaNF(real32_T value)\n  {\n    IEEESingle tmp;\n    tmp.wordL.wordLreal = value;\n    return (boolean_T)( (tmp.wordL.wordLuint & 0x7F800000) == 0x7F800000 &&\n                       (tmp.wordL.wordLuint & 0x007FFFFF) != 0 );\n  }\n}\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rt_nonfinite.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rt_nonfinite.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rt_nonfinite_h_\n#define RTW_HEADER_rt_nonfinite_h_\n#include <stddef.h>\n#include \"rtwtypes.h\"\n#define NOT_USING_NONFINITE_LITERALS   1\n#ifdef __cplusplus\n\nextern \"C\"\n{\n\n#endif\n\n  extern real_T rtInf;\n  extern real_T rtMinusInf;\n  extern real_T rtNaN;\n  extern real32_T rtInfF;\n  extern real32_T rtMinusInfF;\n  extern real32_T rtNaNF;\n  extern void rt_InitInfAndNaN(size_t realSize);\n  extern boolean_T rtIsInf(real_T value);\n  extern boolean_T rtIsInfF(real32_T value);\n  extern boolean_T rtIsNaN(real_T value);\n  extern boolean_T rtIsNaNF(real32_T value);\n  struct BigEndianIEEEDouble {\n    struct {\n      uint32_T wordH;\n      uint32_T wordL;\n    } words;\n  };\n\n  struct LittleEndianIEEEDouble {\n    struct {\n      uint32_T wordL;\n      uint32_T wordH;\n    } words;\n  };\n\n  struct IEEESingle {\n    union {\n      real32_T wordLreal;\n      uint32_T wordLuint;\n    } wordL;\n  };\n\n#ifdef __cplusplus\n\n}                                      // extern \"C\"\n\n#endif\n#endif                                 // RTW_HEADER_rt_nonfinite_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtwtypes.h","type":"header","group":"utility","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Utility files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtwtypes.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n\n#ifndef RTWTYPES_H\n#define RTWTYPES_H\n\n// Logical type definitions\n#if (!defined(__cplusplus))\n#ifndef false\n#define false                          (0U)\n#endif\n\n#ifndef true\n#define true                           (1U)\n#endif\n#endif\n\n//=======================================================================*\n//  Target hardware information\n//    Device type: Generic->Unspecified (assume 32-bit Generic)\n//    Number of bits:     char:   8    short:   16    int:  32\n//                        long:  32\n//                        native word size:  32\n//    Byte ordering: Unspecified\n//    Signed integer division rounds to: Undefined\n//    Shift right on a signed integer as arithmetic shift: on\n// =======================================================================\n\n//=======================================================================*\n//  Fixed width word size data types:                                     *\n//    int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\n//    uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\n//    real32_T, real64_T           - 32 and 64 bit floating point numbers *\n// =======================================================================\ntypedef signed char int8_T;\ntypedef unsigned char uint8_T;\ntypedef short int16_T;\ntypedef unsigned short uint16_T;\ntypedef int int32_T;\ntypedef unsigned int uint32_T;\ntypedef float real32_T;\ntypedef double real64_T;\n\n//===========================================================================*\n//  Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\n//                            real_T, time_T, ulong_T.                        *\n// ===========================================================================\ntypedef double real_T;\ntypedef double time_T;\ntypedef unsigned char boolean_T;\ntypedef int int_T;\ntypedef unsigned int uint_T;\ntypedef unsigned long ulong_T;\ntypedef char char_T;\ntypedef unsigned char uchar_T;\ntypedef char_T byte_T;\n\n//===========================================================================*\n//  Complex number type definitions                                           *\n// ===========================================================================\n#define CREAL_T\n\ntypedef struct {\n  real32_T re;\n  real32_T im;\n} creal32_T;\n\ntypedef struct {\n  real64_T re;\n  real64_T im;\n} creal64_T;\n\ntypedef struct {\n  real_T re;\n  real_T im;\n} creal_T;\n\n#define CINT8_T\n\ntypedef struct {\n  int8_T re;\n  int8_T im;\n} cint8_T;\n\n#define CUINT8_T\n\ntypedef struct {\n  uint8_T re;\n  uint8_T im;\n} cuint8_T;\n\n#define CINT16_T\n\ntypedef struct {\n  int16_T re;\n  int16_T im;\n} cint16_T;\n\n#define CUINT16_T\n\ntypedef struct {\n  uint16_T re;\n  uint16_T im;\n} cuint16_T;\n\n#define CINT32_T\n\ntypedef struct {\n  int32_T re;\n  int32_T im;\n} cint32_T;\n\n#define CUINT32_T\n\ntypedef struct {\n  uint32_T re;\n  uint32_T im;\n} cuint32_T;\n\n//=======================================================================*\n//  Min and Max:                                                          *\n//    int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\n//    uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\n// =======================================================================\n#define MAX_int8_T                     ((int8_T)(127))\n#define MIN_int8_T                     ((int8_T)(-128))\n#define MAX_uint8_T                    ((uint8_T)(255U))\n#define MAX_int16_T                    ((int16_T)(32767))\n#define MIN_int16_T                    ((int16_T)(-32768))\n#define MAX_uint16_T                   ((uint16_T)(65535U))\n#define MAX_int32_T                    ((int32_T)(2147483647))\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\n\n// Block D-Work pointer type\ntypedef void * pointer_T;\n\n#endif                                 // RTWTYPES_H\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"rtmodel.h","type":"header","group":"interface","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Interface files","code":"//\n// Academic License - for use in teaching, academic research, and meeting\n// course requirements at degree granting institutions only.  Not for\n// government, commercial, or other organizational use.\n//\n// File: rtmodel.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:17 2023\n//\n// Target selection: ert.tlc\n// Embedded hardware selection: Generic->Unspecified (assume 32-bit Generic)\n// Code generation objectives: Unspecified\n// Validation result: Not run\n//\n#ifndef RTW_HEADER_rtmodel_h_\n#define RTW_HEADER_rtmodel_h_\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n\n// Macros generated for backwards compatibility\n#ifndef rtmGetStopRequested\n#define rtmGetStopRequested(rtm)       ((void*) 0)\n#endif\n#endif                                 // RTW_HEADER_rtmodel_h_\n\n//\n// File trailer for generated code.\n//\n// [EOF]\n//\n"},{"name":"MW_custom_RTOS_header.h","type":"header","group":"other","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _MW_CUSTOM_RTOS_HEADER_H_\n#define _MW_CUSTOM_RTOS_HEADER_H_\n#define MW_BASERATE_PRIORITY           40\n#define MW_BASERATE_PERIOD             0.05\n#define MW_NUMBER_SUBRATES             0\n#define MW_NUMBER_APERIODIC_TASKS      0\n#define MW_IS_CONCURRENT               0\n#define MW_NUMBER_TIMER_DRIVEN_TASKS   0\n\nextern void exitFcn(int sig);\nextern void *terminateTask(void *arg);\nextern void *baseRateTask(void *arg);\nextern void *subrateTask(void *arg);\nextern pthread_t schedulerThread;\nextern pthread_t baseRateThread;\nextern pthread_t subRateThread[];\nextern sem_t stopSem;\nextern sem_t baserateTaskSem;\nextern sem_t subrateTaskSem[];\nextern int taskId[];\nextern int subratePriority[];\n\n#endif\n\n#define MW_MAX_TASKNAME                16\n"},{"name":"MW_target_hardware_resources.h","type":"header","group":"other","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef PORTABLE_WORDSIZES\n#ifdef __MW_TARGET_USE_HARDWARE_RESOURCES_H__\n#ifndef __MW_TARGET_HARDWARE_RESOURCES_H__\n#define __MW_TARGET_HARDWARE_RESOURCES_H__\n\n#define MW_MULTI_TASKING_MODE 0\n\n#define MW_USECODERTARGET 1\n#define MW_TARGETHARDWARE Robot Operating System (ROS)\n#define MW_CONNECTIONINFO_TCPIP_IPADDRESS ros.codertarget.internal.getExtmodeDeviceAddress(hCS)\n#define MW_CONNECTIONINFO_TCPIP_PORT 17725\n#define MW_CONNECTIONINFO_TCPIP_VERBOSE 0\n#define MW_CONNECTIONINFO_TCPIP_RUNINBACKGROUND 1\n#define MW_EXTMODE_CONFIGURATION TCP/IP\n#define MW_RTOS Linux\n#define MW_RTOSBASERATETASKPRIORITY 40\n#define MW_DETECTTASKOVERRUNS 0.000000\n#define MW_SCHEDULER_INTERRUPT_SOURCE 0\n#define MW_PACKAGING_MAINTAINERNAME vpetrov\n#define MW_PACKAGING_MAINTAINEREMAIL vladimir_petrov@uiowa.edu\n#define MW_PACKAGING_LICENSE BSD\n#define MW_PACKAGING_VERSION 1.0.0\n#define MW_BOARDPARAMETERS_DEVICEADDRESS \n#define MW_BOARDPARAMETERS_USERNAME \n#define MW_RUNTIME_BUILDACTION 0\n#define MW_ROS_INSTALL /opt/ros/noetic\n#define MW_ROS_CATKINWS ~/catkin_ws\n#define MW_ROS_REMOTEBUILD 1\n#define MW_ROS_GENERATEROSCONTROL 0\n#define MW_ROS_ROSTIMESTEPPING 0\n#define MW_ROS_ROSTIMENOTIFICATION 0\n#define MW_ROS_STEPNOTIFY /step_notify\n#define MW_DATAVERSION 2016.02\n\n#endif /* __MW_TARGET_HARDWARE_RESOURCES_H__ */\n\n#endif\n\n#endif\n"},{"name":"main.cpp","type":"source","group":"legacy","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"//\n// File main.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:24 2023\n//\n\n#include <stdio.h>\n#include \"rosnodeinterface.h\"\n#include \"slros_initialize.h\"\n\nextern void slros_node_init(int argc, char** argv);\nnamespace ros\n{\n  namespace matlab\n  {\n    std::shared_ptr<ros::matlab::NodeInterface> gMatlabNodeIntr;\n    std::shared_ptr<ros::matlab::NodeInterface> getNodeInterface()\n    {\n      return gMatlabNodeIntr;\n    }\n  }                                    //namespace matlab\n}                                      //namespace ros\n\nint main(int argc, char* argv[])\n{\n  // create the Node specified in Model\n  slros_node_init(argc, argv);\n  ros::matlab::gMatlabNodeIntr = std::make_shared<ros::matlab::NodeInterface>();\n  ros::matlab::gMatlabNodeIntr->initialize(argc, argv);\n  auto ret = ros::matlab::gMatlabNodeIntr->run();\n  ros::matlab::gMatlabNodeIntr->terminate();\n  ros::matlab::gMatlabNodeIntr.reset();\n  return ret;\n}\n"},{"name":"rosnodeinterface.cpp","type":"source","group":"legacy","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"//\n// File rosnodeinterface.cpp\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:24 2023\n//\n\n#ifdef _MSC_VER\n\n#pragma warning(push)\n#pragma warning(disable : 4244)\n#pragma warning(disable : 4265)\n#pragma warning(disable : 4458)\n#pragma warning(disable : 4100)\n\n#else\n\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wpedantic\"\n#pragma GCC diagnostic ignored \"-Wunused-local-typedefs\"\n#pragma GCC diagnostic ignored \"-Wredundant-decls\"\n#pragma GCC diagnostic ignored \"-Wnon-virtual-dtor\"\n#pragma GCC diagnostic ignored \"-Wdelete-non-virtual-dtor\"\n#pragma GCC diagnostic ignored \"-Wunused-parameter\"\n#pragma GCC diagnostic ignored \"-Wunused-variable\"\n#pragma GCC diagnostic ignored \"-Wshadow\"\n\n#endif                                 //_MSC_VER\n\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n#include \"rosnodeinterface.h\"\n#include <thread>\n#include <chrono>\n#include <utility>\n\nnamespace ros\n{\n  namespace matlab\n  {\n    NodeInterface::NodeInterface()\n      : mNode()\n      , mBaseRateSem()\n      , mBaseRateThread()\n      , mSchedulerTimer()\n      , mStopSem()\n      , mRunModel(true)\n    {\n    }\n\n    NodeInterface::~NodeInterface()\n    {\n      terminate();\n    }\n\n    void NodeInterface::initialize(int argc, char ** argv)\n    {\n      try {\n        mNode = std::make_shared<ros::NodeHandle>();\n        ROS_INFO(\"** Starting the model \\\"ctrl_TT_ad_ctrl_cpp_ros_feedback_1\\\" **\\n\");\n\n        // initialize the model which will initialize the publishers and subscribers\n        rtmSetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M, (NULL));\n        ctrl_TT_ad_ctrl_cpp_ros_feedback_1_initialize();\n\n        // create the threads for the rates in the Model\n        mBaseRateThread = std::make_shared<std::thread>(&NodeInterface::\n          baseRateTask, this);\n\n        // create scheduler timer to run the scheduler callback\n        mSchedulerTimer = std::make_shared<ros::WallTimer>\n          (mNode->createWallTimer(ros::WallDuration(50000000*1e-9),\n            boost::bind(&NodeInterface::schedulerCallback, this, _1)));\n        mSchedulerTimer->start();\n      } catch (std::exception& ex) {\n        std::cout << ex.what() << std::endl;\n        throw ex;\n      }\n    }\n\n    int NodeInterface::run()\n    {\n      ros::spin();\n      mRunModel = false;\n      return 0;\n    }\n\n    boolean_T NodeInterface::getStopRequestedFlag(void)\n    {\n\n#ifndef rtmGetStopRequested\n\n      return (!(rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M)\n                == (NULL)));\n\n#else\n\n      return (!(rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M)\n                == (NULL)) || rtmGetStopRequested\n              (ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M));\n\n#endif\n\n    }\n\n    void NodeInterface::terminate(void)\n    {\n      if (mBaseRateThread.get()) {\n        mBaseRateSem.notify();\n        mBaseRateThread->join();\n        mRunModel = false;\n        mBaseRateThread.reset();\n        if (mSchedulerTimer.get()) {\n          mSchedulerTimer->stop();\n          mSchedulerTimer.reset();\n        }\n\n        ctrl_TT_ad_ctrl_cpp_ros_feedback_1_terminate();\n        mNode.reset();\n      }\n    }\n\n    //\n    // Scheduler Task using ROS Wall clock timer to run base-rate\n    //\n    void NodeInterface::schedulerCallback(const ros::WallTimerEvent& ev)\n    {\n      if (mRunModel) {\n        mBaseRateSem.notify();\n      }\n    }\n\n    // Base-rate task\n    void NodeInterface::baseRateTask(void)\n    {\n      mRunModel = (rtmGetErrorStatus(ctrl_TT_ad_ctrl_cpp_ros_feedback_1_M) ==\n                   (NULL));\n      while (mRunModel) {\n        mBaseRateSem.wait();\n\n#ifdef MW_DEBUG_LOG\n\n        ROS_INFO(\"** Base rate task semaphore received\\n\");\n\n#endif\n\n        if (!mRunModel)\n          break;\n        ctrl_TT_ad_ctrl_cpp_ros_feedback_1_step();\n        mRunModel = !NodeInterface::getStopRequestedFlag();\n      }\n\n      // Shutdown the ROS node\n      ros::shutdown();\n    }\n  }                                    //namespace matlab\n}                                      //namespace ros\n\n#ifdef _MSC_VER\n\n#pragma warning(pop)\n\n#else\n\n#pragma GCC diagnostic pop\n\n#endif                                 //_MSC_VER\n"},{"name":"rosnodeinterface.h","type":"header","group":"other","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"//\n// File rosnodeinterface.h\n//\n// Code generated for Simulink model 'ctrl_TT_ad_ctrl_cpp_ros_feedback_1'.\n//\n// Model version                  : 10.23\n// Simulink Coder version         : 9.8 (R2022b) 13-May-2022\n// C/C++ source code generated on : Mon Jun 19 10:52:24 2023\n//\n\n#ifndef _ROS_MATLAB_NODEINTERFACE_\n#define _ROS_MATLAB_NODEINTERFACE_\n#ifdef _MSC_VER\n\n#pragma warning(push)\n#pragma warning(disable : 4265)\n#pragma warning(disable : 4458)\n#pragma warning(disable : 4100)\n\n#else\n\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wpedantic\"\n#pragma GCC diagnostic ignored \"-Wunused-local-typedefs\"\n#pragma GCC diagnostic ignored \"-Wredundant-decls\"\n#pragma GCC diagnostic ignored \"-Wnon-virtual-dtor\"\n#pragma GCC diagnostic ignored \"-Wunused-parameter\"\n#pragma GCC diagnostic ignored \"-Wunused-variable\"\n#pragma GCC diagnostic ignored \"-Wshadow\"\n\n#endif                                 //_MSC_VER\n\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\"\n#include <thread>\n#include <atomic>\n#include <chrono>\n#include <utility>\n#include <mutex>\n#include <condition_variable>\n#include <ros/ros.h>\n\nnamespace ros\n{\n  namespace matlab\n  {\n    //Semaphore using std::CV and std::mutex\n    class Semaphore {\n     public:\n      std::mutex mMutex;\n      std::condition_variable mCV;\n      std::atomic_uint mCount;\n\n      //\n      Semaphore(int count = 0)\n        : mCount(count)\n      {\n      }\n\n      //\n      inline void notify()\n      {\n        std::unique_lock<std::mutex> lock(mMutex);\n        mCount++;\n        mCV.notify_all();\n      }\n\n      //\n      inline void wait()\n      {\n        std::unique_lock<std::mutex> lock(mMutex);\n        while (mCount == 0) {\n          mCV.wait(lock);\n        }\n\n        if (mCount)\n          mCount--;\n      }\n    };\n\n    //NodeInterface\n    class NodeInterface {\n      NodeInterface(const NodeInterface& );\n      NodeInterface& operator= (const NodeInterface& );\n\n      //\n      std::shared_ptr<ros::NodeHandle> mNode;\n      Semaphore mBaseRateSem;\n      std::shared_ptr<std::thread> mBaseRateThread;\n      std::shared_ptr<ros::WallTimer> mSchedulerTimer;\n\n      //\n      //\n      Semaphore mStopSem;\n      volatile boolean_T mRunModel;\n     public:\n      NodeInterface();\n      ~NodeInterface();\n\n      //\n      void initialize(int argc, char ** argv);\n      int run();\n      void stop(void);\n      void terminate(void);\n\n      //\n      boolean_T getStopRequestedFlag(void);\n      void schedulerCallback(const ros::WallTimerEvent& ev);\n      void baseRateTask(void);\n      std::shared_ptr<ros::NodeHandle> getNode()\n      {\n        return mNode;\n      }\n    };                                 //class NodeInterface\n\n    std::shared_ptr<ros::matlab::NodeInterface> getNodeInterface();\n  }                                    //namespace matlab\n}                                      //namespace ros\n\n#ifdef _MSC_VER\n\n#pragma warning(pop)\n\n#else\n\n#pragma GCC diagnostic pop\n\n#endif                                 //_MSC_VER\n#endif                                 //_ROS_MATLAB_ROS2CGEN_MULTIRATE_\n"},{"name":"slros_busmsg_conversion.cpp","type":"source","group":"legacy","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#include \"slros_busmsg_conversion.h\"\n\n\n// Conversions between SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 and std_msgs::Float64\n\nvoid convertFromBus(std_msgs::Float64* msgPtr, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 const* busPtr)\n{\n  const std::string rosMessageType(\"std_msgs/Float64\");\n\n  msgPtr->data =  busPtr->Data;\n}\n\nvoid convertToBus(SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64* busPtr, std_msgs::Float64 const* msgPtr)\n{\n  const std::string rosMessageType(\"std_msgs/Float64\");\n\n  busPtr->Data =  msgPtr->data;\n}\n\n"},{"name":"slros_busmsg_conversion.h","type":"header","group":"other","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _SLROS_BUSMSG_CONVERSION_H_\n#define _SLROS_BUSMSG_CONVERSION_H_\n\n#include <ros/ros.h>\n#include <std_msgs/Float64.h>\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\"\n#include \"slros_msgconvert_utils.h\"\n\n\nvoid convertFromBus(std_msgs::Float64* msgPtr, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64 const* busPtr);\nvoid convertToBus(SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64* busPtr, std_msgs::Float64 const* msgPtr);\n\n\n#endif\n"},{"name":"slros_generic_param.cpp","type":"source","group":"legacy","path":"/usr/local/MATLAB/R2022b/toolbox/ros/codertarget/src","tag":"","groupDisplay":"Other files","code":"/* Copyright 2015-2018 The MathWorks, Inc. */\n\n#include \"slros_generic_param.h\"\n\n/**\n * Initialize the parameter getter class.\n * @param pName The name of the ROS parameter\n */\nvoid SimulinkParameterGetterBase::initialize(const std::string& pName) {\n    nodePtr = SLROSNodePtr;\n    paramName = pName;\n    hasValidValue = false;\n}\n\n/**\n * Initialize the constants for the error codes.\n * @param codeSuccess Error code that should be emitted if parameter is retrieved successfully\n * @param codeNoParam Error code if parameter with given name does not exist on server\n * @param codeTypeMismatch Error code if parameter exists on server, but has a different data type\n * @param codeArrayTruncate Error code if received array was truncated\n */\nvoid SimulinkParameterGetterBase::initialize_error_codes(uint8_t codeSuccess,\n                                                         uint8_t codeNoParam,\n                                                         uint8_t codeTypeMismatch,\n                                                         uint8_t codeArrayTruncate) {\n    // Initialize the error codes\n    errorCodeSuccess = codeSuccess;\n    errorCodeNoParam = codeNoParam;\n    errorCodeTypeMismatch = codeTypeMismatch;\n    errorCodeArrayTruncate = codeArrayTruncate;\n}\n"},{"name":"slros_initialize.cpp","type":"source","group":"legacy","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#include \"slros_initialize.h\"\n\nros::NodeHandle * SLROSNodePtr;\nconst std::string SLROSNodeName = \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1\";\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45555;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe1\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45560;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe10\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45606;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe11\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45611;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe2\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45565;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe3\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45570;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe4\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45575;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe5\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45581;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe6\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45586;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe7\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45591;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe8\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45596;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe9\nSimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45601;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish\nSimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45530;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish1\nSimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45539;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish2\nSimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45545;\n\nvoid slros_node_init(int argc, char** argv)\n{\n  ros::init(argc, argv, SLROSNodeName);\n  SLROSNodePtr = new ros::NodeHandle();\n}\n\n"},{"name":"slros_initialize.h","type":"header","group":"other","path":"/local/vol00/home/vpetrov/dev/smlk_bsd_auv/bsd_auv_tr_sim_v0_1/ctrl_TT_ad_ctrl_cpp_ros_feedback_1_ert_rtw","tag":"","groupDisplay":"Other files","code":"#ifndef _SLROS_INITIALIZE_H_\n#define _SLROS_INITIALIZE_H_\n\n#include \"slros_busmsg_conversion.h\"\n#include \"slros_generic.h\"\n#include \"ctrl_TT_ad_ctrl_cpp_ros_feedback_1_types.h\"\n\nextern ros::NodeHandle * SLROSNodePtr;\nextern const std::string SLROSNodeName;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45555;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe1\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45560;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe10\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45606;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe11\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45611;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe2\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45565;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe3\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45570;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe4\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45575;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe5\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45581;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe6\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45586;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe7\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45591;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe8\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45596;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Subscribe9\nextern SimulinkSubscriber<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Sub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45601;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish\nextern SimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45530;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish1\nextern SimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45539;\n\n// For Block ctrl_TT_ad_ctrl_cpp_ros_feedback_1/Publish2\nextern SimulinkPublisher<std_msgs::Float64, SL_Bus_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_std_msgs_Float64> Pub_ctrl_TT_ad_ctrl_cpp_ros_feedback_1_45545;\n\nvoid slros_node_init(int argc, char** argv);\n\n#endif\n"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":false,"showJustificationLinks":false,"showProfilingInfo":false,"showTaskSummary":false}};